/**
 * CUsuariosFrame.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.geopista.app.administrador.usuarios;


/**
 * Created by IntelliJ IDEA.
 * User: angeles
 * Date: 26-may-2004
 * Time: 19:14:20
 */
import java.awt.BorderLayout;
import java.util.ResourceBundle;

import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import org.apache.log4j.Logger;

import com.geopista.app.administrador.init.Constantes;
import com.geopista.protocol.administrador.Entidad;
import com.geopista.protocol.administrador.ListaAcl;
import com.geopista.protocol.administrador.ListaApp;
import com.geopista.protocol.administrador.ListaEntidades;
import com.geopista.protocol.administrador.ListaRoles;
import com.geopista.protocol.administrador.ListaUsuarios;
import com.geopista.protocol.administrador.OperacionesAdministrador;


public class CUsuariosFrame extends javax.swing.JInternalFrame {
	Logger logger = Logger.getLogger(CUsuariosFrame.class);
    private ListaRoles listaRoles= null;
    private ListaAcl listaAcl=null;
    private ListaApp listaApp=null;
    private ListaUsuarios listaUsuarios;
    private ListaEntidades listaEntidades;
    private JFrame framePadre;

	public CUsuariosFrame(ResourceBundle messages, JFrame framePadre) {
        this.framePadre = framePadre;
        initListas();
		initComponents(messages);

    }
    public void editable(boolean b)
    {
        jPanelUsuarios.editable(b);
        jPanelRoles.editable(b);
    }
    
    
  
    
  
    
    
    public boolean changeScreenLang(ResourceBundle messages) {
        setTitle(messages.getString("CUsuariosFrame.title"));

        salirJButton.setText(messages.getString("CUsuariosFrame.salirJButton"));
        salirJButton.setToolTipText(messages.getString("CUsuariosFrame.salirJButton"));
        jPanelRoles.changeScreenLang(messages);
        jPanelUsuarios.changeScreenLang(messages);
        return true;
	}
	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents(ResourceBundle messages) {//GEN-BEGIN:initComponents



        templateJScrollPane = new javax.swing.JScrollPane();
        templateJPanel = new javax.swing.JPanel();
        usuariosRolesJTabbedPane = new javax.swing.JTabbedPane();
        salirJButton = new javax.swing.JButton();
        jPanelUsuarios = new JPanelUsuarios(messages, framePadre);
        jPanelRoles = new JPanelRoles(messages,framePadre);
        botoneraJPanel = new javax.swing.JPanel();
        usuariosRolesJTabbedPane.addTab(messages.getString("CUsuariosFrame.usuariosRolesJTabbedPane.usuarios"), jPanelUsuarios);
        usuariosRolesJTabbedPane.addChangeListener(new ChangeListener() {
            // This method is called whenever the selected tab changes

        public void stateChanged(ChangeEvent evt) {
                         JTabbedPane pane = (JTabbedPane)evt.getSource();
         // Get current tab
                int sel = pane.getSelectedIndex();
                //JOptionPane optionPane= new JOptionPane("el tab seleccionado es:"+sel,JOptionPane.ERROR_MESSAGE);
                //JDialog dialog =optionPane.createDialog(null,"Error de Autenticación");
                //dialog.show();
                if (sel==0)
                {
                    listaRoles=jPanelRoles.getListaRoles();
                    jPanelUsuarios.pintarRolesUsuario(listaRoles);
                }
            }
        });

        templateJPanel.setLayout(new BorderLayout());
        botoneraJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botoneraJPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        salirJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir();
            }
        });

        botoneraJPanel.add(salirJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 90, -1));

        //templateJPanel.add(botoneraJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 590, 990, 40));
        templateJPanel.add(botoneraJPanel, java.awt.BorderLayout.SOUTH);

        usuariosRolesJTabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        usuariosRolesJTabbedPane.setFont(new java.awt.Font("Arial", 0, 10));
        usuariosRolesJTabbedPane.addTab(messages.getString("CUsuariosFrame.usuariosRolesJTabbedPane.roles"), jPanelRoles);

        //templateJPanel.add(usuariosRolesJTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 580));
          templateJPanel.add(usuariosRolesJTabbedPane, java.awt.BorderLayout.CENTER);


        templateJScrollPane.setViewportView(templateJPanel);

        getContentPane().add(templateJScrollPane, java.awt.BorderLayout.CENTER);

        pintarApps();
        //pintarPermisos();        
        //pintarAcls();
        jPanelUsuarios.pintarUsuarios(listaUsuarios);
        jPanelUsuarios.pintarRolesUsuario(listaRoles);
        jPanelUsuarios.pintarEntidades(listaEntidades);
        jPanelRoles.pintarRoles(listaRoles);
        changeScreenLang(messages);
    }//GEN-END:initComponents
    private void initListas()
    {
        try
        {
             //Inicializamos las listas
        	
        	listaApp=new OperacionesAdministrador(Constantes.url).getApps();
        	//listaAcl=new OperacionesAdministrador(Constantes.url).getAcls();
        	listaRoles=new OperacionesAdministrador(Constantes.url).getRoles(Constantes.idEntidad);
    		
    		
        	if (Constantes.idEntidad == 0){
        		
        		listaUsuarios = new OperacionesAdministrador(Constantes.url).getListaUsuarios();
        		listaEntidades = new OperacionesAdministrador(Constantes.url).getListaEntidades();
        	}
        	else{
        		listaUsuarios = new OperacionesAdministrador(Constantes.url).getUsuarios(Constantes.idEntidad);
        		Entidad entidad = new OperacionesAdministrador(Constantes.url).getEntidad(String.valueOf(Constantes.idEntidad));
        		listaEntidades = new ListaEntidades();
        		listaEntidades.add(entidad);
        	}
        }catch(Exception e)
		 {
		       logger.error("Error al inicializa las listas: "+e.toString());
               JOptionPane optionPane= new JOptionPane(e.getMessage(),JOptionPane.ERROR_MESSAGE);
               JDialog dialog =optionPane.createDialog(this,"");
               dialog.show();
		 }
    }

    private void salir() {
        dispose();
    }

    //NUEVO
    private void pintarApps()
    {
        try
        {
             if (listaApp==null) return;
             jPanelUsuarios.pintarApps(listaApp);
             jPanelRoles.pintarApps(listaApp);
        }catch(Exception e)
        {
            logger.error("Error al pintar los Acls: "+e.toString());
        }
    }
    //FIN NUEVO
    
    private void pintarAcls()
       {
           try
           {
                if (listaAcl==null) return;
                jPanelUsuarios.pintarAcls(listaAcl);
                jPanelRoles.pintarAcls(listaAcl);
           }catch(Exception e)
           {
               logger.error("Error al pintar los permisos: "+e.toString());
           }
       }




	public boolean excedeLongitud(String campo, int maxLengthPermitida) {
		if (campo.length() > maxLengthPermitida)
			return true;
		else
			return false;
	}


	/*********************************************************************/

	/**
	 * Exit the Application
	 */
	/*private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        try
        {
              com.geopista.security.SecurityManager.logout();
        }catch(Exception ex)
        {
            logger.error("Error al realizar la desconexión:"+ex.toString());
            JOptionPane optionPane= new JOptionPane(ex.getMessage(),JOptionPane.ERROR_MESSAGE);
            JDialog dialog =optionPane.createDialog(this,"");
            dialog.show();
        }

		System.exit(0);
	}//GEN-LAST:event_exitForm*/

    // Variables declaration - do not modify//GEN-BEGIN:variables

    private JPanelRoles jPanelRoles;
    private JPanelUsuarios  jPanelUsuarios;
    private javax.swing.JButton salirJButton;
    private javax.swing.JPanel templateJPanel;
    private javax.swing.JScrollPane templateJScrollPane;
    private javax.swing.JTabbedPane usuariosRolesJTabbedPane;
    private javax.swing.JPanel botoneraJPanel;



    // End of variables declaration//GEN-END:variables

}

