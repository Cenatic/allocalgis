//INFRAESTRUCTURA VIARIA (2.4.1 - 2.4.3)
// Este fichero puede ser referenciado en la cadena de ejecucion como 6 parametro:

//--------------------------------------------------------------------------------------------------
// Relacion1  (2.4.1):
// ddbb: auxiliar_viarias
// shp: VI_INFRAEST_VIARIAS
// LOCALGIS EIEL DB: eiel_c_redviaria_tu

//Indica si tenemos que hacer la relacionX, tiene que aparecer siempre en cada relacion, si no aparece terminaria la carga:
relacion1.hacer=SI

//Indica de donde viene la información de shp, de bbdd o de shp_bbdd:
relacion1.origen.tipo=shp_bbdd

//Nombre de la BD de destino de LocalGIS EIEL
relacion1.destino.nombre=eiel_c_redviaria_tu
relacion1.destino.id_municipio=id_municipio
relacion1.destino.camposingeometria=obra_ejec

//CAMPOS PK (NO SE USAN EN LA QUERY DE INSERCION)
relacion1.shp.pk1=MUNICIPIO
relacion1.shp.pk2=ENTIDAD
relacion1.shp.pk3=NUCLEO
relacion1.shp.pk4=ESTADO
relacion1.shp.pk5=TIPO_INFR
relacion1.shp.pk6=PROVINCIA
relacion1.shp.pk7=DENOMINAC1

//CAMPOS PK (NO SE USAN EN LA QUERY DE INSERCION)
relacion1.bbdd.pk1=municipio
relacion1.bbdd.pk2=entidad
relacion1.bbdd.pk3=nucleo
relacion1.bbdd.pk4=estado
relacion1.bbdd.pk5=tipo_infr
relacion1.bbdd.pk6=provincia
relacion1.bbdd.pk7=denominaci

//Caracteristica de las claves primarias
relacion1.shp.pk4.caracteristica=FILTRO
relacion1.shp.pk5.caracteristica=FILTRO

//Asociacion de los filtros de las claves primarias
relacion1.shp.pk4.filtro.origen=BUENO,MAL,NO PAVIMENTADO,REGULAR,EN EJECUCIÓN,REGULAR,REGULAR,BUENO,NO PAVIMENTADO,BUENO,MAL,MAL,BUENO,REGULAR,EN EJECUCION,BUENO,BUENO,EN EJECUCION,EN EJECUCION
relacion1.shp.pk4.filtro.destino=B,M,NP,R,E,B,M,M,B,NP,NP,R,R,B,E,R,NP,B,B

relacion1.shp.pk5.filtro.origen=CALLES O PLAZAS,OTROS,TRAVESIAS,TR,CALLE,OTROS,OTROS,TR
relacion1.shp.pk5.filtro.destino=CA,OT,TR,TR,TR,TR,CA,CA

//-----------shp------------>

// Datos del shp, del que se van a sacar los datos:
relacion1.shp.origen.nombre=VI_INFRAEST_VIARIAS.shp
//CAMPOS FIJOS
relacion1.shp.origen.columna1.valor=nextval('seq_eiel_c_redviaria_tu')
relacion1.shp.origen.columna2.valor=1
relacion1.shp.origen.columna3.valor=RV
relacion1.shp.origen.columna4.valor=0
//CAMPOS CON INFO DE shp
relacion1.shp.origen.columna5.valor=GEOMETRY
relacion1.shp.origen.columna6.valor=PROVINCIA
relacion1.shp.origen.columna7.valor=MUNICIPIO
relacion1.shp.origen.columna8.valor=ENTIDAD
relacion1.shp.origen.columna9.valor=NUCLEO

// Indicamos alguna caracteristica de la columna:
relacion1.shp.origen.columna1.caracteristica=FIJO
relacion1.shp.origen.columna2.caracteristica=FIJO
relacion1.shp.origen.columna3.caracteristica=FIJO
relacion1.shp.origen.columna4.caracteristica=FIJO

// Indica el tipo de los datos:
// STRING: Para que al formar el insert aparezcan los ''.
// GEOMETRY: Para que al formar el insert aparezca: transform(geomfromtext("GEOMETRY", sridOrigen, sridDestino))
relacion1.shp.origen.columna3.tipo=STRING
relacion1.shp.origen.columna5.tipo=GEOMETRY
relacion1.shp.origen.columna6.tipo=STRING
relacion1.shp.origen.columna7.tipo=STRING
relacion1.shp.origen.columna8.tipo=STRING
relacion1.shp.origen.columna9.tipo=STRING

// Datos de la bbdd de LocalGIS, donde se van a copiar los datos:
relacion1.shp.destino.columna1=id
relacion1.shp.destino.columna2=tramo_vu
relacion1.shp.destino.columna3=clave
relacion1.shp.destino.columna4=longitud
relacion1.shp.destino.columna5=\"GEOMETRY\"
relacion1.shp.destino.columna6=codprov
relacion1.shp.destino.columna7=codmunic
relacion1.shp.destino.columna8=codentidad
relacion1.shp.destino.columna9=codpoblamiento

// SRID origen y SRID destino para hacer una transformacion:
relacion1.shp.sriddestino=4230
 
 
//-----------bbdd----------->
 
// Datos de la bbdd origen, de la que se van a sacar los datos:
relacion1.bbdd.origen.nombre=auxiliar_viarias

//CAMPOS CON INFO DE bbdd
//REPASAR REFERENCIA ancho_006 en insert final
relacion1.bbdd.origen.columna1.valor=0
relacion1.bbdd.origen.columna2.valor=tipo_infr
relacion1.bbdd.origen.columna3.valor=denominaci
relacion1.bbdd.origen.columna4.valor=ancho_006
relacion1.bbdd.origen.columna5.valor=estado
relacion1.bbdd.origen.columna6.valor=viv_afecta
relacion1.bbdd.origen.columna7.valor=notas

relacion1.bbdd.origen.columna1.caracteristica=FIJO

// Indica el tipo de los datos:
// STRING: Para que al formar el insert aparezcan los ''.
relacion1.bbdd.origen.columna2.tipo=STRING
relacion1.bbdd.origen.columna3.tipo=STRING
relacion1.bbdd.origen.columna5.tipo=STRING
relacion1.bbdd.origen.columna7.tipo=STRING

// Datos de la bbdd de LocalGIS, donde se van a copiar los datos:
relacion1.bbdd.destino.columna1=superficie
relacion1.bbdd.destino.columna2=tipo
relacion1.bbdd.destino.columna3=denominacion
relacion1.bbdd.destino.columna4=ancho
relacion1.bbdd.destino.columna5=estado
relacion1.bbdd.destino.columna6=viviendas_afec
relacion1.bbdd.destino.columna7=observ

//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Relacion2  (2.4.2):
// ddbb: tramo_carretera
// shp: VI_CARRETERAS
// LOCALGIS EIEL DB: eiel_c_tramos_carreteras 

//Indica si tenemos que hacer la relacionX, tiene que aparecer siempre en cada relacion, si no aparece terminaria la carga:
relacion2.hacer=SI

//Indica de donde viene la información de shp, de bbdd o de shp_bbdd:
relacion2.origen.tipo=shp_bbdd

//Nombre de la BD de destino de LocalGIS EIEL
relacion2.destino.nombre=eiel_c_tramos_carreteras
relacion2.destino.id_municipio=id_municipio
relacion2.destino.camposingeometria=observ

//CAMPOS PK (NO SE USAN EN LA QUERY DE INSERCION)
relacion2.shp.pk1=CODIGO
relacion2.shp.pk2=KILOMETRO1
relacion2.shp.pk3=KILOMETRO_
relacion2.shp.pk4=PROVINCIA
relacion2.shp.pk5=MUNICIPIO

//CAMPOS PK (NO SE USAN EN LA QUERY DE INSERCION)
relacion2.bbdd.pk1=codigo
relacion2.bbdd.pk2=kilometro_inicial
relacion2.bbdd.pk3=kilometro_final
relacion2.bbdd.pk4=provincia
relacion2.bbdd.pk5=municipio

//-----------shp------------>

// Datos del shp, del que se van a sacar los datos:
relacion2.shp.origen.nombre=VI_CARRETERAS.shp
//CAMPOS FIJOS
relacion2.shp.origen.columna1.valor=nextval('seq_eiel_c_tramos_carreteras')
//CAMPOS CON INFO DE shp
relacion2.shp.origen.columna2.valor=0
relacion2.shp.origen.columna3.valor=GEOMETRY
relacion2.shp.origen.columna4.valor=PROVINCIA
relacion2.shp.origen.columna5.valor=MUNICIPIO
relacion2.shp.origen.columna6.valor=MUY_SINUOS
relacion2.shp.origen.columna7.valor=DIMENSIONA
relacion2.shp.origen.columna8.valor=ESTADO
relacion2.shp.origen.columna9.valor=FIRME
relacion2.shp.origen.columna10.valor=GESTION
relacion2.shp.origen.columna11.valor=FRECUENTES
relacion2.shp.origen.columna12.valor=PENDIENTE_
relacion2.shp.origen.columna13.valor=SENALIZACI

// Indicamos alguna caracteristica de la columna:
relacion2.shp.origen.columna1.caracteristica=FIJO
relacion2.shp.origen.columna2.caracteristica=FIJO

// Indica el tipo de los datos:
relacion2.shp.origen.columna3.tipo=GEOMETRY
relacion2.shp.origen.columna4.tipo=STRING
relacion2.shp.origen.columna5.tipo=STRING
relacion2.shp.origen.columna6.tipo=STRING
relacion2.shp.origen.columna7.tipo=STRING
relacion2.shp.origen.columna8.tipo=STRING
relacion2.shp.origen.columna9.tipo=STRING
relacion2.shp.origen.columna10.tipo=STRING
relacion2.shp.origen.columna11.tipo=STRING
relacion2.shp.origen.columna12.tipo=STRING
relacion2.shp.origen.columna13.tipo=STRING


// Datos de la bbdd de LocalGIS, donde se van a copiar los datos:
relacion2.shp.destino.columna1=id
relacion2.shp.destino.columna2=longitud
relacion2.shp.destino.columna3=\"GEOMETRY\"
relacion2.shp.destino.columna4=codprov
relacion2.shp.destino.columna5=codmunic
relacion2.shp.destino.columna6=muy_sinuoso
relacion2.shp.destino.columna7=dimensiona
relacion2.shp.destino.columna8=estado
relacion2.shp.destino.columna9=firme
relacion2.shp.destino.columna10=gestor
relacion2.shp.destino.columna11=fre_estrech
relacion2.shp.destino.columna12=pte_excesiva
relacion2.shp.destino.columna13=senaliza


//Asociacion de los filtros de las claves primarias
dimensiona.filtro.origen=BIEN DIMENSIONADA,MAL DIMENSIONADA,REGULAR DIMENSIONADA
dimensiona.filtro.destino=BD,MD,RD

estado.filtro.origen=BUENO,REGULAR,MAL
estado.filtro.destino=B,R,M

firme.filtro.origen=ADOQUÍN,HORMIGON,MEZCLA BITUMINOSA,MACADÁM,OTROS,RIESGOS ASFÁLTICOS,TIERRA,ZAHORA ESTABILIZADA,RIEGOS ASFÁLTICOS
firme.filtro.destino=AD,HR,MB,MC,OT,RA,TI,ZE,RA

gestor.filtro.origen=COMUNIDAD AUTÓNOMA,ESTADO,MUNICIPAL,OTROS,PROVINCIAL/INSULAR,NO
gestor.filtro.destino=CA,ES,MU,OT,PR,NO

senaliza.filtro.origen=AMBAS,HORIZONTAL,NINGUNA,VERTICAL
senaliza.filtro.destino=A,H,N,V

// SRID origen y SRID destino para hacer una transformacion:
relacion2.shp.sriddestino=4230
 
 
//-----------bbdd----------->
 
// Datos de la bbdd origen, de la que se van a sacar los datos:
relacion2.bbdd.origen.nombre=tramo_carretera
// Indicamos alguna condicion (Comentar si no la usamos):
//relacion2.bbdd.origen.where=where pozos<>'NO'

//CAMPOS CON INFO DE bbdd
relacion2.bbdd.origen.columna1.valor=codigo
relacion2.bbdd.origen.columna2.valor=kilometro_inicial
relacion2.bbdd.origen.columna3.valor=kilometro_final
relacion2.bbdd.origen.columna4.valor=gestion
relacion2.bbdd.origen.columna5.valor=senalizacion
relacion2.bbdd.origen.columna6.valor=firme
relacion2.bbdd.origen.columna7.valor=estado
relacion2.bbdd.origen.columna8.valor=ancho
relacion2.bbdd.origen.columna9.valor=pasos_nivel
relacion2.bbdd.origen.columna10.valor=dimensionado
relacion2.bbdd.origen.columna11.valor=muy_sinuoso
relacion2.bbdd.origen.columna12.valor=pendiente_excesiva
relacion2.bbdd.origen.columna13.valor=frecuentes_estrechamientos

// Indica el tipo de los datos:
// STRING: Para que al formar el insert aparezcan los ''.
relacion2.bbdd.origen.columna1.tipo=STRING
relacion2.bbdd.origen.columna4.tipo=STRING
relacion2.bbdd.origen.columna5.tipo=STRING
relacion2.bbdd.origen.columna6.tipo=STRING
relacion2.bbdd.origen.columna7.tipo=STRING
relacion2.bbdd.origen.columna10.tipo=STRING
relacion2.bbdd.origen.columna11.tipo=STRING
relacion2.bbdd.origen.columna12.tipo=STRING
relacion2.bbdd.origen.columna13.tipo=STRING

// Datos de la bbdd de LocalGIS, donde se van a copiar los datos:
relacion2.bbdd.destino.columna1=cod_carrt
relacion2.bbdd.destino.columna2=pki
relacion2.bbdd.destino.columna3=pkf
relacion2.bbdd.destino.columna4=gestor
relacion2.bbdd.destino.columna5=senaliza
relacion2.bbdd.destino.columna6=firme
relacion2.bbdd.destino.columna7=estado
relacion2.bbdd.destino.columna8=ancho
relacion2.bbdd.destino.columna9=paso_nivel
relacion2.bbdd.destino.columna10=dimensiona
relacion2.bbdd.destino.columna11=muy_sinuoso
relacion2.bbdd.destino.columna12=pte_excesiva
relacion2.bbdd.destino.columna13=fre_estrech

//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Relacion3 (2.4.3):
// ddbb: tramo_carretera y carretera
// LOCALGIS EIEL DB: eiel_t_carreteras

//Indica si tenemos que hacer la relacionX, tiene que aparecer siempre en cada relacion, si no aparece terminaria la carga:
relacion3.hacer=SI

//Indica de donde viene la información de shp, de bbdd o de shp_bbdd:
relacion3.origen.tipo=bbdd

//Nombre de la BD de destino de LocalGIS EIEL
relacion3.destino.nombre=eiel_t_carreteras
relacion3.destino.id_municipio=id_municipio
 
//-----------bbdd----------->
 
// Datos de la bbdd origen, de la que se van a sacar los datos:
relacion3.bbdd.origen.nombre=tramo_carretera INNER JOIN carretera ON (tramo_carretera.codigo=carretera.codigo)

//CAMPOS CON INFO DE bbdd
relacion3.bbdd.origen.columna1.valor=nextval('seq_eiel_t_carreteras')
relacion3.bbdd.origen.columna2.valor=tramo_carretera.provincia
relacion3.bbdd.origen.columna3.valor=tramo_carretera.codigo
relacion3.bbdd.origen.columna4.valor=tramo_carretera.kilometro_inicial
relacion3.bbdd.origen.columna5.valor=tramo_carretera.kilometro_final
relacion3.bbdd.origen.columna6.valor=carretera.denominacion
relacion3.bbdd.origen.columna7.valor=tramo_carretera.titular

relacion3.bbdd.origen.columna1.caracteristica=FIJO

// Indica el tipo de los datos:
// STRING: Para que al formar el insert aparezcan los ''.
relacion3.bbdd.origen.columna2.tipo=STRING
relacion3.bbdd.origen.columna3.tipo=STRING
relacion3.bbdd.origen.columna6.tipo=STRING
relacion3.bbdd.origen.columna7.tipo=STRING

// Datos de la bbdd de LocalGIS, donde se van a copiar los datos:
relacion3.bbdd.destino.columna1=id
relacion3.bbdd.destino.columna2=codprov
relacion3.bbdd.destino.columna3=cod_carrt
relacion3.bbdd.destino.columna4=pki
relacion3.bbdd.destino.columna5=pkf
relacion3.bbdd.destino.columna6=denominacion
relacion3.bbdd.destino.columna7=titular_via

//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Relacion4 (2.4.1) (ACTUALIZACIONES):
// LOCALGIS EIEL DB: eiel_c_redviaria_tu 

//Indica si tenemos que hacer la relacionX, tiene que aparecer siempre en cada relacion, si no aparece terminaria la carga:
relacion4.hacer=SI

//Indica de donde viene la información de shp, de bbdd o de shp_bbdd:
relacion4.origen.tipo=sql_query
relacion4.destino.nombre=eiel_c_redviaria_tu

relacion4.destino.id_municipio=id_municipio

//Consulta de actualizacion
relacion4.sqlquery1=UPDATE eiel_c_redviaria_tu SET longitud=length(transform("GEOMETRY",#srid_municipio#)) WHERE "GEOMETRY" IS NOT NULL

relacion4.sqlquery2=UPDATE eiel_c_redviaria_tu SET superficie=(longitud*ancho)
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Relacion5 (2.4.2) (ACTUALIZACIONES):
// LOCALGIS EIEL DB: eiel_c_tramos_carreteras  

//Indica si tenemos que hacer la relacionX, tiene que aparecer siempre en cada relacion, si no aparece terminaria la carga:
relacion5.hacer=SI

//Indica de donde viene la información de shp, de bbdd o de shp_bbdd:
relacion5.origen.tipo=sql_query
relacion5.destino.nombre=eiel_c_tramos_carreteras

relacion5.destino.id_municipio=id_municipio

//Consulta de actualizacion
relacion5.sqlquery1=UPDATE eiel_c_tramos_carreteras SET longitud=length(transform("GEOMETRY",#srid_municipio#)) WHERE "GEOMETRY" IS NOT NULL
//--------------------------------------------------------------------------------------------------