/**
 * DefuncionJDialog.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.geopista.app.cementerios.panel;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.ButtonGroup;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumn;

import com.geopista.app.AppContext;
import com.geopista.app.cementerios.Constantes;
import com.geopista.app.cementerios.Estructuras;
import com.geopista.app.cementerios.PlazasUnidadTableModel;
import com.geopista.app.cementerios.RenderComun;
import com.geopista.app.cementerios.utils.Validation;
import com.geopista.app.utilidades.TableSorted;
import com.geopista.protocol.administrador.dominios.DomainNode;
import com.geopista.protocol.cementerios.ConcesionBean;
import com.geopista.protocol.cementerios.DatosFallecimientoBean;
import com.geopista.protocol.cementerios.DifuntoBean;
import com.geopista.protocol.cementerios.PersonaBean;
import com.geopista.protocol.cementerios.PlazaBean;
import com.geopista.protocol.cementerios.UnidadEnterramientoBean;
import com.geopista.util.ApplicationContext;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DefuncionJDialog.java
 *
 * Created on 17-mar-2011, 16:02:23
 */
/**
 *
 * @author yraton
 */
public class DefuncionJDialog extends javax.swing.JDialog {

    /** Creates new form DefuncionJDialog */
	private static final long serialVersionUID = 1L;
	private String operacion;
	private String tipo;
    private ApplicationContext aplicacion;
    private javax.swing.JFrame desktop;
    
    private DifuntoBean difunto;
    private UnidadEnterramientoBean unidadSelected;
	private Vector listaSimple;
	private Vector listaConcesiones;
    
	private BotoneraAceptarCancelarJPanel botoneraAceptarCancelarJPanel;
    private ArrayList actionListeners= new ArrayList();
    private String locale;
    
    private ArrayList<PlazaBean> listaPlazasTabla;
    private PlazasUnidadTableModel plazasJTableModel;

	private TableSorted tableSorted;
    private PlazaBean plazaSelected;
	private boolean plazaDeselected = true;
    
    private int selectedRow= -1;
	public static final String DOBLE_CLICK="DOBLE_CLICK";

	private SimpleDateFormat fecha = new SimpleDateFormat("dd/MM/yyyy");

	private int patronContenedor = 0;
	private Vector vgrupos = new Vector();
	
	private static String nombre;
	private static String entidad;
	
	/** Creates new form BloqueJDialog */
    public DefuncionJDialog (JFrame desktop, String locale, String operacion,String tipo, Vector listasimple, Vector listaConcesiones) throws Exception{
    	super(desktop);
        this.desktop= desktop;
        this.locale= locale;
        this.operacion= operacion;
        this.tipo=tipo;
        this.listaSimple = listasimple;
        this.listaConcesiones = listaConcesiones;
        inicializar();
    }

    /** Creates new form BloqueJDialog */
    public DefuncionJDialog(JFrame desktop, String locale) throws Exception{
        super(desktop);
        this.desktop= desktop;
        this.locale= locale;
        inicializar();
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void inicializar() {
    	
    	
    	this.aplicacion = (AppContext) AppContext.getApplicationContext();
        getContentPane().setLayout(new BorderLayout());
        renombrarComponentes();
        setModal(true);

        desktop = new javax.swing.JFrame();
    	
        DefuncionJPanel = new javax.swing.JPanel();
        DatosGeneralesComunesJPanel = new javax.swing.JPanel();
        entidadJLabel = new javax.swing.JLabel();
        cementerioJLabel = new javax.swing.JLabel();
        entidadJTextField = new javax.swing.JTextField();
        cementerioJTextField = new javax.swing.JTextField();
        DatosDifuntoJPanel = new javax.swing.JPanel();
        DNIJLabel = new javax.swing.JLabel();
        DNIJTextField = new javax.swing.JTextField();
        NombreJLabel = new javax.swing.JLabel();
        codigoJLabel = new javax.swing.JLabel();
        codigoJTextField = new javax.swing.JTextField();
        
        grupoJLabel = new javax.swing.JLabel();
        grupoJComboBox = new javax.swing.JComboBox();
        
        medicoJLabel = new javax.swing.JLabel();
        medicoJTextField = new javax.swing.JTextField();
        medicoJTextField.setText("");
        
        domicilioJLabel = new javax.swing.JLabel();
        domicilioJTextField = new javax.swing.JTextField();
        poblacionDifuntoJLabel = new javax.swing.JLabel();
        poblacionDifuntoJTextField = new javax.swing.JTextField();
        datosDifuntoJSeparator = new javax.swing.JSeparator();
        nombreJTextField = new javax.swing.JTextField();
        numColegiadoJLabel = new javax.swing.JLabel();
        numColegiadoJTextField = new javax.swing.JTextField();
        numColegiadoJTextField.setText("");
        
        regCivilJTextField = new javax.swing.JTextField();
        regCivilJTextField.setText("");
        
        regiCivilJLabel = new javax.swing.JLabel();
        apellido2JTextField = new javax.swing.JTextField();
        apellido2JTextField.setText("");
        apellido2JLabel = new javax.swing.JLabel();
        apellido1JTextField = new javax.swing.JTextField();
        apellido1JTextField.setText("");
        apellido1JLabel = new javax.swing.JLabel();
        sexolJLabel = new javax.swing.JLabel();
        estadoCivilJLabel1 = new javax.swing.JLabel();
        
//        mujerJCheckBox = new javax.swing.JCheckBox();
//        hombreJCheckBox = new javax.swing.JCheckBox();
//        solteroJCheckBox = new javax.swing.JCheckBox();
//        casadoJCheckBox = new javax.swing.JCheckBox();

        mujerJRadioButton = new javax.swing.JRadioButton();
        hombreJRadioButton = new javax.swing.JRadioButton();
        solteroJRadioButton = new javax.swing.JRadioButton();
        casadoJRadioButton = new javax.swing.JRadioButton();

        ButtonGroup groupSexo = new ButtonGroup();
        groupSexo.add(mujerJRadioButton);
        groupSexo.add(hombreJRadioButton);
        
        ButtonGroup groupEstadocivil = new ButtonGroup();
        groupEstadocivil.add(solteroJRadioButton);
        groupEstadocivil.add(casadoJRadioButton);

        
        PestañaDifuntoJPanel = new javax.swing.JPanel();
        PestañaDifuntoJTabbedPane = new javax.swing.JTabbedPane();
        DatosTrasladoJPanel = new javax.swing.JPanel();
        ordenJudicialJCheckBox = new javax.swing.JCheckBox();
        ProcedimientoJLabel = new javax.swing.JLabel();
        procedimientoJTextField = new javax.swing.JTextField();
        lugarTrasladoJLabel = new javax.swing.JLabel();
        datosTrasladojScrollPane = new javax.swing.JScrollPane();
        lugarTrasladoJTextArea = new javax.swing.JTextArea();
        LocalizacionJPanel = new javax.swing.JPanel();
        localizacionJLabel = new javax.swing.JLabel();
        localizacionJTextField = new javax.swing.JTextField();
        inhumacionJlabel = new javax.swing.JLabel();
        fInhumacionJTextField = new JDateChooser(new Date());
        fInhumacionJTextField.setDateFormatString("dd/MM/yyyy");
        plazaJLabel = new javax.swing.JLabel();
        plazaJTextField = new javax.swing.JTextField();
        sitActualJLabel = new javax.swing.JLabel();
        sitActualJTextField = new javax.swing.JTextField();
        goLocalizacionJButton = new javax.swing.JButton();
        LapidaJPanel = new javax.swing.JPanel();
        empresaJLabel = new javax.swing.JLabel();
        empresaJTextField = new javax.swing.JTextField();
        modeloJLabel = new javax.swing.JLabel();
        modeloJTextField = new javax.swing.JTextField();
        descripcionJLabel = new javax.swing.JLabel();
        descripcionJTextField = new javax.swing.JTextField();
        textoJLabel = new javax.swing.JLabel();
        textoLapidaJScrollPane = new javax.swing.JScrollPane();
        textoLapidaJTextArea = new javax.swing.JTextArea();
        
        columnaJLabel = new javax.swing.JLabel();
        columnaJTextField = new javax.swing.JTextField();
        filaJLabel = new  javax.swing.JLabel();
        filaJTextField = new   javax.swing.JTextField();
        tipoUnidadJComboBox = new  javax.swing.JComboBox(); 
        tipoUnidadJLabel = new  javax.swing.JLabel(); 
        unidadEnterramientoJPanel = new javax.swing.JPanel();
        
        tablaJPanel = new javax.swing.JPanel();
        plazasJScrollPane = new javax.swing.JScrollPane();
        plazasJTable = new javax.swing.JTable();
        
        informacionJPanel = new javax.swing.JPanel();
        informacionJScrollPane = new javax.swing.JScrollPane();
        informacionJTextArea = new javax.swing.JTextArea();
        DPersonaFisicaJPanel = new javax.swing.JPanel();

        fNacimientoJLabel = new javax.swing.JLabel();
        fNacimientoJTextField = new JDateChooser(new Date());
        fNacimientoJTextField.setDateFormatString("dd/MM/yyyy");
        
        fechaFallecimientoJLabel = new javax.swing.JLabel();
        fFallecimientoJTextField = new JDateChooser(new Date());
        fFallecimientoJTextField.setDateFormatString("dd/MM/yyyy");
        
        RefFallecimientoJLabel = new javax.swing.JLabel();
        RefFallecimientoJTextField = new javax.swing.JTextField();
        
        RefFallecimientoJTextField.setText("");
        
        edadDifuntoJLabel2 = new javax.swing.JLabel();
        edadDifuntoJTextField1 = new javax.swing.JTextField();
        DFallecimientoJPanel = new javax.swing.JPanel();
        causaFundamentalJLabel = new javax.swing.JLabel();
        causaFundamentalJTextField = new javax.swing.JTextField();
        causaInmediataJLabel = new javax.swing.JLabel();
        causaInmediataJTextField = new javax.swing.JTextField();
        lugarDefuncionJLabel = new javax.swing.JLabel();
        lugarDefuncionJTextField = new javax.swing.JTextField();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        DefuncionJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DatosGeneralesComunesJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        DatosGeneralesComunesJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        entidadJLabel.setText("Entidad");
        DatosGeneralesComunesJPanel.add(entidadJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        cementerioJLabel.setText("Cementerio");
        DatosGeneralesComunesJPanel.add(cementerioJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        entidadJTextField.setText("");

        DatosGeneralesComunesJPanel.add(entidadJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 780, -1));

        cementerioJTextField.setText("");
        DatosGeneralesComunesJPanel.add(cementerioJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 780, -1));

        DefuncionJPanel.add(DatosGeneralesComunesJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 870, 70));

        DatosDifuntoJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        DatosDifuntoJPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        DNIJLabel.setText("DNI/NIF");
        DNIJTextField.setText("");
        
        NombreJLabel.setText("Nombre");
        codigoJLabel.setText("Codigo");
        codigoJTextField.setText("");
        
        grupoJLabel.setText("Grupo");

        vgrupos.add(new String("Grupo 1"));
        vgrupos.add(new String("Grupo 2"));
        grupoJComboBox = new JComboBox(vgrupos);
        grupoJComboBox.setSelectedIndex(1);
        
        grupoJComboBox.addActionListener(new java.awt.event.ActionListener(){
  		public void actionPerformed(ActionEvent e){
  			JComboBox cb = (JComboBox)e.getSource();
  			String strgrupo  =  (String) cb.getSelectedItem();
  			int grupo; 
  			if (strgrupo.equalsIgnoreCase("Grupo 1")){
  				grupo = 1;
  			}else{
  				grupo = 2;
  			}
        	if (difunto == null) difunto = new DifuntoBean(); 
        		difunto.setGrupo(grupo);
  			}
        });
        
        medicoJLabel.setText("Médico");
        domicilioJLabel.setText("Domicilio");
        domicilioJTextField.setText("");
        poblacionDifuntoJLabel.setText("Poblacion");
        poblacionDifuntoJTextField.setText("");
        nombreJTextField.setText("");
        numColegiadoJLabel.setText("Num Colegiado");
        regiCivilJLabel.setText("Registro Civil");
        apellido2JLabel.setText("2º Apellido");
        apellido1JLabel.setText("1º Apellido");
        sexolJLabel.setText("Sexo: ");

        mujerJRadioButton.setText("Mujer");
        mujerJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mujerJCheckBoxActionPerformed(evt);
            }
        });

        hombreJRadioButton.setText("Hombre");
        hombreJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hombreJCheckBoxActionPerformed(evt);
            }
        });

        estadoCivilJLabel1.setText("EstadoCivil:");

        solteroJRadioButton.setText("Soltero");
        solteroJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solteroJCheckBoxActionPerformed(evt);
            }
        });

        casadoJRadioButton.setText("Casado");
        casadoJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casadoJCheckBoxActionPerformed(evt);
            }
        });
        
        javax.swing.GroupLayout DatosDifuntoJPanelLayout = new javax.swing.GroupLayout(DatosDifuntoJPanel);
        DatosDifuntoJPanel.setLayout(DatosDifuntoJPanelLayout);
        DatosDifuntoJPanelLayout.setHorizontalGroup(
            DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(DNIJLabel)
                                .addGap(5, 5, 5)
                                .addComponent(DNIJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(NombreJLabel)
                                .addGap(15, 15, 15)
                                .addComponent(nombreJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(apellido1JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(sexolJLabel)
                                .addComponent(mujerJRadioButton)
                                .addGap(2, 2, 2)
                                .addComponent(hombreJRadioButton)
                                .addGap(10, 10, 10)
                                .addComponent(estadoCivilJLabel1)
                                .addGap(4, 4, 4)
                                .addComponent(solteroJRadioButton)
                                .addGap(2, 2, 2)
                                .addComponent(casadoJRadioButton)
                                .addGap(39, 39, 39)
                                .addComponent(codigoJLabel)))
                        .addGap(2, 2, 2)
                        .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(codigoJTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(apellido1JTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                                .addComponent(apellido2JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(apellido2JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                                .addComponent(grupoJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grupoJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(domicilioJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(domicilioJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(poblacionDifuntoJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(poblacionDifuntoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(datosDifuntoJSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 824, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(medicoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(medicoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numColegiadoJLabel)
                        .addGap(18, 18, 18)
                        .addComponent(numColegiadoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(regiCivilJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(regCivilJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DatosDifuntoJPanelLayout.setVerticalGroup(
            DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(DNIJLabel))
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(DNIJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(NombreJLabel))
                    .addComponent(nombreJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(apellido1JLabel))
                    .addComponent(apellido1JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(apellido2JLabel))
                    .addComponent(apellido2JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(sexolJLabel))
                        .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(mujerJRadioButton))
                        .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(hombreJRadioButton))
                        .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(estadoCivilJLabel1))
                        .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(solteroJRadioButton))
                        .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(casadoJRadioButton))
                        .addGroup(DatosDifuntoJPanelLayout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(codigoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(codigoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(grupoJLabel))))
                    .addComponent(grupoJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(poblacionDifuntoJLabel)
                    .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(domicilioJLabel)
                        .addComponent(domicilioJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(poblacionDifuntoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(datosDifuntoJSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medicoJLabel)
                    .addGroup(DatosDifuntoJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(medicoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numColegiadoJLabel)
                        .addComponent(numColegiadoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(regiCivilJLabel)
                        .addComponent(regCivilJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(92, 92, 92))
        );

        DefuncionJPanel.add(DatosDifuntoJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 870, 150));

        PestañaDifuntoJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        PestañaDifuntoJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DatosTrasladoJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ordenJudicialJCheckBox.setText(" ¿ Por orden judicial?");
        ordenJudicialJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //ordenJudicialJCheckBoxActionPerformed(evt);
            }
        });
        DatosTrasladoJPanel.add(ordenJudicialJCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        ProcedimientoJLabel.setText("Procedimiento");
        DatosTrasladoJPanel.add(ProcedimientoJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 14, -1, -1));

        procedimientoJTextField.setText("Procedimiento numero 6.6.6");
        DatosTrasladoJPanel.add(procedimientoJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 11, 607, -1));

        lugarTrasladoJLabel.setText("Lugar del traslado");
        DatosTrasladoJPanel.add(lugarTrasladoJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 42, -1, -1));

        lugarTrasladoJTextArea.setColumns(20);
        lugarTrasladoJTextArea.setRows(5);
        datosTrasladojScrollPane.setViewportView(lugarTrasladoJTextArea);

        DatosTrasladoJPanel.add(datosTrasladojScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 42, 721, 42));

//        PestañaDifuntoJTabbedPane.addTab("Datos del traslado", DatosTrasladoJPanel);

        LocalizacionJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        localizacionJLabel.setText("Localizacion");
        LocalizacionJPanel.add(localizacionJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 17, -1, -1));

        localizacionJTextField.setText("");
        LocalizacionJPanel.add(localizacionJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 14, 662, -1));

        inhumacionJlabel.setText("Inhumacion");
        LocalizacionJPanel.add(inhumacionJlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 45, -1, -1));

        LocalizacionJPanel.add(fInhumacionJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 42, 85, -1));

        plazaJLabel.setText("Plaza");
        LocalizacionJPanel.add(plazaJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 45, -1, -1));

        plazaJTextField.setText("");
        LocalizacionJPanel.add(plazaJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 42, 561, -1));

        sitActualJLabel.setText("Situacion Actual");
        LocalizacionJPanel.add(sitActualJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 71, -1, -1));

        sitActualJTextField.setText("");
        LocalizacionJPanel.add(sitActualJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 68, 707, -1));

        goLocalizacionJButton.setFont(new java.awt.Font("Tahoma", 1, 13));
        goLocalizacionJButton.setText("?");
        goLocalizacionJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //goLocalizacionJButtonActionPerformed(evt);
            }
        });
        LocalizacionJPanel.add(goLocalizacionJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(772, 11, -1, -1));

//        PestañaDifuntoJTabbedPane.addTab("Localizacion", LocalizacionJPanel);

        LapidaJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        empresaJLabel.setText("Empresa ");
        LapidaJPanel.add(empresaJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 14, -1, -1));

        empresaJTextField.setText("");
        LapidaJPanel.add(empresaJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 11, 289, -1));

        modeloJLabel.setText("Modelo");
        LapidaJPanel.add(modeloJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 14, 47, -1));

        modeloJTextField.setText("");
        LapidaJPanel.add(modeloJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 11, 381, -1));

        descripcionJLabel.setText("Descripcion");
        LapidaJPanel.add(descripcionJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        descripcionJTextField.setText("");
        LapidaJPanel.add(descripcionJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 37, 739, -1));

        textoJLabel.setText("Texto");
        LapidaJPanel.add(textoJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 63, -1, -1));

        textoLapidaJTextArea.setColumns(20);
        textoLapidaJTextArea.setFont(new java.awt.Font("Monospaced", 0, 14));
        textoLapidaJTextArea.setRows(5);
        textoLapidaJTextArea.setText("Aqui yace...");
        textoLapidaJScrollPane.setViewportView(textoLapidaJTextArea);

        LapidaJPanel.add(textoLapidaJScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 63, 747, 44));

//        PestañaDifuntoJTabbedPane.addTab("Lapida", LapidaJPanel);
        if ((getUnidadSelected()!= null) && (getUnidadSelected().getTipo_unidad() != 3)){
        	LapidaJPanel.setEnabled(false);
        }
        
        /**Panel Unidad Enterramiento**/
        unidadEnterramientoJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(aplicacion.getI18nString("cementerio.datosUnidad.tag1")));
        unidadEnterramientoJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tipoUnidadJLabel.setText("Unidades de Enterramiento");
        unidadEnterramientoJPanel.add(tipoUnidadJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 22, -1, -1));


        //cargarmos las estructuras..
        while (!Estructuras.isCargada()){
            if (!Estructuras.isIniciada()) Estructuras.cargarEstructuras();
            try {Thread.sleep(500);}catch(Exception e){}
        }

        Vector vectorDomainTipoUnidades = Estructuras.getListaCombosSorted(locale);
        
        for (int i = 0; i < vectorDomainTipoUnidades.size(); i++) {
        	DomainNode node = (DomainNode) vectorDomainTipoUnidades.get(i);
        	 for (int j = 0; j < listaSimple.size(); j++) {
        		 if (node.getPatron().equalsIgnoreCase(String.valueOf(((UnidadEnterramientoBean)listaSimple.get(j)).getTipo_unidad()))){
        		  	  String nodeterm = node.getTerm(locale);
        			  ((UnidadEnterramientoBean)listaSimple.get(j)).setDescripcion(j+1+"- Unidad: " + nodeterm);
        		 }
        	 }
        }
        
        if (listaSimple.size()> 0){
        		setUnidadSelected((UnidadEnterramientoBean)listaSimple.get(0));
        }

        tipoUnidadJComboBox = new JComboBox(listaSimple);
        tipoUnidadJComboBox.setRenderer(new RenderComun(locale));
        
        tipoUnidadJComboBox.addActionListener(new java.awt.event.ActionListener(){
  		public void actionPerformed(ActionEvent e){
  			JComboBox cb = (JComboBox)e.getSource();
  			UnidadEnterramientoBean unidadSimple = (UnidadEnterramientoBean)cb.getSelectedItem();
  			filaJTextField.setText(String.valueOf(unidadSimple.getFila()));
  			filaJTextField.setEditable(false);
  			columnaJTextField.setText(String.valueOf(unidadSimple.getColumna()));
  			columnaJTextField.setEditable(false);
  				 setUnidadSelected(unidadSimple);
  				 ArrayList lista = unidadSimple.getPlazas();
  				 if(lista!= null){
  					 try {
						loadListaPlazas(lista);
						setListaPlazasTabla(lista);
					} catch (Exception e1) {
					}
  				 }
  			 }
  		});
        
        unidadEnterramientoJPanel.add(tipoUnidadJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 19, 179, -1));

        filaJLabel.setText("Fila de Unidad");
        unidadEnterramientoJPanel.add(filaJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 22, -1, -1));

        filaJTextField.setText(String.valueOf(getUnidadSelected().getFila()));
        unidadEnterramientoJPanel.add(filaJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 19, 77, -1));

        columnaJLabel.setText("Columna de Unidad");
        unidadEnterramientoJPanel.add(columnaJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(606, 22, -1, -1));

        columnaJTextField.setText(String.valueOf(getUnidadSelected().getColumna()));
        unidadEnterramientoJPanel.add(columnaJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(716, 19, 76, -1));
        DefuncionJPanel.add(unidadEnterramientoJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 370, 880, 55)); //(10, 350, 880, 55));

        /** Lista de Plazas **/
        listaPlazasTabla = new ArrayList<PlazaBean>();
        
        tablaJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tablaJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        plazasJTable = new ElemTableRender(6); 
        plazasJTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        
        initHeadersJTable();
        
        /* Ordenacion de la tabla */
        tableSorted= new TableSorted(plazasJTableModel);
        plazasJTableModel.setTableSorted(tableSorted);
        tableSorted.setTableHeader(plazasJTable.getTableHeader());
        plazasJTable.setModel(tableSorted);
        plazasJTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        plazasJTable.setCellSelectionEnabled(false);
        plazasJTable.setColumnSelectionAllowed(false);
        plazasJTable.setRowSelectionAllowed(true);
        plazasJTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        plazasJTable.getTableHeader().setReorderingAllowed(false);
        
        setInvisible(plazasJTableModel.getColumnCount()-1,plazasJTable);
        plazasJTableModel.setTable(plazasJTable);
        
        
        if (unidadSelected!= null){
      	  ArrayList<PlazaBean> plazas = unidadSelected.getPlazas();
      	  if (plazas != null){
      		  plazasJTableModel.setModelData(plazas);
      	  }
        }
        
        plazasJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
            	 if (getConcesionByUnidad(unidadSelected, listaConcesiones) == null) {
	 				String message = "No hay ninguna concesion asociada";
	 				JOptionPane.showMessageDialog(desktop, message);
	 				return;
	    		 }
            	elemPlazaJTableMouseReleased();
            }
            
            public void mouseClicked(java.awt.event.MouseEvent evt){
            	
            }
        });

        plazasJScrollPane.setViewportView(plazasJTable);
        plazasJScrollPane.setViewportView(plazasJTable);
        tablaJPanel.add(plazasJScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 812, 95)); //(10, 12, 812, 103));

        PestañaDifuntoJTabbedPane.addTab("Plazas", tablaJPanel);
//        PestañaDifuntoJTabbedPane.setSelectedIndex(3);
        informacionJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        informacionJTextArea.setColumns(20);
        informacionJTextArea.setRows(5);
        informacionJScrollPane.setViewportView(informacionJTextArea);

        informacionJPanel.add(informacionJScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 845, 129));
//        PestañaDifuntoJTabbedPane.addTab("Informacion", informacionJPanel);
        
        PestañaDifuntoJPanel.add(PestañaDifuntoJTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 850, 135));
        DefuncionJPanel.add(PestañaDifuntoJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 435, 870, 150)); //(10, 370, 870, 180));

        /**Persona fisica panel**/
        DPersonaFisicaJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        DPersonaFisicaJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fNacimientoJLabel.setText("Fecha Nacimiento");
        DPersonaFisicaJPanel.add(fNacimientoJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 20, -1, -1));
        DPersonaFisicaJPanel.add(fNacimientoJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 17, 173, -1));

        fechaFallecimientoJLabel.setText("Fecha Fallecimiento");
        DPersonaFisicaJPanel.add(fechaFallecimientoJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 44, -1, -1));
        DPersonaFisicaJPanel.add(fFallecimientoJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 41, 173, -1));

        RefFallecimientoJLabel.setText("Ref. Fallecimiento");
        DPersonaFisicaJPanel.add(RefFallecimientoJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));
        DPersonaFisicaJPanel.add(RefFallecimientoJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 67, 173, -1));

        edadDifuntoJLabel2.setText("Edad difunto");
        DPersonaFisicaJPanel.add(edadDifuntoJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 36, 70, 20));

        edadDifuntoJTextField1.setText("");
        DPersonaFisicaJPanel.add(edadDifuntoJTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 40, 20));
        DefuncionJPanel.add(DPersonaFisicaJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 410, 110));

        /**Datos fallecimiento**/
        DFallecimientoJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        DFallecimientoJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        causaFundamentalJLabel.setText("Causa Fundamental");
        causaFundamentalJTextField.setText("");
        DFallecimientoJPanel.add(causaFundamentalJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 22, -1, -1));
        DFallecimientoJPanel.add(causaFundamentalJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 19, 311, -1));

        causaInmediataJLabel.setText("Causa Inmediata");
        causaInmediataJTextField.setText("");
        DFallecimientoJPanel.add(causaInmediataJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 48, -1, -1));
        DFallecimientoJPanel.add(causaInmediataJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 45, 311, -1));

        lugarDefuncionJLabel.setText("Lugar defunción");
        lugarDefuncionJTextField.setText("");
        DFallecimientoJPanel.add(lugarDefuncionJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 74, -1, -1));
        DFallecimientoJPanel.add(lugarDefuncionJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 71, 311, -1));

        DefuncionJPanel.add(DFallecimientoJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 450, 110));

        botoneraAceptarCancelarJPanel= new BotoneraAceptarCancelarJPanel();
        botoneraAceptarCancelarJPanel.addActionListener(new java.awt.event.ActionListener(){
            public void actionPerformed(ActionEvent e){
  				botoneraAceptarCancelarJPanel_actionPerformed();
  			}
  		});

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        
        setSize(1500, 720);
        getContentPane().setSize(2000,2000);
        setSize(2000, 2000);
        
        getContentPane().add(DefuncionJPanel, java.awt.BorderLayout.CENTER);
        getContentPane().add(botoneraAceptarCancelarJPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }

//    private void edadDifuntoJTextFieldActionPerformed(java.awt.event.ActionEvent evt){
//    	Date fechaNac = fNacimientoJTextField.getDate();
//    	Date fechaActual = new Date();
//    	
//    	Calendar cal = new GregorianCalendar();
//    	cal.setTime(fechaActual);
//    	
//    	Calendar cal2 = new GregorianCalendar();
//    	cal2.setTime(fechaNac);
//    	
//    	int rangoAnyos = cal.get(Calendar.YEAR) - cal2.get(Calendar.YEAR);
//    	
//    	difunto.setEdad(rangoAnyos);
//    	
//    }
    
    
    private void mujerJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (mujerJRadioButton.isSelected()){
        	PersonaBean dif;
        	if (difunto.getPersona() != null){
        		dif = difunto.getPersona();
        	}else{
        		dif = new PersonaBean();
        	}
        	dif.setSexo(Constantes.SEXO_MUJER);
        	difunto.setPersona(dif);
        }
    }

    private void hombreJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (hombreJRadioButton.isSelected()){
        	PersonaBean dif;
        	if (difunto.getPersona() != null){
        		dif = difunto.getPersona();
        	}else{
        		dif = new PersonaBean();
        	}
        	dif.setSexo(Constantes.SEXO_HOMBRE);
        	difunto.setPersona(dif);
        }
    }

    private void solteroJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (solteroJRadioButton.isSelected()){
        	PersonaBean dif;
        	if (difunto.getPersona() != null){
        		dif = difunto.getPersona();
        	}else{
        		dif = new PersonaBean();
        	}
        	dif.setEstado_civil(Constantes.ESTADO_CIVIL_SOLTERO);
        	difunto.setPersona(dif);
        }
    }


    private void casadoJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (casadoJRadioButton.isSelected()){
        	PersonaBean dif;
        	if (difunto.getPersona() != null){
        		dif = difunto.getPersona();
        	}else{
        		dif = new PersonaBean();
        	}
        	dif.setEstado_civil(Constantes.ESTADO_CIVIL_CASADO);
        	difunto.setPersona(dif);
        }
    }
    
    public void renombrarComponentes(){
//        try{datosGeneralesComunesJPanel.setBorder(new javax.swing.border.TitledBorder(aplicacion.getI18nString("cementerio.datosGenerales.tag1")));}catch(Exception e){}
    }

    
    public void addActionListener(ActionListener l) {
        this.actionListeners.add(l);
    }

    public void removeActionListener(ActionListener l) {
        this.actionListeners.remove(l);
    }

    
    private void fireActionPerformed() {
        for (Iterator i = actionListeners.iterator(); i.hasNext();) {
            ActionListener l = (ActionListener) i.next();
            l.actionPerformed(new ActionEvent(this, 0, null));
        }
    }

    
    /* Método que abre una ventana de confirmacion sobre la operacion que se esta llevando a cabo
    */
   private boolean confirmOption(){
       int ok= -1;
       ok= JOptionPane.showConfirmDialog(this, aplicacion.getI18nString("cementerio.optionpane.tag1"), aplicacion.getI18nString("cementerio.optionpane.tag2"), JOptionPane.YES_NO_OPTION);
       if (ok == JOptionPane.NO_OPTION){
           return false;
       }
       return true;
   }

   private void exitForm(java.awt.event.WindowEvent evt) {
	   setDifunto(null);
       fireActionPerformed();
   }

    
    public void botoneraAceptarCancelarJPanel_actionPerformed(){
    	Validation validacion = Validation.getInstance();

        if((!botoneraAceptarCancelarJPanel.aceptarPressed()) || (operacion.equalsIgnoreCase(Constantes.OPERACION_CONSULTAR)) ||
	           (botoneraAceptarCancelarJPanel.aceptarPressed() && operacion.equalsIgnoreCase(Constantes.OPERACION_MODIFICAR)?!confirmOption():false)){
	        	 difunto= null;
	        	 plazaSelected = null;
	        	 fireActionPerformed();
	    }
		else if ((operacion.equalsIgnoreCase(Constantes.OPERACION_ANNADIR) || 
	    		(operacion.equalsIgnoreCase(Constantes.OPERACION_MODIFICAR)) && (validacion.validateDNI(desktop, DNIJTextField.getText().trim())))){
				
	        if ((plazaSelected!= null) &&  (plazaSelected.getDifunto()!= null)){
	         	String message = "Plaza ya asignada.Debe seleccionar una plaza libre";
	 			JOptionPane.showMessageDialog(desktop, message);
	 			plazasJTable.clearSelection();
	         }else if (plazaSelected == null){
	 			String message = "Debe seleccionar una plaza libre";
	 			JOptionPane.showMessageDialog(desktop, message);
	 			plazasJTable.clearSelection();
	         }else{
	    		actualizarDatosDifunto(difunto);
	    		fireActionPerformed();
	         }
	    }
		else{ 
			fireActionPerformed();
        }
    }
    
    
    public void actualizarDatosDifunto(DifuntoBean difunto){
        
    	if (difunto==null || difunto.getTipo() == null) return;
        
    	difunto.setEntidad(entidadJTextField.getText().trim());
    	difunto.setNombreCementerio(cementerioJTextField.getText().trim());

    	/**Datos del difunto**/
    	PersonaBean persona = difunto.getPersona();
    	if (persona == null) persona = new PersonaBean();
    	persona.setNombre(nombreJTextField.getText().trim());
    	persona.setApellido1(apellido1JTextField.getText().trim());
    	persona.setApellido2(apellido2JTextField.getText().trim());
    	persona.setDNI(DNIJTextField.getText().trim());
    	persona.setFecha_nacimiento(fNacimientoJTextField.getDate());
    	persona.setDomicilio(domicilioJTextField.getText().trim());
    	persona.setPoblacion(poblacionDifuntoJTextField.getText().trim());
    	if (difunto.getPersona()!=null)
    		persona.setEstado_civil(difunto.getPersona().getEstado_civil());
    	if (difunto.getPersona()!=null)
    		persona.setSexo(difunto.getPersona().getSexo());
    	
    	difunto.setPersona(persona);
    	
    	/**Datos fallecimiento**/
    	DatosFallecimientoBean dFallecimiento = difunto.getDatosFallecimiento();
    	if (dFallecimiento == null) dFallecimiento = new DatosFallecimientoBean();
    	dFallecimiento.setCausa_fundamental(causaFundamentalJTextField.getText().trim());
    	dFallecimiento.setCausa_inmediata(causaInmediataJTextField.getText().trim());
    	dFallecimiento.setFecha(fFallecimientoJTextField.getDate());
    	dFallecimiento.setMedico(medicoJTextField.getText().trim());
    	dFallecimiento.setNumColegiado(numColegiadoJTextField.getText().trim());
    	dFallecimiento.setRegistro_civil(regCivilJTextField.getText().trim());
    	dFallecimiento.setReferencia_fallecimiento(RefFallecimientoJTextField.getText().trim());
    	dFallecimiento.setLugar(lugarDefuncionJTextField.getText().trim());
    	dFallecimiento.setPoblacion(poblacionDifuntoJTextField.getText().trim());
    	
    	difunto.setDatosFallecimiento(dFallecimiento);
    	
    	/**Datos propios**/
    	difunto.setFecha_defuncion(fFallecimientoJTextField.getDate());
    	difunto.setGrupo(difunto.getGrupo());
    	difunto.setEdad(difunto.getEdad());
    	difunto.setCodigo(codigoJTextField.getText().trim());
    	difunto.setEdad(Integer.parseInt(edadDifuntoJTextField1.getText().trim()));

        //hago el set
        setDifunto(difunto);
        
    }
    
    
    public void loadDatosDifunto(DifuntoBean defuncionElem, boolean editable){
    	
    	if (defuncionElem == null ) return ;
    	
    	PersonaBean persona = defuncionElem.getPersona();
    	if (persona != null){
    		
    		DNIJTextField.setText(persona.getDNI() != null ? persona.getDNI(): "");
    		DNIJTextField.setEditable(editable);
    		
    		nombreJTextField.setText(persona.getNombre() != null ? persona.getNombre() : "");
    		nombreJTextField.setEditable(editable);
    		
    		apellido1JTextField.setText(persona.getApellido1()!= null ? persona.getApellido1() : "");
    		apellido1JTextField.setEditable(editable);
    		
    		apellido2JTextField.setText(persona.getApellido2()!= null ? persona.getApellido2() : "");
    		apellido2JTextField.setEditable(editable);
    		
    		fNacimientoJTextField.setDate(persona.getFecha_nacimiento() != null? persona.getFecha_nacimiento() : new Date());
    		fNacimientoJTextField.setEnabled(editable);
    		
    		domicilioJTextField.setText(persona.getDomicilio()!= null ? persona.getDomicilio() : "");
    		domicilioJTextField.setEditable(editable);
    		
    		poblacionDifuntoJTextField.setText(persona.getPoblacion()!= null ? persona.getPoblacion() : "");
    		poblacionDifuntoJTextField.setEditable(editable);
    		
    		if ((persona.getSexo()!= null) && (persona.getSexo().equalsIgnoreCase(Constantes.SEXO_HOMBRE))){
    			hombreJRadioButton.setSelected(true);			
    		}else{
    			mujerJRadioButton.setSelected(true);
    		}
    		hombreJRadioButton.setEnabled(editable);
    		mujerJRadioButton.setEnabled(editable);
    		
    		if ((persona.getEstado_civil()!= null) && (persona.getEstado_civil().equalsIgnoreCase(Constantes.ESTADO_CIVIL_SOLTERO))){
    			solteroJRadioButton.setSelected(true);
    		}else{
    			casadoJRadioButton.setSelected(true);
    		}
    		
    		solteroJRadioButton.setEnabled(editable);
    		casadoJRadioButton.setEnabled(editable);
    		
    	}
    }
    
    public void loadDatosDefuncion(DifuntoBean defuncionElem, boolean editable){
    	
    	if (defuncionElem == null ) return ;
    	
    	DatosFallecimientoBean datosFallecimiento = defuncionElem.getDatosFallecimiento();
    	if (datosFallecimiento != null){
    		
        	causaFundamentalJTextField.setText(datosFallecimiento.getCausa_fundamental()!= null ? datosFallecimiento.getCausa_fundamental() : "");
    		causaFundamentalJTextField.setEditable(editable);
    		
    		causaInmediataJTextField.setText(datosFallecimiento.getCausa_inmediata()!= null ? datosFallecimiento.getCausa_inmediata() : "");
    		causaInmediataJTextField.setEditable(editable);
    		
    		fFallecimientoJTextField.setDate(datosFallecimiento.getFecha()!= null ? datosFallecimiento.getFecha() : new Date());
    		fFallecimientoJTextField.setEnabled(editable);
    		
    		medicoJTextField.setText(datosFallecimiento.getMedico()!= null ? datosFallecimiento.getMedico() : "");
    		medicoJTextField.setEditable(editable);
    		
    		numColegiadoJTextField.setText(datosFallecimiento.getNumColegiado()!= null ? datosFallecimiento.getNumColegiado() : "");
    		numColegiadoJTextField.setEditable(editable);
    			
    		regCivilJTextField.setText(datosFallecimiento.getRegistro_civil()!= null ? datosFallecimiento.getRegistro_civil() : "");
    		regCivilJTextField.setEditable(editable);
    		
    		RefFallecimientoJTextField.setText(datosFallecimiento.getReferencia_fallecimiento()!= null ? datosFallecimiento.getReferencia_fallecimiento() : "");
    		RefFallecimientoJTextField.setEditable(editable);
    	
    		lugarDefuncionJTextField.setText(datosFallecimiento.getLugar()!= null ? datosFallecimiento.getLugar(): "");
    		lugarDefuncionJTextField.setEditable(editable);

    		poblacionDifuntoJTextField.setText(datosFallecimiento.getPoblacion()!= null ? datosFallecimiento.getPoblacion() : "");
    		poblacionDifuntoJTextField.setEditable(editable);
    	}
    }   
   
	/**
	 * Método que carga en el panel los datos generales del bloque
	 * @param bloque a cargar en el panel
	 */
	public void load(DifuntoBean defuncionElem, boolean editable) {
		if (defuncionElem == null)
			return;

		if (nombre== null){
			nombre = defuncionElem.getNombreCementerio();
		}
		if (entidad ==  null){
			entidad = defuncionElem.getEntidad();
		}
		
//		cementerioJTextField.setText(defuncionElem.getNombre() != null ?  defuncionElem.getNombre() : "");
//		entidadJTextField.setText(defuncionElem.getEntidad() != null ?  defuncionElem.getEntidad() : "");
		
		cementerioJTextField.setText(nombre != null ?  nombre : "");
		entidadJTextField.setText(entidad != null ?  entidad : "");

		unidadEnterramientoJPanel.setEnabled(editable);
		
    	setDifunto(defuncionElem);
        if(operacion == null) return;

        loadDatosDifunto(defuncionElem, editable);
        loadDatosDefuncion(defuncionElem, editable);
        	
    	fFallecimientoJTextField.setDate(defuncionElem.getFecha_defuncion()!= null ? defuncionElem.getFecha_defuncion() : new Date());
    	fFallecimientoJTextField.setEnabled(editable);
    	
    	String strgrupo;
    	int grupo = defuncionElem.getGrupo();
    	if (grupo == 1){ strgrupo = "Grupo 1";}else{strgrupo= "Grupo 2";}
    	
		for (int i = 0; i < vgrupos.size(); i++) {
			String node = (String) vgrupos.get(i);
			if (node.equalsIgnoreCase(strgrupo)){
				grupoJComboBox.setSelectedIndex(i);
			}
		}
		grupoJComboBox.setEnabled(editable);
		
		edadDifuntoJTextField1.setText(defuncionElem.getEdad()!= 0 ? String.valueOf(defuncionElem.getEdad()): "");
        edadDifuntoJTextField1.setEditable(editable);
        
        cementerioJTextField.setEditable(false);
        entidadJTextField.setEditable(false);
        
        codigoJTextField.setText(defuncionElem.getCodigo() != null ? defuncionElem.getCodigo() : "");
        codigoJTextField.setEditable(editable);
        
        edadDifuntoJTextField1.setText(defuncionElem.getEdad() != -1 ?  String.valueOf(defuncionElem.getEdad()) : "0");
        edadDifuntoJTextField1.setEditable(editable);
        
        DatosDifuntoJPanel.setEnabled(editable);
        
        tipoUnidadJComboBox.setEnabled(editable);
        filaJTextField.setEditable(false);
        columnaJTextField.setEditable(false);
		
	}

    public void clearTable(){

    	plazasJTableModel.setModelData(new ArrayList());    	
    	plazasJTableModel.getTableSorted().sortingStatusChanged();    	

    }
	
    private void initHeadersJTable(){
	   	this.plazasJTableModel= new PlazasUnidadTableModel(new String[]{"Descripcion", "Situacion", "Estado", "Modificado", "Usuario", "HIDDEN"},
	   																	new boolean[]{false, false, false, false, false, false}, locale);		
	                                                               
	   }
    
    
    private void elemPlazaJTableMouseReleased() {
    	PlazaBean plazaBean;
    	if (plazaDeselected){
	        Object obj = getElemSeleccionado();
	        if (obj instanceof PlazaBean){
            	setPlazaSelected((PlazaBean) getElemSeleccionado());
	        	DifuntoBean difunto = ((PlazaBean) getElemSeleccionado()).getDifunto();
	        	//El difunto puede ser null...
	        	if (difunto != null) {
	        		difunto.setNombreCementerio(cementerioJTextField.getText().trim());
	        		difunto.setEntidad(entidadJTextField.getText().trim());
	        	}
	        	if (operacion.equalsIgnoreCase(Constantes.OPERACION_CONSULTAR)){
	        		load(difunto, false);
	        	}else{
	        		load(difunto, true);
	        	}
	        	plazaDeselected=false;
	        }
    	}else{
    		plazaDeselected=true;
    		this.plazasJTable.clearSelection();
    		plazaBean = new PlazaBean();
    		DifuntoBean difunto = new DifuntoBean();
    		plazaBean.setDifunto(difunto);
    		setPlazaSelected(plazaBean);
        	if (operacion.equalsIgnoreCase(Constantes.OPERACION_CONSULTAR)){
        		load(difunto, false);
        	}else{
        		load(difunto, true);
        	}
    	}
    	
//        Object obj = getElemSeleccionado();
//        if (obj instanceof PlazaBean){
//        	setPlazaSelected((PlazaBean) getElemSeleccionado());
//        }
    }

    /**
     * Método que recoge el elemento seleccionado de la tabla
     * @return el elemento seleccionado de la tabla 
     */
    public Object getElemSeleccionado(){
       
    	selectedRow= plazasJTable.getSelectedRow();
	    if (selectedRow == -1){ 
	        	return null;
        }else{
        	plazasJTableModel.setTableSorted(plazasJTableModel.getTableSorted());
        	plazasJTableModel.setRows(plazasJTableModel.getRows());
        	return plazasJTableModel.getObjetAt(selectedRow);
        }
    }
    
    /**
     * Método que hace un columna de la tabla no visible
     */
    private void setInvisible(int column, JTable jTable){
        /** columna hidden no visible */
        TableColumn col= jTable.getColumnModel().getColumn(column);
        col.setResizable(false);
        col.setWidth(0);
        col.setMaxWidth(0);
        col.setMinWidth(0);
        col.setPreferredWidth(0);
    }
    
    /**
     * Método que carga en la tabla una lista de elementos
     * @param c Collection de elementos a cargar
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
	public void loadListaPlazas(Collection c) throws Exception{
    	int numElementos=0;
        Collection cRet= new ArrayList();
        if (c != null){
	    	Object[] arrayElems = c.toArray();
	    	int n = arrayElems.length;
	    	if (n>0){
	    		//primer eleme
	    		Object obj = arrayElems[0];
	    		if (obj instanceof PlazaBean){
	    	    	for (int i=0;i<n;i++){
	    	    		PlazaBean elem = (PlazaBean)arrayElems[i];
		    		cRet.add(elem);
		    		numElementos++;
	    	    	}
	    		}
	    }
        }
        plazasJTableModel.setModelData(cRet);
    }
    
    ConcesionBean getConcesionByUnidad (UnidadEnterramientoBean unidad, Vector listaConcesiones){
    	
    	
    	for (int i = 0; i < listaConcesiones.size(); i++) {
    		ConcesionBean concesion = (ConcesionBean) listaConcesiones.get(i);
    		if (concesion.getUnidad().getIdUe() == unidad.getIdUe()){
    			return concesion;
    			
    		}
		}
    	return null;
    }
    
    
    public DifuntoBean getDifunto() {
		return difunto;
	}

	public void setDifunto(DifuntoBean difunto) {
		this.difunto = difunto;
	}
	
    public UnidadEnterramientoBean getUnidadSelected() {
		return unidadSelected;
	}

	public void setUnidadSelected(UnidadEnterramientoBean unidadSelected) {
		this.unidadSelected = unidadSelected;
	}

	public PlazaBean getPlazaSelected() {
		return plazaSelected;
	}

	public void setPlazaSelected(PlazaBean plazaSelected) {
		this.plazaSelected = plazaSelected;
	}
	
    public ArrayList<PlazaBean> getListaPlazasTabla() {
		return listaPlazasTabla;
	}

	public void setListaPlazasTabla(ArrayList<PlazaBean> listaPlazasTabla) {
		this.listaPlazasTabla = listaPlazasTabla;
	}
	
    // Variables declaration - do not modify
    private javax.swing.JPanel DFallecimientoJPanel;
    private javax.swing.JLabel DNIJLabel;
    private javax.swing.JPanel DPersonaFisicaJPanel;
    private javax.swing.JPanel DatosDifuntoJPanel;
    private javax.swing.JTextField DNIJTextField;
    private javax.swing.JPanel DatosGeneralesComunesJPanel;
    private javax.swing.JPanel DatosTrasladoJPanel;
    private javax.swing.JPanel DefuncionJPanel;
    private javax.swing.JPanel LapidaJPanel;
    private javax.swing.JPanel LocalizacionJPanel;
    private javax.swing.JLabel NombreJLabel;
    private javax.swing.JPanel PestañaDifuntoJPanel;
    private javax.swing.JTabbedPane PestañaDifuntoJTabbedPane;
    private javax.swing.JLabel ProcedimientoJLabel;
    private javax.swing.JLabel RefFallecimientoJLabel;
    private javax.swing.JTextField RefFallecimientoJTextField;
    private javax.swing.JLabel apellido1JLabel;
    private javax.swing.JTextField apellido1JTextField;
    private javax.swing.JLabel apellido2JLabel;
    private javax.swing.JTextField apellido2JTextField;
    private javax.swing.JLabel causaFundamentalJLabel;
    private javax.swing.JTextField causaFundamentalJTextField;
    private javax.swing.JLabel causaInmediataJLabel;
    private javax.swing.JTextField causaInmediataJTextField;
    private javax.swing.JLabel cementerioJLabel;
    private javax.swing.JLabel codigoJLabel;
    private javax.swing.JTextField codigoJTextField;
    private javax.swing.JComboBox grupoJComboBox;
    private javax.swing.JLabel grupoJLabel;
    private javax.swing.JSeparator datosDifuntoJSeparator;
    private javax.swing.JScrollPane datosTrasladojScrollPane;
    private javax.swing.JLabel descripcionJLabel;
    private javax.swing.JTextField descripcionJTextField;
    private javax.swing.JLabel domicilioJLabel;
    private javax.swing.JTextField domicilioJTextField;
    private javax.swing.JLabel edadDifuntoJLabel2;
    private javax.swing.JTextField edadDifuntoJTextField1;
    private javax.swing.JLabel empresaJLabel;
    private javax.swing.JTextField empresaJTextField;
    private javax.swing.JLabel entidadJLabel;
    private javax.swing.JLabel estadoCivilJLabel1;
    private JDateChooser fFallecimientoJTextField;
    private JDateChooser fInhumacionJTextField;
    private javax.swing.JLabel fNacimientoJLabel;
    private JDateChooser fNacimientoJTextField;
    private javax.swing.JLabel fechaFallecimientoJLabel;
    private javax.swing.JButton goLocalizacionJButton;
    private javax.swing.JPanel informacionJPanel;
    private javax.swing.JScrollPane informacionJScrollPane;
    private javax.swing.JTextArea informacionJTextArea;
    private javax.swing.JLabel inhumacionJlabel;
    private javax.swing.JTextField cementerioJTextField;
    private javax.swing.JTextField entidadJTextField;
    private javax.swing.JLabel localizacionJLabel;
    private javax.swing.JTextField localizacionJTextField;
    private javax.swing.JLabel lugarDefuncionJLabel;
    private javax.swing.JTextField lugarDefuncionJTextField;
    private javax.swing.JLabel lugarTrasladoJLabel;
    private javax.swing.JTextArea lugarTrasladoJTextArea;
    private javax.swing.JLabel medicoJLabel;
    private javax.swing.JTextField medicoJTextField;
    private javax.swing.JLabel modeloJLabel;
    private javax.swing.JTextField modeloJTextField;
    private javax.swing.JTextField nombreJTextField;
    private javax.swing.JLabel numColegiadoJLabel;
    private javax.swing.JTextField numColegiadoJTextField;
    private javax.swing.JCheckBox ordenJudicialJCheckBox;
    private javax.swing.JLabel plazaJLabel;
    private javax.swing.JTextField plazaJTextField;
    private javax.swing.JLabel poblacionDifuntoJLabel;
    private javax.swing.JTextField poblacionDifuntoJTextField;
    private javax.swing.JTextField procedimientoJTextField;
    private javax.swing.JTextField regCivilJTextField;
    private javax.swing.JLabel regiCivilJLabel;
    private javax.swing.JLabel sexolJLabel;
    private javax.swing.JLabel sitActualJLabel;
    private javax.swing.JTextField sitActualJTextField;

    private javax.swing.JRadioButton solteroJRadioButton;
    private javax.swing.JRadioButton casadoJRadioButton;
    private javax.swing.JRadioButton mujerJRadioButton;
    private javax.swing.JRadioButton hombreJRadioButton;
    
    private javax.swing.JLabel textoJLabel;
    private javax.swing.JScrollPane textoLapidaJScrollPane;
    private javax.swing.JTextArea textoLapidaJTextArea;

    private javax.swing.JLabel columnaJLabel;
    private javax.swing.JTextField columnaJTextField;
    private javax.swing.JLabel filaJLabel;
    private javax.swing.JTextField filaJTextField;
    private javax.swing.JComboBox tipoUnidadJComboBox;
    private javax.swing.JLabel tipoUnidadJLabel;
    private javax.swing.JPanel unidadEnterramientoJPanel;
    
    private javax.swing.JScrollPane plazasJScrollPane;
    private javax.swing.JTable plazasJTable;
    private javax.swing.JPanel tablaJPanel;
    
}

