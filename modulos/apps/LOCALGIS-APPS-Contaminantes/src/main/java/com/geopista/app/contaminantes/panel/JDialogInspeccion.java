/**
 * JDialogInspeccion.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

package com.geopista.app.contaminantes.panel;

import com.geopista.protocol.contaminantes.Inspeccion;

import java.util.ResourceBundle;
import java.awt.*;

import org.apache.log4j.Logger;

/**
 *
 * @author  angeles
 */
public class JDialogInspeccion extends javax.swing.JDialog {
    public static Logger logger= Logger.getLogger(JDialogInspeccion.class);

    private boolean aceptado=false;
    private ResourceBundle messages;
    private Inspeccion inspeccion;
    private Frame parent;
    /** Creates new form JDialogInspeccion */
    public JDialogInspeccion(java.awt.Frame parent, boolean modal,ResourceBundle messages,Inspeccion inspeccion) {
        super(parent, modal);
        this.messages= messages;
        this.inspeccion=inspeccion;
        this.parent=parent;
        initComponents();
        jPanelInspeccion.load(inspeccion);
        changeScreenLang(messages);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanelBotonera = new javax.swing.JPanel();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        cancelar();
                    }
                });
        jPanelInspeccion = new JPanelInspeccion(messages,parent);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanelBotonera.add(jButtonAceptar);
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        aceptar();
                    }
                });


        jPanelBotonera.add(jButtonCancelar);

        getContentPane().add(jPanelInspeccion, java.awt.BorderLayout.CENTER);
        getContentPane().add(jPanelBotonera, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    private void aceptar()
    {
        /** chequeamos que el tamanno de los anexos para la inspeccion no exceda el tamanno maximo */
        if (jPanelInspeccion.getAnexosJPanel() != null){
            if (!jPanelInspeccion.getAnexosJPanel().sizeFilesUploadedExceeded(jPanelInspeccion.getAnexosJPanel().getAnexosTableModel())){
                Inspeccion aux= jPanelInspeccion.guardarCambios(inspeccion);
                if (aux != null){
                    inspeccion=aux;
                    inspeccion.setEstado(com.geopista.protocol.contaminantes.CConstantes.CMD_INSPECCION_MODIFIED);
                    aceptado=true;
                    dispose();
                }
            }
        }
    }

    public Inspeccion getInspeccion() {
        return inspeccion;
    }

    public void setInspeccion(Inspeccion inspeccion) {
        this.inspeccion = inspeccion;
    }

    private void cancelar()
    {
        aceptado=false;
        dispose();
    }

    public boolean isAceptado() {
        return aceptado;
    }

    public void setAceptado(boolean aceptado) {
        this.aceptado = aceptado;
    }

    private void changeScreenLang(ResourceBundle messages)
    {
        try
        {
            this.messages=messages;
            setTitle(messages.getString("JFrameActividad.JDialogInpeccion.title"));
            jButtonCancelar.setText(messages.getString("JFrameActividad.jButtonCancelar"));
            jButtonAceptar.setText(messages.getString("JFrameActividad.jButtonAceptar"));

            jButtonCancelar.setToolTipText(messages.getString("JFrameActividad.jButtonCancelar"));
            jButtonAceptar.setToolTipText(messages.getString("JFrameActividad.jButtonAceptar"));
        }catch(Exception e)
        {
            logger.error("Error al cargar las etiquetas:",e);
        }

    }
    public void enabled(boolean bValor)
    {
        jPanelInspeccion.enabled(bValor);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JPanel jPanelBotonera;
    private JPanelInspeccion jPanelInspeccion;
    // End of variables declaration//GEN-END:variables
    
}
