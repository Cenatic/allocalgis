/**
 * CementerioDAOImpl.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.geopista.app.cementerios.business.dao.implementations;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;

import com.geopista.app.cementerios.business.dao.DAO;
import com.geopista.app.cementerios.business.dao.interfaces.CementerioDAO;
import com.geopista.app.cementerios.business.vo.Cementerio;

public class CementerioDAOImpl extends DAO  implements CementerioDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.cementerio
	 * @ibatorgenerated  Thu Jun 02 17:44:12 CEST 2011
	 */
	public CementerioDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.cementerio
	 * @throws SQLException 
	 * @ibatorgenerated  Thu Jun 02 17:44:12 CEST 2011
	 */
	public int deleteByPrimaryKey(Integer id) throws SQLException {
		Cementerio key = new Cementerio();
		key.setId(id);
		int rows = getSqlMapClientTemplate()
				.delete("cementerio_cementerio.ibatorgenerated_deleteByPrimaryKey",
						key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.cementerio
	 * @throws SQLException 
	 * @ibatorgenerated  Thu Jun 02 17:44:12 CEST 2011
	 */
	public void insert(Cementerio record) throws SQLException {
		getSqlMapClientTemplate().insert(
				"cementerio_cementerio.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.cementerio
	 * @throws SQLException 
	 * @ibatorgenerated  Thu Jun 02 17:44:12 CEST 2011
	 */
	public void insertSelective(Cementerio record) throws SQLException {
		getSqlMapClientTemplate()
				.insert("cementerio_cementerio.ibatorgenerated_insertSelective",
						record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.cementerio
	 * @throws SQLException 
	 * @ibatorgenerated  Thu Jun 02 17:44:12 CEST 2011
	 */
	public Cementerio selectByPrimaryKey(Integer id) throws SQLException {
		Cementerio key = new Cementerio();
		key.setId(id);
		Cementerio record = (Cementerio) getSqlMapClientTemplate()
				.queryForObject(
						"cementerio_cementerio.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.cementerio
	 * @throws SQLException 
	 * @ibatorgenerated  Thu Jun 02 17:44:12 CEST 2011
	 */
	public int updateByPrimaryKeySelective(Cementerio record) throws SQLException {
		int rows = getSqlMapClientTemplate()
				.update("cementerio_cementerio.ibatorgenerated_updateByPrimaryKeySelective",
						record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.cementerio
	 * @throws SQLException 
	 * @ibatorgenerated  Thu Jun 02 17:44:12 CEST 2011
	 */
	public int updateByPrimaryKey(Cementerio record) throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"cementerio_cementerio.ibatorgenerated_updateByPrimaryKey",
				record);
		return rows;
	}
	
	public List selectByTipoAndSubtipo(String tipo, String subtipo)throws SQLException {
		
		HashMap map = new HashMap();
		map.put("tipo", tipo);
		map.put("subtipo", subtipo);
		
		List  list = getSqlMapClientTemplate().queryForList(
					"cementerio_cementerio.selectByTipoAndSubtipo",
					map);
		return list;
	}
}