/**
 * AnexoCementerioExample.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.geopista.app.cementerios.business.vo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AnexoCementerioExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public AnexoCementerioExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	protected AnexoCementerioExample(AnexoCementerioExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table cementerio.anexo_cementerio
	 * @ibatorgenerated  Mon Jul 11 14:45:21 CEST 2011
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdDocumentoIsNull() {
			addCriterion("id_documento is null");
			return this;
		}

		public Criteria andIdDocumentoIsNotNull() {
			addCriterion("id_documento is not null");
			return this;
		}

		public Criteria andIdDocumentoEqualTo(String value) {
			addCriterion("id_documento =", value, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoNotEqualTo(String value) {
			addCriterion("id_documento <>", value, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoGreaterThan(String value) {
			addCriterion("id_documento >", value, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoGreaterThanOrEqualTo(String value) {
			addCriterion("id_documento >=", value, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoLessThan(String value) {
			addCriterion("id_documento <", value, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoLessThanOrEqualTo(String value) {
			addCriterion("id_documento <=", value, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoIn(List values) {
			addCriterion("id_documento in", values, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoNotIn(List values) {
			addCriterion("id_documento not in", values, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoBetween(String value1, String value2) {
			addCriterion("id_documento between", value1, value2, "idDocumento");
			return this;
		}

		public Criteria andIdDocumentoNotBetween(String value1, String value2) {
			addCriterion("id_documento not between", value1, value2,
					"idDocumento");
			return this;
		}

		public Criteria andIdElemcementerioIsNull() {
			addCriterion("id_elemcementerio is null");
			return this;
		}

		public Criteria andIdElemcementerioIsNotNull() {
			addCriterion("id_elemcementerio is not null");
			return this;
		}

		public Criteria andIdElemcementerioEqualTo(Integer value) {
			addCriterion("id_elemcementerio =", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioNotEqualTo(Integer value) {
			addCriterion("id_elemcementerio <>", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioGreaterThan(Integer value) {
			addCriterion("id_elemcementerio >", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_elemcementerio >=", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioLessThan(Integer value) {
			addCriterion("id_elemcementerio <", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioLessThanOrEqualTo(Integer value) {
			addCriterion("id_elemcementerio <=", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioIn(List values) {
			addCriterion("id_elemcementerio in", values, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioNotIn(List values) {
			addCriterion("id_elemcementerio not in", values, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioBetween(Integer value1,
				Integer value2) {
			addCriterion("id_elemcementerio between", value1, value2,
					"idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioNotBetween(Integer value1,
				Integer value2) {
			addCriterion("id_elemcementerio not between", value1, value2,
					"idElemcementerio");
			return this;
		}

		public Criteria andTipoIsNull() {
			addCriterion("tipo is null");
			return this;
		}

		public Criteria andTipoIsNotNull() {
			addCriterion("tipo is not null");
			return this;
		}

		public Criteria andTipoEqualTo(String value) {
			addCriterion("tipo =", value, "tipo");
			return this;
		}

		public Criteria andTipoNotEqualTo(String value) {
			addCriterion("tipo <>", value, "tipo");
			return this;
		}

		public Criteria andTipoGreaterThan(String value) {
			addCriterion("tipo >", value, "tipo");
			return this;
		}

		public Criteria andTipoGreaterThanOrEqualTo(String value) {
			addCriterion("tipo >=", value, "tipo");
			return this;
		}

		public Criteria andTipoLessThan(String value) {
			addCriterion("tipo <", value, "tipo");
			return this;
		}

		public Criteria andTipoLessThanOrEqualTo(String value) {
			addCriterion("tipo <=", value, "tipo");
			return this;
		}

		public Criteria andTipoLike(String value) {
			addCriterion("tipo like", value, "tipo");
			return this;
		}

		public Criteria andTipoNotLike(String value) {
			addCriterion("tipo not like", value, "tipo");
			return this;
		}

		public Criteria andTipoIn(List values) {
			addCriterion("tipo in", values, "tipo");
			return this;
		}

		public Criteria andTipoNotIn(List values) {
			addCriterion("tipo not in", values, "tipo");
			return this;
		}

		public Criteria andTipoBetween(String value1, String value2) {
			addCriterion("tipo between", value1, value2, "tipo");
			return this;
		}

		public Criteria andTipoNotBetween(String value1, String value2) {
			addCriterion("tipo not between", value1, value2, "tipo");
			return this;
		}

		public Criteria andSubtipoIsNull() {
			addCriterion("subtipo is null");
			return this;
		}

		public Criteria andSubtipoIsNotNull() {
			addCriterion("subtipo is not null");
			return this;
		}

		public Criteria andSubtipoEqualTo(String value) {
			addCriterion("subtipo =", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoNotEqualTo(String value) {
			addCriterion("subtipo <>", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoGreaterThan(String value) {
			addCriterion("subtipo >", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoGreaterThanOrEqualTo(String value) {
			addCriterion("subtipo >=", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoLessThan(String value) {
			addCriterion("subtipo <", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoLessThanOrEqualTo(String value) {
			addCriterion("subtipo <=", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoLike(String value) {
			addCriterion("subtipo like", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoNotLike(String value) {
			addCriterion("subtipo not like", value, "subtipo");
			return this;
		}

		public Criteria andSubtipoIn(List values) {
			addCriterion("subtipo in", values, "subtipo");
			return this;
		}

		public Criteria andSubtipoNotIn(List values) {
			addCriterion("subtipo not in", values, "subtipo");
			return this;
		}

		public Criteria andSubtipoBetween(String value1, String value2) {
			addCriterion("subtipo between", value1, value2, "subtipo");
			return this;
		}

		public Criteria andSubtipoNotBetween(String value1, String value2) {
			addCriterion("subtipo not between", value1, value2, "subtipo");
			return this;
		}
	}
}