/**
 * PlazaExample.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.geopista.app.cementerios.business.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlazaExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public PlazaExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table cementerio.plaza
	 * @ibatorgenerated  Thu May 19 17:05:05 CEST 2011
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andSituacionIsNull() {
			addCriterion("situacion is null");
			return this;
		}

		public Criteria andSituacionIsNotNull() {
			addCriterion("situacion is not null");
			return this;
		}

		public Criteria andSituacionEqualTo(String value) {
			addCriterion("situacion =", value, "situacion");
			return this;
		}

		public Criteria andSituacionNotEqualTo(String value) {
			addCriterion("situacion <>", value, "situacion");
			return this;
		}

		public Criteria andSituacionGreaterThan(String value) {
			addCriterion("situacion >", value, "situacion");
			return this;
		}

		public Criteria andSituacionGreaterThanOrEqualTo(String value) {
			addCriterion("situacion >=", value, "situacion");
			return this;
		}

		public Criteria andSituacionLessThan(String value) {
			addCriterion("situacion <", value, "situacion");
			return this;
		}

		public Criteria andSituacionLessThanOrEqualTo(String value) {
			addCriterion("situacion <=", value, "situacion");
			return this;
		}

		public Criteria andSituacionLike(String value) {
			addCriterion("situacion like", value, "situacion");
			return this;
		}

		public Criteria andSituacionNotLike(String value) {
			addCriterion("situacion not like", value, "situacion");
			return this;
		}

		public Criteria andSituacionIn(List values) {
			addCriterion("situacion in", values, "situacion");
			return this;
		}

		public Criteria andSituacionNotIn(List values) {
			addCriterion("situacion not in", values, "situacion");
			return this;
		}

		public Criteria andSituacionBetween(String value1, String value2) {
			addCriterion("situacion between", value1, value2, "situacion");
			return this;
		}

		public Criteria andSituacionNotBetween(String value1, String value2) {
			addCriterion("situacion not between", value1, value2, "situacion");
			return this;
		}

		public Criteria andModicadoIsNull() {
			addCriterion("modicado is null");
			return this;
		}

		public Criteria andModicadoIsNotNull() {
			addCriterion("modicado is not null");
			return this;
		}

		public Criteria andModicadoEqualTo(Date value) {
			addCriterion("modicado =", value, "modicado");
			return this;
		}

		public Criteria andModicadoNotEqualTo(Date value) {
			addCriterion("modicado <>", value, "modicado");
			return this;
		}

		public Criteria andModicadoGreaterThan(Date value) {
			addCriterion("modicado >", value, "modicado");
			return this;
		}

		public Criteria andModicadoGreaterThanOrEqualTo(Date value) {
			addCriterion("modicado >=", value, "modicado");
			return this;
		}

		public Criteria andModicadoLessThan(Date value) {
			addCriterion("modicado <", value, "modicado");
			return this;
		}

		public Criteria andModicadoLessThanOrEqualTo(Date value) {
			addCriterion("modicado <=", value, "modicado");
			return this;
		}

		public Criteria andModicadoIn(List values) {
			addCriterion("modicado in", values, "modicado");
			return this;
		}

		public Criteria andModicadoNotIn(List values) {
			addCriterion("modicado not in", values, "modicado");
			return this;
		}

		public Criteria andModicadoBetween(Date value1, Date value2) {
			addCriterion("modicado between", value1, value2, "modicado");
			return this;
		}

		public Criteria andModicadoNotBetween(Date value1, Date value2) {
			addCriterion("modicado not between", value1, value2, "modicado");
			return this;
		}

		public Criteria andIdUnidadenterramientoIsNull() {
			addCriterion("id_unidadenterramiento is null");
			return this;
		}

		public Criteria andIdUnidadenterramientoIsNotNull() {
			addCriterion("id_unidadenterramiento is not null");
			return this;
		}

		public Criteria andIdUnidadenterramientoEqualTo(Integer value) {
			addCriterion("id_unidadenterramiento =", value,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoNotEqualTo(Integer value) {
			addCriterion("id_unidadenterramiento <>", value,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoGreaterThan(Integer value) {
			addCriterion("id_unidadenterramiento >", value,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoGreaterThanOrEqualTo(
				Integer value) {
			addCriterion("id_unidadenterramiento >=", value,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoLessThan(Integer value) {
			addCriterion("id_unidadenterramiento <", value,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoLessThanOrEqualTo(Integer value) {
			addCriterion("id_unidadenterramiento <=", value,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoIn(List values) {
			addCriterion("id_unidadenterramiento in", values,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoNotIn(List values) {
			addCriterion("id_unidadenterramiento not in", values,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoBetween(Integer value1,
				Integer value2) {
			addCriterion("id_unidadenterramiento between", value1, value2,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andIdUnidadenterramientoNotBetween(Integer value1,
				Integer value2) {
			addCriterion("id_unidadenterramiento not between", value1, value2,
					"idUnidadenterramiento");
			return this;
		}

		public Criteria andEstadoIsNull() {
			addCriterion("estado is null");
			return this;
		}

		public Criteria andEstadoIsNotNull() {
			addCriterion("estado is not null");
			return this;
		}

		public Criteria andEstadoEqualTo(Integer value) {
			addCriterion("estado =", value, "estado");
			return this;
		}

		public Criteria andEstadoNotEqualTo(Integer value) {
			addCriterion("estado <>", value, "estado");
			return this;
		}

		public Criteria andEstadoGreaterThan(Integer value) {
			addCriterion("estado >", value, "estado");
			return this;
		}

		public Criteria andEstadoGreaterThanOrEqualTo(Integer value) {
			addCriterion("estado >=", value, "estado");
			return this;
		}

		public Criteria andEstadoLessThan(Integer value) {
			addCriterion("estado <", value, "estado");
			return this;
		}

		public Criteria andEstadoLessThanOrEqualTo(Integer value) {
			addCriterion("estado <=", value, "estado");
			return this;
		}

		public Criteria andEstadoIn(List values) {
			addCriterion("estado in", values, "estado");
			return this;
		}

		public Criteria andEstadoNotIn(List values) {
			addCriterion("estado not in", values, "estado");
			return this;
		}

		public Criteria andEstadoBetween(Integer value1, Integer value2) {
			addCriterion("estado between", value1, value2, "estado");
			return this;
		}

		public Criteria andEstadoNotBetween(Integer value1, Integer value2) {
			addCriterion("estado not between", value1, value2, "estado");
			return this;
		}
	}
}