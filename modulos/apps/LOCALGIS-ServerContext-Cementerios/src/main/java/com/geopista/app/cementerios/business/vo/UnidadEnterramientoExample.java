/**
 * UnidadEnterramientoExample.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.geopista.app.cementerios.business.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class UnidadEnterramientoExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public UnidadEnterramientoExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table cementerio.unidadenterramiento
	 * @ibatorgenerated  Thu Jun 02 17:40:09 CEST 2011
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andColumnaIsNull() {
			addCriterion("columna is null");
			return this;
		}

		public Criteria andColumnaIsNotNull() {
			addCriterion("columna is not null");
			return this;
		}

		public Criteria andColumnaEqualTo(Integer value) {
			addCriterion("columna =", value, "columna");
			return this;
		}

		public Criteria andColumnaNotEqualTo(Integer value) {
			addCriterion("columna <>", value, "columna");
			return this;
		}

		public Criteria andColumnaGreaterThan(Integer value) {
			addCriterion("columna >", value, "columna");
			return this;
		}

		public Criteria andColumnaGreaterThanOrEqualTo(Integer value) {
			addCriterion("columna >=", value, "columna");
			return this;
		}

		public Criteria andColumnaLessThan(Integer value) {
			addCriterion("columna <", value, "columna");
			return this;
		}

		public Criteria andColumnaLessThanOrEqualTo(Integer value) {
			addCriterion("columna <=", value, "columna");
			return this;
		}

		public Criteria andColumnaIn(List values) {
			addCriterion("columna in", values, "columna");
			return this;
		}

		public Criteria andColumnaNotIn(List values) {
			addCriterion("columna not in", values, "columna");
			return this;
		}

		public Criteria andColumnaBetween(Integer value1, Integer value2) {
			addCriterion("columna between", value1, value2, "columna");
			return this;
		}

		public Criteria andColumnaNotBetween(Integer value1, Integer value2) {
			addCriterion("columna not between", value1, value2, "columna");
			return this;
		}

		public Criteria andFilaIsNull() {
			addCriterion("fila is null");
			return this;
		}

		public Criteria andFilaIsNotNull() {
			addCriterion("fila is not null");
			return this;
		}

		public Criteria andFilaEqualTo(Integer value) {
			addCriterion("fila =", value, "fila");
			return this;
		}

		public Criteria andFilaNotEqualTo(Integer value) {
			addCriterion("fila <>", value, "fila");
			return this;
		}

		public Criteria andFilaGreaterThan(Integer value) {
			addCriterion("fila >", value, "fila");
			return this;
		}

		public Criteria andFilaGreaterThanOrEqualTo(Integer value) {
			addCriterion("fila >=", value, "fila");
			return this;
		}

		public Criteria andFilaLessThan(Integer value) {
			addCriterion("fila <", value, "fila");
			return this;
		}

		public Criteria andFilaLessThanOrEqualTo(Integer value) {
			addCriterion("fila <=", value, "fila");
			return this;
		}

		public Criteria andFilaIn(List values) {
			addCriterion("fila in", values, "fila");
			return this;
		}

		public Criteria andFilaNotIn(List values) {
			addCriterion("fila not in", values, "fila");
			return this;
		}

		public Criteria andFilaBetween(Integer value1, Integer value2) {
			addCriterion("fila between", value1, value2, "fila");
			return this;
		}

		public Criteria andFilaNotBetween(Integer value1, Integer value2) {
			addCriterion("fila not between", value1, value2, "fila");
			return this;
		}

		public Criteria andEstadoIsNull() {
			addCriterion("estado is null");
			return this;
		}

		public Criteria andEstadoIsNotNull() {
			addCriterion("estado is not null");
			return this;
		}

		public Criteria andEstadoEqualTo(Integer value) {
			addCriterion("estado =", value, "estado");
			return this;
		}

		public Criteria andEstadoNotEqualTo(Integer value) {
			addCriterion("estado <>", value, "estado");
			return this;
		}

		public Criteria andEstadoGreaterThan(Integer value) {
			addCriterion("estado >", value, "estado");
			return this;
		}

		public Criteria andEstadoGreaterThanOrEqualTo(Integer value) {
			addCriterion("estado >=", value, "estado");
			return this;
		}

		public Criteria andEstadoLessThan(Integer value) {
			addCriterion("estado <", value, "estado");
			return this;
		}

		public Criteria andEstadoLessThanOrEqualTo(Integer value) {
			addCriterion("estado <=", value, "estado");
			return this;
		}

		public Criteria andEstadoIn(List values) {
			addCriterion("estado in", values, "estado");
			return this;
		}

		public Criteria andEstadoNotIn(List values) {
			addCriterion("estado not in", values, "estado");
			return this;
		}

		public Criteria andEstadoBetween(Integer value1, Integer value2) {
			addCriterion("estado between", value1, value2, "estado");
			return this;
		}

		public Criteria andEstadoNotBetween(Integer value1, Integer value2) {
			addCriterion("estado not between", value1, value2, "estado");
			return this;
		}

		public Criteria andNumplazasIsNull() {
			addCriterion("numplazas is null");
			return this;
		}

		public Criteria andNumplazasIsNotNull() {
			addCriterion("numplazas is not null");
			return this;
		}

		public Criteria andNumplazasEqualTo(Integer value) {
			addCriterion("numplazas =", value, "numplazas");
			return this;
		}

		public Criteria andNumplazasNotEqualTo(Integer value) {
			addCriterion("numplazas <>", value, "numplazas");
			return this;
		}

		public Criteria andNumplazasGreaterThan(Integer value) {
			addCriterion("numplazas >", value, "numplazas");
			return this;
		}

		public Criteria andNumplazasGreaterThanOrEqualTo(Integer value) {
			addCriterion("numplazas >=", value, "numplazas");
			return this;
		}

		public Criteria andNumplazasLessThan(Integer value) {
			addCriterion("numplazas <", value, "numplazas");
			return this;
		}

		public Criteria andNumplazasLessThanOrEqualTo(Integer value) {
			addCriterion("numplazas <=", value, "numplazas");
			return this;
		}

		public Criteria andNumplazasIn(List values) {
			addCriterion("numplazas in", values, "numplazas");
			return this;
		}

		public Criteria andNumplazasNotIn(List values) {
			addCriterion("numplazas not in", values, "numplazas");
			return this;
		}

		public Criteria andNumplazasBetween(Integer value1, Integer value2) {
			addCriterion("numplazas between", value1, value2, "numplazas");
			return this;
		}

		public Criteria andNumplazasNotBetween(Integer value1, Integer value2) {
			addCriterion("numplazas not between", value1, value2, "numplazas");
			return this;
		}

		public Criteria andFultConstruccionIsNull() {
			addCriterion("fult_construccion is null");
			return this;
		}

		public Criteria andFultConstruccionIsNotNull() {
			addCriterion("fult_construccion is not null");
			return this;
		}

		public Criteria andFultConstruccionEqualTo(Date value) {
			addCriterionForJDBCDate("fult_construccion =", value,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionNotEqualTo(Date value) {
			addCriterionForJDBCDate("fult_construccion <>", value,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionGreaterThan(Date value) {
			addCriterionForJDBCDate("fult_construccion >", value,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fult_construccion >=", value,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionLessThan(Date value) {
			addCriterionForJDBCDate("fult_construccion <", value,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fult_construccion <=", value,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionIn(List values) {
			addCriterionForJDBCDate("fult_construccion in", values,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionNotIn(List values) {
			addCriterionForJDBCDate("fult_construccion not in", values,
					"fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fult_construccion between", value1,
					value2, "fultConstruccion");
			return this;
		}

		public Criteria andFultConstruccionNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fult_construccion not between", value1,
					value2, "fultConstruccion");
			return this;
		}

		public Criteria andFultModificacionIsNull() {
			addCriterion("fult_modificacion is null");
			return this;
		}

		public Criteria andFultModificacionIsNotNull() {
			addCriterion("fult_modificacion is not null");
			return this;
		}

		public Criteria andFultModificacionEqualTo(Date value) {
			addCriterionForJDBCDate("fult_modificacion =", value,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionNotEqualTo(Date value) {
			addCriterionForJDBCDate("fult_modificacion <>", value,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionGreaterThan(Date value) {
			addCriterionForJDBCDate("fult_modificacion >", value,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fult_modificacion >=", value,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionLessThan(Date value) {
			addCriterionForJDBCDate("fult_modificacion <", value,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fult_modificacion <=", value,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionIn(List values) {
			addCriterionForJDBCDate("fult_modificacion in", values,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionNotIn(List values) {
			addCriterionForJDBCDate("fult_modificacion not in", values,
					"fultModificacion");
			return this;
		}

		public Criteria andFultModificacionBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fult_modificacion between", value1,
					value2, "fultModificacion");
			return this;
		}

		public Criteria andFultModificacionNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fult_modificacion not between", value1,
					value2, "fultModificacion");
			return this;
		}

		public Criteria andIdElemcementerioIsNull() {
			addCriterion("id_elemcementerio is null");
			return this;
		}

		public Criteria andIdElemcementerioIsNotNull() {
			addCriterion("id_elemcementerio is not null");
			return this;
		}

		public Criteria andIdElemcementerioEqualTo(Integer value) {
			addCriterion("id_elemcementerio =", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioNotEqualTo(Integer value) {
			addCriterion("id_elemcementerio <>", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioGreaterThan(Integer value) {
			addCriterion("id_elemcementerio >", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_elemcementerio >=", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioLessThan(Integer value) {
			addCriterion("id_elemcementerio <", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioLessThanOrEqualTo(Integer value) {
			addCriterion("id_elemcementerio <=", value, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioIn(List values) {
			addCriterion("id_elemcementerio in", values, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioNotIn(List values) {
			addCriterion("id_elemcementerio not in", values, "idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioBetween(Integer value1,
				Integer value2) {
			addCriterion("id_elemcementerio between", value1, value2,
					"idElemcementerio");
			return this;
		}

		public Criteria andIdElemcementerioNotBetween(Integer value1,
				Integer value2) {
			addCriterion("id_elemcementerio not between", value1, value2,
					"idElemcementerio");
			return this;
		}

		public Criteria andIdLocalizacionIsNull() {
			addCriterion("id_localizacion is null");
			return this;
		}

		public Criteria andIdLocalizacionIsNotNull() {
			addCriterion("id_localizacion is not null");
			return this;
		}

		public Criteria andIdLocalizacionEqualTo(Integer value) {
			addCriterion("id_localizacion =", value, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionNotEqualTo(Integer value) {
			addCriterion("id_localizacion <>", value, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionGreaterThan(Integer value) {
			addCriterion("id_localizacion >", value, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_localizacion >=", value, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionLessThan(Integer value) {
			addCriterion("id_localizacion <", value, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionLessThanOrEqualTo(Integer value) {
			addCriterion("id_localizacion <=", value, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionIn(List values) {
			addCriterion("id_localizacion in", values, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionNotIn(List values) {
			addCriterion("id_localizacion not in", values, "idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionBetween(Integer value1, Integer value2) {
			addCriterion("id_localizacion between", value1, value2,
					"idLocalizacion");
			return this;
		}

		public Criteria andIdLocalizacionNotBetween(Integer value1,
				Integer value2) {
			addCriterion("id_localizacion not between", value1, value2,
					"idLocalizacion");
			return this;
		}

		public Criteria andTipoUnidadIsNull() {
			addCriterion("tipo_unidad is null");
			return this;
		}

		public Criteria andTipoUnidadIsNotNull() {
			addCriterion("tipo_unidad is not null");
			return this;
		}

		public Criteria andTipoUnidadEqualTo(Integer value) {
			addCriterion("tipo_unidad =", value, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadNotEqualTo(Integer value) {
			addCriterion("tipo_unidad <>", value, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadGreaterThan(Integer value) {
			addCriterion("tipo_unidad >", value, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadGreaterThanOrEqualTo(Integer value) {
			addCriterion("tipo_unidad >=", value, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadLessThan(Integer value) {
			addCriterion("tipo_unidad <", value, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadLessThanOrEqualTo(Integer value) {
			addCriterion("tipo_unidad <=", value, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadIn(List values) {
			addCriterion("tipo_unidad in", values, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadNotIn(List values) {
			addCriterion("tipo_unidad not in", values, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadBetween(Integer value1, Integer value2) {
			addCriterion("tipo_unidad between", value1, value2, "tipoUnidad");
			return this;
		}

		public Criteria andTipoUnidadNotBetween(Integer value1, Integer value2) {
			addCriterion("tipo_unidad not between", value1, value2,
					"tipoUnidad");
			return this;
		}

		public Criteria andDescripcionIsNull() {
			addCriterion("descripcion is null");
			return this;
		}

		public Criteria andDescripcionIsNotNull() {
			addCriterion("descripcion is not null");
			return this;
		}

		public Criteria andDescripcionEqualTo(String value) {
			addCriterion("descripcion =", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionNotEqualTo(String value) {
			addCriterion("descripcion <>", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionGreaterThan(String value) {
			addCriterion("descripcion >", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
			addCriterion("descripcion >=", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionLessThan(String value) {
			addCriterion("descripcion <", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionLessThanOrEqualTo(String value) {
			addCriterion("descripcion <=", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionLike(String value) {
			addCriterion("descripcion like", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionNotLike(String value) {
			addCriterion("descripcion not like", value, "descripcion");
			return this;
		}

		public Criteria andDescripcionIn(List values) {
			addCriterion("descripcion in", values, "descripcion");
			return this;
		}

		public Criteria andDescripcionNotIn(List values) {
			addCriterion("descripcion not in", values, "descripcion");
			return this;
		}

		public Criteria andDescripcionBetween(String value1, String value2) {
			addCriterion("descripcion between", value1, value2, "descripcion");
			return this;
		}

		public Criteria andDescripcionNotBetween(String value1, String value2) {
			addCriterion("descripcion not between", value1, value2,
					"descripcion");
			return this;
		}

		public Criteria andCodigoIsNull() {
			addCriterion("codigo is null");
			return this;
		}

		public Criteria andCodigoIsNotNull() {
			addCriterion("codigo is not null");
			return this;
		}

		public Criteria andCodigoEqualTo(String value) {
			addCriterion("codigo =", value, "codigo");
			return this;
		}

		public Criteria andCodigoNotEqualTo(String value) {
			addCriterion("codigo <>", value, "codigo");
			return this;
		}

		public Criteria andCodigoGreaterThan(String value) {
			addCriterion("codigo >", value, "codigo");
			return this;
		}

		public Criteria andCodigoGreaterThanOrEqualTo(String value) {
			addCriterion("codigo >=", value, "codigo");
			return this;
		}

		public Criteria andCodigoLessThan(String value) {
			addCriterion("codigo <", value, "codigo");
			return this;
		}

		public Criteria andCodigoLessThanOrEqualTo(String value) {
			addCriterion("codigo <=", value, "codigo");
			return this;
		}

		public Criteria andCodigoLike(String value) {
			addCriterion("codigo like", value, "codigo");
			return this;
		}

		public Criteria andCodigoNotLike(String value) {
			addCriterion("codigo not like", value, "codigo");
			return this;
		}

		public Criteria andCodigoIn(List values) {
			addCriterion("codigo in", values, "codigo");
			return this;
		}

		public Criteria andCodigoNotIn(List values) {
			addCriterion("codigo not in", values, "codigo");
			return this;
		}

		public Criteria andCodigoBetween(String value1, String value2) {
			addCriterion("codigo between", value1, value2, "codigo");
			return this;
		}

		public Criteria andCodigoNotBetween(String value1, String value2) {
			addCriterion("codigo not between", value1, value2, "codigo");
			return this;
		}

		public Criteria andFreformaIsNull() {
			addCriterion("freforma is null");
			return this;
		}

		public Criteria andFreformaIsNotNull() {
			addCriterion("freforma is not null");
			return this;
		}

		public Criteria andFreformaEqualTo(Date value) {
			addCriterionForJDBCDate("freforma =", value, "freforma");
			return this;
		}

		public Criteria andFreformaNotEqualTo(Date value) {
			addCriterionForJDBCDate("freforma <>", value, "freforma");
			return this;
		}

		public Criteria andFreformaGreaterThan(Date value) {
			addCriterionForJDBCDate("freforma >", value, "freforma");
			return this;
		}

		public Criteria andFreformaGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("freforma >=", value, "freforma");
			return this;
		}

		public Criteria andFreformaLessThan(Date value) {
			addCriterionForJDBCDate("freforma <", value, "freforma");
			return this;
		}

		public Criteria andFreformaLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("freforma <=", value, "freforma");
			return this;
		}

		public Criteria andFreformaIn(List values) {
			addCriterionForJDBCDate("freforma in", values, "freforma");
			return this;
		}

		public Criteria andFreformaNotIn(List values) {
			addCriterionForJDBCDate("freforma not in", values, "freforma");
			return this;
		}

		public Criteria andFreformaBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("freforma between", value1, value2,
					"freforma");
			return this;
		}

		public Criteria andFreformaNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("freforma not between", value1, value2,
					"freforma");
			return this;
		}
	}
}