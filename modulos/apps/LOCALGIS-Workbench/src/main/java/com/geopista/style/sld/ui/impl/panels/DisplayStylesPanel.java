/**
 * DisplayStylesPanel.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * panel.java
 *
 * Created on 14 de junio de 2004, 18:18
 */
package com.geopista.style.sld.ui.impl.panels;

import java.awt.Component;
import java.util.Iterator;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;

import org.deegree.graphics.sld.UserStyle;

import com.geopista.app.AppContext;
import com.geopista.model.GeopistaLayer;
import com.geopista.model.IGeopistaLayer;
import com.geopista.style.sld.model.SLDStyle;

import es.enxenio.util.controller.Action;
import es.enxenio.util.controller.ActionForward;
import es.enxenio.util.controller.FrontController;
import es.enxenio.util.controller.FrontControllerFactory;
import es.enxenio.util.controller.Request;
import es.enxenio.util.controller.Session;
import es.enxenio.util.ui.impl.AbstractPanel;

/**
 *
 * @author  Enxenio S.L.
 */
public class DisplayStylesPanel extends AbstractPanel implements ActionForward {
    
    public static final String STYLE_SEPARATOR = ":_:"; 

    private static AppContext aplicacion = (AppContext) AppContext.getApplicationContext();
    public void configure(Request request) {
            List userStyleList;
            Iterator listIterator;
            UserStyle aUserStyle;
            DefaultListModel listModel;
            Session session;
            String currentStyleName;
            String layerName;

            session = FrontControllerFactory.getSession();
            userStyleList = (List)session.getAttribute("UserStyleList");
            layerName = (String)session.getAttribute("LayerName");
            layerNameLbl.setText(layerName);
            listIterator = userStyleList.iterator();
            listModel = new DefaultListModel();
            
                        
            while (listIterator.hasNext()) {
                    aUserStyle = (UserStyle)listIterator.next();
                    listModel.addElement(aUserStyle.getName());  
            }
            currentStyleName = (String)session.getAttribute("CurrentStyleName");
            styleList.setModel(listModel);
            styleList.setSelectedIndex(listModel.indexOf(currentStyleName));					
    }
    
    class ListRenderer extends JLabel
    implements ListCellRenderer {
       
        public ListRenderer() {
            setOpaque(true);         
        }
        
        /*
         * Render de la lista de estilos
         */
        public Component getListCellRendererComponent(
                JList list,
                Object value,
                int index,
                boolean isSelected,
                boolean cellHasFocus) {
           
            if (isSelected) {
                setBackground(list.getSelectionBackground());
                setForeground(list.getSelectionForeground());
            } else {
                setBackground(list.getBackground());
                setForeground(list.getForeground());
            }
            
            //Escribe el texto
            String txt = "";
            Session session = FrontControllerFactory.getSession();
            Object o = session.getAttribute("Layer");
            if (o !=null && o instanceof GeopistaLayer)
            {
                String systemId = ((IGeopistaLayer)o).getSystemId();
                if (value.toString().startsWith(systemId+STYLE_SEPARATOR))
                    txt = value.toString().substring(systemId.length()+STYLE_SEPARATOR.length());
                else
                    txt = value.toString();
            }
            
            setText(txt);          
            
            return this;
        }
 
    }
    public String getTitle() {
            return aplicacion.getI18nString("SLDStyle");		
    }
    
   /** Creates new form panel */
    public DisplayStylesPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        actionPanel = new javax.swing.JPanel();
        styleListPanel = new javax.swing.JPanel();
        styleListScrolll = new javax.swing.JScrollPane();
        styleList = new javax.swing.JList();
        
        styleListButtonsPanel = new javax.swing.JPanel();
        importBtn = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        newBtn = new javax.swing.JButton();
        changeBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        layerLbl = new javax.swing.JLabel();
        layerNameLbl = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        setPreferredSize(new java.awt.Dimension(315, 320));
        actionPanel.setLayout(new java.awt.BorderLayout());

        actionPanel.setBorder(new javax.swing.border.TitledBorder(""));
        styleListPanel.setLayout(new java.awt.BorderLayout());

        styleListPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 0)));
        styleList.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        styleList.setCellRenderer(new ListRenderer());
        
        styleListScrolll.setViewportView(styleList);

        styleListPanel.add(styleListScrolll, java.awt.BorderLayout.CENTER);

        actionPanel.add(styleListPanel, java.awt.BorderLayout.CENTER);

        styleListButtonsPanel.setLayout(new java.awt.GridBagLayout());

        importBtn.setText(aplicacion.getI18nString("SLDStyle.Importar"));
        importBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBtnActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        styleListButtonsPanel.add(importBtn, gridBagConstraints);

        exportBtn.setText(aplicacion.getI18nString("SLDStyle.Exportar"));
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        styleListButtonsPanel.add(exportBtn, gridBagConstraints);

        newBtn.setText(aplicacion.getI18nString("SLDStyle.Nuevo"));
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        //Separación
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        styleListButtonsPanel.add(new JLabel("  "), gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        styleListButtonsPanel.add(newBtn, gridBagConstraints);

        changeBtn.setText(aplicacion.getI18nString("SLDStyle.Modificar"));
        changeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBtnActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        styleListButtonsPanel.add(changeBtn, gridBagConstraints);

        deleteBtn.setText(aplicacion.getI18nString("SLDStyle.Borrar"));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        styleListButtonsPanel.add(deleteBtn, gridBagConstraints);

        actionPanel.add(styleListButtonsPanel, java.awt.BorderLayout.EAST);

        add(actionPanel, java.awt.BorderLayout.CENTER);

        infoPanel.setLayout(new java.awt.GridBagLayout());

        layerLbl.setText(aplicacion.getI18nString("SLDStyle.Capa")+":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        infoPanel.add(layerLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        infoPanel.add(layerNameLbl, gridBagConstraints);

        add(infoPanel, java.awt.BorderLayout.NORTH);

        okBtn.setText(aplicacion.getI18nString("SLDStyle.Aceptar"));
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        buttonPanel.add(okBtn);

        add(buttonPanel, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
        Request theRequest = FrontControllerFactory.createRequest();
        if (styleList.getSelectedIndex() != -1) {
                theRequest.setAttribute("CurrentStyleName",styleList.getModel().getElementAt(styleList.getSelectedIndex()));
				FrontController fc =  FrontControllerFactory.getFrontController();
				Action theAction = null;
				int result = JOptionPane.showConfirmDialog(
					this,
					aplicacion.getI18nString("SLDStyle.CambiosPersistentes"),
					"Confirmación",					
					JOptionPane.YES_NO_OPTION,
					JOptionPane.QUESTION_MESSAGE);
				if (result == JOptionPane.YES_OPTION) {
					theAction = fc.getAction("CreateSLDStyle"); 
				}
				else {
					theAction = fc.getAction("UpdateSLDStyle");
				}
                ActionForward theActionForward = theAction.doExecute(theRequest);
                _container.forward(theActionForward, theRequest);
        }
        else {
                JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.Seleccionar1Estilo"));
        }		
    }//GEN-LAST:event_okBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        Request theRequest = FrontControllerFactory.createRequest();
        if (styleList.getSelectedIndices().length == 1) {
                theRequest.setAttribute("StyleName", styleList.getModel().getElementAt(styleList.getSelectedIndex()));			
                FrontController fc =  FrontControllerFactory.getFrontController();
                Action theAction = fc.getAction("DeleteUserStyle"); 
                ActionForward theActionForward = theAction.doExecute(theRequest);
                _container.forward(theActionForward, theRequest);
        }
	    else if (styleList.getSelectedIndices().length > 1){
            JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.SeleccionarSolo1Estilo"));			
	    }
	    else if (styleList.getSelectedIndices().length == 1){
            JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.Seleccionar1Estilo"));			
	    }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void changeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBtnActionPerformed
        Request theRequest = FrontControllerFactory.createRequest();
        if (styleList.getSelectedIndices().length == 1) {
                theRequest.setAttribute("StyleName", styleList.getModel().getElementAt(styleList.getSelectedIndex()));
                FrontController fc =  FrontControllerFactory.getFrontController();
                //Action theAction = fc.getAction("UpdateUserStyle"); 
				Action theAction = fc.getAction("UpdateCustomUserStyle");
                ActionForward theActionForward = theAction.doExecute(theRequest);
                _container.forward(theActionForward, theRequest);
        }
	    else if (styleList.getSelectedIndices().length > 1){
            JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.SeleccionarSolo1Estilo"));		
	    }
	    else if (styleList.getSelectedIndices().length == 1){
            JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.Seleccionar1Estilo"));			
	    }
    }//GEN-LAST:event_changeBtnActionPerformed

    private void importBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBtnActionPerformed
        Request theRequest = FrontControllerFactory.createRequest();
        if (styleList.getSelectedIndices().length == 1) {
            theRequest.setAttribute("StyleName", styleList.getModel().getElementAt(styleList.getSelectedIndex()));
            theRequest.setAttribute("LayerName", (String)(FrontControllerFactory.getSession()).getAttribute("LayerName"));
            theRequest.setAttribute("Layer", (FrontControllerFactory.getSession()).getAttribute("Layer"));
            theRequest.setAttribute("SLDStyle", (FrontControllerFactory.getSession()).getAttribute("SLDStyle"));
			theRequest.setAttribute("importar", "true");
            FrontController fc =  FrontControllerFactory.getFrontController();
			Action theAction = fc.getAction("DefineFileExport");
            ActionForward theActionForward = theAction.doExecute(theRequest);
            _container.forward(theActionForward, theRequest);
	    }
	    else if (styleList.getSelectedIndices().length > 1){
            JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.SeleccionarSolo1Estilo"));			
	    }
	    else if (styleList.getSelectedIndices().length == 1){
            JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.Seleccionar1Estilo"));			
	    }
    }//GEN-LAST:event_importBtnActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        Request theRequest = FrontControllerFactory.createRequest();
        if (styleList.getSelectedIndex() != -1) {
            theRequest.setAttribute("selectedStyles", styleList.getSelectedValues());
    		theRequest.setAttribute("SLDStyle", (SLDStyle)(FrontControllerFactory.getSession()).getAttribute("SLDStyle"));
            theRequest.setAttribute("LayerName", (String)(FrontControllerFactory.getSession()).getAttribute("LayerName"));
            theRequest.setAttribute("Layer", (FrontControllerFactory.getSession()).getAttribute("Layer"));
			theRequest.setAttribute("importar", "false");
            FrontController fc =  FrontControllerFactory.getFrontController();
			Action theAction = fc.getAction("DefineFileExport");
            ActionForward theActionForward = theAction.doExecute(theRequest);
            _container.forward(theActionForward, theRequest);
	    }
	    else {
            JOptionPane.showMessageDialog(null, aplicacion.getI18nString("SLDStyle.Seleccionar1Estilo"));			
	    }
    }//GEN-LAST:event_exportBtnActionPerformed
    
    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        Request theRequest = FrontControllerFactory.createRequest();
        FrontController fc =  FrontControllerFactory.getFrontController();
        //Action theAction = fc.getAction("InsertUserStyle"); 
		Action theAction = fc.getAction("InsertCustomUserStyle");
        ActionForward theActionForward = theAction.doExecute(theRequest);
        _container.forward(theActionForward, theRequest);
    }//GEN-LAST:event_newBtnActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPanel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton changeBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel layerLbl;
    private javax.swing.JLabel layerNameLbl;
    private javax.swing.JButton newBtn;
    private javax.swing.JButton okBtn;
    private javax.swing.JButton importBtn;
    private javax.swing.JButton exportBtn;
    private javax.swing.JList styleList;
    private javax.swing.JPanel styleListButtonsPanel;
    private javax.swing.JPanel styleListPanel;
    private javax.swing.JScrollPane styleListScrolll;
    // End of variables declaration//GEN-END:variables
    
}
