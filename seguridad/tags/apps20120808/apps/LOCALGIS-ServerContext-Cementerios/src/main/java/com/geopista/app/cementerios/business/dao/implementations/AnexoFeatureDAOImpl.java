package com.geopista.app.cementerios.business.dao.implementations;

import java.sql.SQLException;
import java.util.List;

import com.geopista.app.cementerios.business.dao.DAO;
import com.geopista.app.cementerios.business.dao.interfaces.AnexoFeatureDAO;
import com.geopista.app.cementerios.business.vo.AnexoFeatureExample;
import com.geopista.app.cementerios.business.vo.AnexoFeatureKey;

public class AnexoFeatureDAOImpl extends DAO implements AnexoFeatureDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public AnexoFeatureDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @throws SQLException 
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public int deleteByExample(AnexoFeatureExample example) throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"cementerio_anexo_feature.ibatorgenerated_deleteByExample",
				example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public int deleteByPrimaryKey(AnexoFeatureKey key) throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"cementerio_anexo_feature.ibatorgenerated_deleteByPrimaryKey",
				key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public void insert(AnexoFeatureKey record) throws SQLException {
		getSqlMapClientTemplate().insert(
				"cementerio_anexo_feature.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public void insertSelective(AnexoFeatureKey record) throws SQLException {
		getSqlMapClientTemplate().insert(
				"cementerio_anexo_feature.ibatorgenerated_insertSelective",
				record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public List selectByExample(AnexoFeatureExample example) throws SQLException {
		List list = getSqlMapClientTemplate().queryForList(
				"cementerio_anexo_feature.ibatorgenerated_selectByExample",
				example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public int updateByExampleSelective(AnexoFeatureKey record,
			AnexoFeatureExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate()
				.update("cementerio_anexo_feature.ibatorgenerated_updateByExampleSelective",
						parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	public int updateByExample(AnexoFeatureKey record,
			AnexoFeatureExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"cementerio_anexo_feature.ibatorgenerated_updateByExample",
				parms);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table cementerio.anexo_feature
	 * @ibatorgenerated  Tue Jun 07 11:18:50 CEST 2011
	 */
	private static class UpdateByExampleParms extends AnexoFeatureExample {
		private Object record;

		public UpdateByExampleParms(Object record, AnexoFeatureExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}