package com.geopista.app.cementerios.business.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class IntervencionExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public IntervencionExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	protected IntervencionExample(IntervencionExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table cementerio.intervencion
	 * @ibatorgenerated  Fri Jul 08 14:28:21 CEST 2011
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andInformeIsNull() {
			addCriterion("informe is null");
			return this;
		}

		public Criteria andInformeIsNotNull() {
			addCriterion("informe is not null");
			return this;
		}

		public Criteria andInformeEqualTo(String value) {
			addCriterion("informe =", value, "informe");
			return this;
		}

		public Criteria andInformeNotEqualTo(String value) {
			addCriterion("informe <>", value, "informe");
			return this;
		}

		public Criteria andInformeGreaterThan(String value) {
			addCriterion("informe >", value, "informe");
			return this;
		}

		public Criteria andInformeGreaterThanOrEqualTo(String value) {
			addCriterion("informe >=", value, "informe");
			return this;
		}

		public Criteria andInformeLessThan(String value) {
			addCriterion("informe <", value, "informe");
			return this;
		}

		public Criteria andInformeLessThanOrEqualTo(String value) {
			addCriterion("informe <=", value, "informe");
			return this;
		}

		public Criteria andInformeLike(String value) {
			addCriterion("informe like", value, "informe");
			return this;
		}

		public Criteria andInformeNotLike(String value) {
			addCriterion("informe not like", value, "informe");
			return this;
		}

		public Criteria andInformeIn(List values) {
			addCriterion("informe in", values, "informe");
			return this;
		}

		public Criteria andInformeNotIn(List values) {
			addCriterion("informe not in", values, "informe");
			return this;
		}

		public Criteria andInformeBetween(String value1, String value2) {
			addCriterion("informe between", value1, value2, "informe");
			return this;
		}

		public Criteria andInformeNotBetween(String value1, String value2) {
			addCriterion("informe not between", value1, value2, "informe");
			return this;
		}

		public Criteria andFechaFinIsNull() {
			addCriterion("fecha_fin is null");
			return this;
		}

		public Criteria andFechaFinIsNotNull() {
			addCriterion("fecha_fin is not null");
			return this;
		}

		public Criteria andFechaFinEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_fin =", value, "fechaFin");
			return this;
		}

		public Criteria andFechaFinNotEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_fin <>", value, "fechaFin");
			return this;
		}

		public Criteria andFechaFinGreaterThan(Date value) {
			addCriterionForJDBCDate("fecha_fin >", value, "fechaFin");
			return this;
		}

		public Criteria andFechaFinGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_fin >=", value, "fechaFin");
			return this;
		}

		public Criteria andFechaFinLessThan(Date value) {
			addCriterionForJDBCDate("fecha_fin <", value, "fechaFin");
			return this;
		}

		public Criteria andFechaFinLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_fin <=", value, "fechaFin");
			return this;
		}

		public Criteria andFechaFinIn(List values) {
			addCriterionForJDBCDate("fecha_fin in", values, "fechaFin");
			return this;
		}

		public Criteria andFechaFinNotIn(List values) {
			addCriterionForJDBCDate("fecha_fin not in", values, "fechaFin");
			return this;
		}

		public Criteria andFechaFinBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_fin between", value1, value2,
					"fechaFin");
			return this;
		}

		public Criteria andFechaFinNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_fin not between", value1, value2,
					"fechaFin");
			return this;
		}

		public Criteria andFechaInicioIsNull() {
			addCriterion("fecha_inicio is null");
			return this;
		}

		public Criteria andFechaInicioIsNotNull() {
			addCriterion("fecha_inicio is not null");
			return this;
		}

		public Criteria andFechaInicioEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_inicio =", value, "fechaInicio");
			return this;
		}

		public Criteria andFechaInicioNotEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_inicio <>", value, "fechaInicio");
			return this;
		}

		public Criteria andFechaInicioGreaterThan(Date value) {
			addCriterionForJDBCDate("fecha_inicio >", value, "fechaInicio");
			return this;
		}

		public Criteria andFechaInicioGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_inicio >=", value, "fechaInicio");
			return this;
		}

		public Criteria andFechaInicioLessThan(Date value) {
			addCriterionForJDBCDate("fecha_inicio <", value, "fechaInicio");
			return this;
		}

		public Criteria andFechaInicioLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_inicio <=", value, "fechaInicio");
			return this;
		}

		public Criteria andFechaInicioIn(List values) {
			addCriterionForJDBCDate("fecha_inicio in", values, "fechaInicio");
			return this;
		}

		public Criteria andFechaInicioNotIn(List values) {
			addCriterionForJDBCDate("fecha_inicio not in", values,
					"fechaInicio");
			return this;
		}

		public Criteria andFechaInicioBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_inicio between", value1, value2,
					"fechaInicio");
			return this;
		}

		public Criteria andFechaInicioNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_inicio not between", value1, value2,
					"fechaInicio");
			return this;
		}

		public Criteria andLocalizacionIsNull() {
			addCriterion("localizacion is null");
			return this;
		}

		public Criteria andLocalizacionIsNotNull() {
			addCriterion("localizacion is not null");
			return this;
		}

		public Criteria andLocalizacionEqualTo(String value) {
			addCriterion("localizacion =", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionNotEqualTo(String value) {
			addCriterion("localizacion <>", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionGreaterThan(String value) {
			addCriterion("localizacion >", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionGreaterThanOrEqualTo(String value) {
			addCriterion("localizacion >=", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionLessThan(String value) {
			addCriterion("localizacion <", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionLessThanOrEqualTo(String value) {
			addCriterion("localizacion <=", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionLike(String value) {
			addCriterion("localizacion like", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionNotLike(String value) {
			addCriterion("localizacion not like", value, "localizacion");
			return this;
		}

		public Criteria andLocalizacionIn(List values) {
			addCriterion("localizacion in", values, "localizacion");
			return this;
		}

		public Criteria andLocalizacionNotIn(List values) {
			addCriterion("localizacion not in", values, "localizacion");
			return this;
		}

		public Criteria andLocalizacionBetween(String value1, String value2) {
			addCriterion("localizacion between", value1, value2, "localizacion");
			return this;
		}

		public Criteria andLocalizacionNotBetween(String value1, String value2) {
			addCriterion("localizacion not between", value1, value2,
					"localizacion");
			return this;
		}

		public Criteria andCodigoIsNull() {
			addCriterion("codigo is null");
			return this;
		}

		public Criteria andCodigoIsNotNull() {
			addCriterion("codigo is not null");
			return this;
		}

		public Criteria andCodigoEqualTo(String value) {
			addCriterion("codigo =", value, "codigo");
			return this;
		}

		public Criteria andCodigoNotEqualTo(String value) {
			addCriterion("codigo <>", value, "codigo");
			return this;
		}

		public Criteria andCodigoGreaterThan(String value) {
			addCriterion("codigo >", value, "codigo");
			return this;
		}

		public Criteria andCodigoGreaterThanOrEqualTo(String value) {
			addCriterion("codigo >=", value, "codigo");
			return this;
		}

		public Criteria andCodigoLessThan(String value) {
			addCriterion("codigo <", value, "codigo");
			return this;
		}

		public Criteria andCodigoLessThanOrEqualTo(String value) {
			addCriterion("codigo <=", value, "codigo");
			return this;
		}

		public Criteria andCodigoLike(String value) {
			addCriterion("codigo like", value, "codigo");
			return this;
		}

		public Criteria andCodigoNotLike(String value) {
			addCriterion("codigo not like", value, "codigo");
			return this;
		}

		public Criteria andCodigoIn(List values) {
			addCriterion("codigo in", values, "codigo");
			return this;
		}

		public Criteria andCodigoNotIn(List values) {
			addCriterion("codigo not in", values, "codigo");
			return this;
		}

		public Criteria andCodigoBetween(String value1, String value2) {
			addCriterion("codigo between", value1, value2, "codigo");
			return this;
		}

		public Criteria andCodigoNotBetween(String value1, String value2) {
			addCriterion("codigo not between", value1, value2, "codigo");
			return this;
		}

		public Criteria andEstadoIsNull() {
			addCriterion("estado is null");
			return this;
		}

		public Criteria andEstadoIsNotNull() {
			addCriterion("estado is not null");
			return this;
		}

		public Criteria andEstadoEqualTo(String value) {
			addCriterion("estado =", value, "estado");
			return this;
		}

		public Criteria andEstadoNotEqualTo(String value) {
			addCriterion("estado <>", value, "estado");
			return this;
		}

		public Criteria andEstadoGreaterThan(String value) {
			addCriterion("estado >", value, "estado");
			return this;
		}

		public Criteria andEstadoGreaterThanOrEqualTo(String value) {
			addCriterion("estado >=", value, "estado");
			return this;
		}

		public Criteria andEstadoLessThan(String value) {
			addCriterion("estado <", value, "estado");
			return this;
		}

		public Criteria andEstadoLessThanOrEqualTo(String value) {
			addCriterion("estado <=", value, "estado");
			return this;
		}

		public Criteria andEstadoLike(String value) {
			addCriterion("estado like", value, "estado");
			return this;
		}

		public Criteria andEstadoNotLike(String value) {
			addCriterion("estado not like", value, "estado");
			return this;
		}

		public Criteria andEstadoIn(List values) {
			addCriterion("estado in", values, "estado");
			return this;
		}

		public Criteria andEstadoNotIn(List values) {
			addCriterion("estado not in", values, "estado");
			return this;
		}

		public Criteria andEstadoBetween(String value1, String value2) {
			addCriterion("estado between", value1, value2, "estado");
			return this;
		}

		public Criteria andEstadoNotBetween(String value1, String value2) {
			addCriterion("estado not between", value1, value2, "estado");
			return this;
		}
	}
}