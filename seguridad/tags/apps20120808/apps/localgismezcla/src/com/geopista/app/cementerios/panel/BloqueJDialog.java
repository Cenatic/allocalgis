package com.geopista.app.cementerios.panel;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import com.geopista.app.AppContext;
import com.geopista.app.cementerios.Constantes;
import com.geopista.app.cementerios.Estructuras;
import com.geopista.protocol.administrador.dominios.DomainNode;
import com.geopista.protocol.cementerios.BloqueBean;
import com.geopista.util.ApplicationContext;

/*
 * BloqueJDialog.java
 *
 * Created on 17-mar-2011, 16:02:23
 */
/**
 *
 * @author yraton
 */
public class BloqueJDialog extends javax.swing.JDialog {

    /** Creates new form DefuncionJDialog */
	private static final long serialVersionUID = 1L;
	private String operacion;
	private String tipo;
    private ApplicationContext aplicacion;
    private javax.swing.JFrame desktop;
    
    private BloqueBean bloque;
    
	private BotoneraAceptarCancelarJPanel botoneraAceptarCancelarJPanel;

    private ArrayList actionListeners= new ArrayList();
    private String locale;

    private SimpleDateFormat fecha = new SimpleDateFormat("dd/MM/yyyy");  //  @jve:decl-index=0:

	//El patron solo puede ser 4 o 5 nicho o columbario -- por defecto nicho que es el mas usado
	private int patronUnidad = 4;
    private Vector VDomainTipoUnidadesBloque = new Vector();
	


	/** Creates new form BloqueJDialog */
    public BloqueJDialog (JFrame desktop, String locale, String operacion,String tipo) throws Exception{
    	super(desktop);
        this.desktop= desktop;
        this.locale= locale;
        this.operacion= operacion;
        this.tipo=tipo;
        inicializar();
    }

    /** Creates new form BloqueJDialog */
    public BloqueJDialog(JFrame desktop, String locale) throws Exception{
        super(desktop);
        this.desktop= desktop;
        this.locale= locale;
        inicializar();
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void inicializar() {
    	
    	
    	this.aplicacion = (AppContext) AppContext.getApplicationContext();
        getContentPane().setLayout(new BorderLayout());
        renombrarComponentes();
        setModal(true);

        desktop = new javax.swing.JFrame();
    	
        BloqueJPanel = new javax.swing.JPanel();
        datosGeneralesComunesJPanel = new javax.swing.JPanel();
        entidadJLabel = new javax.swing.JLabel();
        cementerioJLabel = new javax.swing.JLabel();
        entidadJTextField = new javax.swing.JTextField();
        cementerioJTextField = new javax.swing.JTextField();
        datosBloqueJPanel = new javax.swing.JPanel();
        descripcionJLabel = new javax.swing.JLabel();
        descripcionJTextField = new javax.swing.JTextField();
        tipoUnidadJComboBox = new javax.swing.JComboBox();
        tipoBloqueJLabel = new javax.swing.JLabel();
        numFilasJLabel = new javax.swing.JLabel();
        numFilasJTextField = new javax.swing.JTextField();
        numColumnasJLabel = new javax.swing.JLabel();
        numColumnasJTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        BloqueJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        datosGeneralesComunesJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        datosGeneralesComunesJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        entidadJLabel.setText("Entidad");
        datosGeneralesComunesJPanel.add(entidadJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        cementerioJLabel.setText("Cementerio");
        datosGeneralesComunesJPanel.add(cementerioJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        entidadJTextField.setText("");
        datosGeneralesComunesJPanel.add(entidadJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 780, -1));

        cementerioJTextField.setText("");
        datosGeneralesComunesJPanel.add(cementerioJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 780, -1));
        
        botoneraAceptarCancelarJPanel= new BotoneraAceptarCancelarJPanel();
        botoneraAceptarCancelarJPanel.addActionListener(new java.awt.event.ActionListener(){
          public void actionPerformed(ActionEvent e){
				botoneraAceptarCancelarJPanel_actionPerformed();
			}
			});

        
        addWindowListener(new java.awt.event.WindowAdapter() {
        	public void windowClosing(java.awt.event.WindowEvent evt) {
        		exitForm(evt);
          }
      });
      
     // setSize(800, 500);
        
      BloqueJPanel.add(datosGeneralesComunesJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 880, 70));

      datosBloqueJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
      datosBloqueJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
      descripcionJLabel.setText("Descripcion");
      datosBloqueJPanel.add(descripcionJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 22, 67, -1));

      datosBloqueJPanel.add(descripcionJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 19, 758, -1));

        //cargarmos las estructuras..
      while (!Estructuras.isCargada()){
            if (!Estructuras.isIniciada()) Estructuras.cargarEstructuras();
            try {Thread.sleep(500);}catch(Exception e){}
        }

        Vector vDomainTipoUnidades = Estructuras.getListaCombosSorted(locale);
        
        for (int i = 0; i < vDomainTipoUnidades.size(); i++) {
        	DomainNode node = (DomainNode) vDomainTipoUnidades.get(i);
        	if (node.getPatron().equalsIgnoreCase("4") || node.getPatron().equalsIgnoreCase("5")){
        		VDomainTipoUnidadesBloque.add(node);
        	}

        }
        
        tipoUnidadJComboBox = new JComboBox(VDomainTipoUnidadesBloque);
        
        tipoUnidadJComboBox.addActionListener(new java.awt.event.ActionListener(){
        	public void actionPerformed(ActionEvent e){
        		JComboBox cb = (JComboBox)e.getSource();
        		DomainNode dNode= (DomainNode) cb.getSelectedItem();
        		int patron = Integer.parseInt(dNode.getPatron());
        		if (patron != 0){
        			setPatronUnidad(patron);
        		}
        	}
        });
        
    datosBloqueJPanel.add(tipoUnidadJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 48, 195, -1));

    tipoBloqueJLabel.setText("Tipo Unidades");
    datosBloqueJPanel.add(tipoBloqueJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 51, 76, -1));

    numFilasJLabel.setText("Número de Filas");
    datosBloqueJPanel.add(numFilasJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 51, -1, -1));
    datosBloqueJPanel.add(numFilasJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 48, 146, -1));

    numColumnasJLabel.setText("Número de Columnas");
    datosBloqueJPanel.add(numColumnasJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(579, 51, 118, -1));
    datosBloqueJPanel.add(numColumnasJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(707, 48, 149, -1));

    BloqueJPanel.add(datosBloqueJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 880, 90));
        
    getContentPane().add(BloqueJPanel, java.awt.BorderLayout.CENTER);
    getContentPane().add(botoneraAceptarCancelarJPanel, java.awt.BorderLayout.SOUTH);
        
    pack();

    }


    public void renombrarComponentes(){
//      try{datosGeneralesComunesJPanel.setBorder(new javax.swing.border.TitledBorder(aplicacion.getI18nString("cementerio.datosGenerales.tag1")));}catch(Exception e){}
  }

  
  public void addActionListener(ActionListener l) {
      this.actionListeners.add(l);
  }

  public void removeActionListener(ActionListener l) {
      this.actionListeners.remove(l);
  }

  
  private void fireActionPerformed() {
      for (Iterator i = actionListeners.iterator(); i.hasNext();) {
          ActionListener l = (ActionListener) i.next();
          l.actionPerformed(new ActionEvent(this, 0, null));
      }
  }

  
  /* Método que abre una ventana de confirmacion sobre la operacion que se esta llevando a cabo
  */
 private boolean confirmOption(){
     int ok= -1;
     ok= JOptionPane.showConfirmDialog(this, aplicacion.getI18nString("cementerio.optionpane.tag1"), aplicacion.getI18nString("cementerio.optionpane.tag2"), JOptionPane.YES_NO_OPTION);
     if (ok == JOptionPane.NO_OPTION){
         return false;
     }
     return true;
 }

 private void exitForm(java.awt.event.WindowEvent evt) {
	 setBloque(null);
     fireActionPerformed();
 }

  
  public void botoneraAceptarCancelarJPanel_actionPerformed(){
      if((!botoneraAceptarCancelarJPanel.aceptarPressed()) ||
         (botoneraAceptarCancelarJPanel.aceptarPressed() && operacion.equalsIgnoreCase(Constantes.OPERACION_MODIFICAR)?!confirmOption():false)){
      	 bloque= null;
      }
      else{
      	actualizarDatosBloque(bloque);
      }
      fireActionPerformed();
  }
    
  
  public void actualizarDatosBloque(BloqueBean bloque){
      
  	if (bloque==null) return;
      
  	bloque.setEntidad(entidadJTextField.getText().trim());
  	bloque.setNombreCementerio(cementerioJTextField.getText().trim());
  	
  	bloque.setNumColumnas(Integer.parseInt(numColumnasJTextField.getText().trim()));
  	bloque.setNumFilas(Integer.parseInt(numFilasJTextField.getText().trim()));
  	bloque.setTipo_unidades(getPatronUnidad());
  	bloque.setDescripcion(descripcionJTextField.getText().trim());
	
    setBloque(bloque);
      
  }
  
  
  public void loadDatosBloque(BloqueBean bloqueElem, boolean editable){
  	
  	if (bloqueElem == null ) return ;
  
  	numColumnasJTextField.setText(String.valueOf(bloqueElem.getNumColumnas() != -1 ? bloqueElem.getNumColumnas() : 0));
  	numColumnasJTextField.setEditable(editable);
  	
  	numFilasJTextField.setText(String.valueOf(bloqueElem.getNumFilas()!= -1 ? bloqueElem.getNumFilas() : 0));
  	numFilasJTextField.setEditable(editable);
  	
  	descripcionJTextField.setText(bloqueElem.getDescripcion()!= null ? bloqueElem.getDescripcion() : "" );
  	descripcionJTextField.setEditable(editable);
  	
    for (int i = 0; i < VDomainTipoUnidadesBloque.size(); i++) {
		DomainNode node = (DomainNode) VDomainTipoUnidadesBloque.get(i);
		if (node.getPatron().equalsIgnoreCase(String.valueOf(bloqueElem.getTipo_unidades()))){
			tipoUnidadJComboBox.setSelectedIndex(i);
		}
    }
    tipoUnidadJComboBox.setEditable(editable);
    tipoUnidadJComboBox.setEnabled(editable);
  }
 
	/**
	 * Método que carga en el panel los datos generales del bloque
	 * @param bloque a cargar en el panel
	 */
	public void load(BloqueBean bloqueElem, boolean editable) {
		if (bloqueElem == null)
			return;
		
	  	entidadJTextField.setText(bloqueElem.getEntidad() != null ? bloqueElem.getEntidad() : "" );
	  	entidadJTextField.setEditable(editable);
	  	
	  	cementerioJTextField.setText(bloqueElem.getNombreCementerio()!= null ? bloqueElem.getNombreCementerio() : "");
	  	cementerioJTextField.setEditable(editable);
		
		setBloque(bloqueElem);
		if(operacion == null) return;

      if ((operacion.equalsIgnoreCase(Constantes.OPERACION_MODIFICAR) || 
      		(operacion.equalsIgnoreCase(Constantes.OPERACION_CONSULTAR)))){

    	  loadDatosBloque(bloqueElem, editable);
      }
		
	}
  
	
	  public BloqueBean getBloque() {
		return bloque;
	  }
	
	  public void setBloque(BloqueBean bloque) {
		this.bloque = bloque;
	  }


	public int getPatronUnidad() {
		return patronUnidad;
	}

	public void setPatronUnidad(int patronUnidad) {
		this.patronUnidad = patronUnidad;
	}


	// Variables declaration - do not modify
    private javax.swing.JPanel BloqueJPanel;
    private javax.swing.JLabel cementerioJLabel;
    private javax.swing.JTextField cementerioJTextField;
    private javax.swing.JPanel datosBloqueJPanel;
    private javax.swing.JPanel datosGeneralesComunesJPanel;
    private javax.swing.JLabel descripcionJLabel;
    private javax.swing.JTextField descripcionJTextField;
    private javax.swing.JLabel entidadJLabel;
    private javax.swing.JTextField entidadJTextField;
    private javax.swing.JLabel numColumnasJLabel;
    private javax.swing.JTextField numColumnasJTextField;
    private javax.swing.JLabel numFilasJLabel;
    private javax.swing.JTextField numFilasJTextField;
    private javax.swing.JLabel tipoBloqueJLabel;
    private javax.swing.JComboBox tipoUnidadJComboBox;
    // End of variables declaration

}

