/*
 * JDialogResiduos.java
 *
 * Created on 18 de octubre de 2004, 19:26
 */

package com.geopista.app.contaminantes.vertederos;

import org.apache.log4j.Logger;

import java.util.ResourceBundle;
import java.util.Vector;
import java.awt.*;

import com.geopista.app.utilidades.TableSorted;
import com.geopista.app.utilidades.JNumberTextField;
import com.geopista.protocol.contaminantes.Residuo;

import javax.swing.table.TableColumn;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author  angeles
 */
public class JDialogResiduos extends javax.swing.JDialog {
    private Logger logger = Logger.getLogger(JDialogResiduos.class);
    private ResourceBundle messages;
    private Vector listaResiduos;
    private ResiduosTableModel	modelResiduos;
    private TableSorted sorter;
    private Residuo residuoSelected;
    private Residuo auxResiduo;
    private boolean editable=false;
    private boolean modoEdicion=false;
    private boolean modoNuevo=false;
    /** Creates new form JDialogResiduos */
    public JDialogResiduos(java.awt.Frame parent,boolean modal,  ResourceBundle messages, Vector listaResiduos,
                           boolean editable) {
        super(parent, modal);
        this.listaResiduos=listaResiduos;
        this.messages=messages;
        this.editable=editable;
        initComponents();
        actualizarModelo();
        changeScreenLang(messages);
        enabled(false);
    }

    public boolean isEditable() {
        return editable;
    }

    public void setEditable(boolean editable) {
        this.editable = editable;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanelListado = new javax.swing.JPanel();
        jScrollPaneResiduos = new javax.swing.JScrollPane();
        jTableResiduos = new javax.swing.JTable();
        jPanelBotonera = new javax.swing.JPanel();
        jButtonDelete = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonSalir= new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jPanelDatos = new javax.swing.JPanel();
        jLabelTipo = new javax.swing.JLabel();
        jTextFieldTipo = new com.geopista.app.utilidades.TextField(50);
        jLabelSituacion = new javax.swing.JLabel();
        jScrollPaneSituacion = new javax.swing.JScrollPane();
        jTextPaneSituacion = new com.geopista.app.utilidades.TextPane(255);
        jLabelRatio = new javax.swing.JLabel();
        jTextFieldRatio = new JNumberTextField(JNumberTextField.REAL,new Float(999999));
        jPanelMediaRecoleccion = new javax.swing.JPanel();
        jLabelMediaDiaria = new javax.swing.JLabel();
        jTextFieldMediaDiaria = new JNumberTextField(JNumberTextField.NUMBER,new Integer(999999999));
        jLabelMediaAnual = new javax.swing.JLabel();
        jTextFieldMediaAnual = new JNumberTextField(JNumberTextField.NUMBER,new Integer(999999999));

        getContentPane().setLayout(new java.awt.BorderLayout());


        jPanelListado.setLayout(new java.awt.BorderLayout());
        jScrollPaneResiduos.setPreferredSize(new java.awt.Dimension(454, 250));
        jScrollPaneResiduos.setViewportView(jTableResiduos);
        ListSelectionModel rowSM = jTableResiduos.getSelectionModel();
                rowSM.addListSelectionListener(new ListSelectionListener() {
                    public void valueChanged(ListSelectionEvent e) {
                        seleccionarResiduo(e);
                    }
                });

        jPanelListado.add(jScrollPaneResiduos, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelListado, java.awt.BorderLayout.NORTH);

        jPanelBotonera.add(jButtonEdit);
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        editarResiduo();
                                    }
                                });
        jPanelBotonera.add(jButtonSave);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        salvar();
                                    }
                                });
        jPanelBotonera.add(jButtonAdd);
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        anadir();
                                    }
                                });
        jPanelBotonera.add(jButtonDelete);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
                                                   public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                       eliminar();
                                                   }
                                               });

        jPanelBotonera.add(jButtonSalir);
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
                                           public void actionPerformed(java.awt.event.ActionEvent evt) {
                                               salir();
                                           }
                                       });

        getContentPane().add(jPanelBotonera, java.awt.BorderLayout.SOUTH);
        jPanelDatos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanelDatos.setMinimumSize(new java.awt.Dimension(450, 400));
        jPanelDatos.add(jLabelTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        jPanelDatos.add(jTextFieldTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 340, -1));
        jPanelDatos.add(jLabelSituacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));
        jScrollPaneSituacion.setViewportView(jTextPaneSituacion);
        jPanelDatos.add(jScrollPaneSituacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 440, 80));
        jPanelDatos.add(jLabelRatio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 90, -1));
        jPanelDatos.add(jTextFieldRatio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 140, -1));
        jPanelMediaRecoleccion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanelMediaRecoleccion.add(jLabelMediaDiaria, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 190, -1));
        jPanelMediaRecoleccion.add(jTextFieldMediaDiaria, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 140, -1));
        jPanelMediaRecoleccion.add(jLabelMediaAnual, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 60, -1));
        jPanelMediaRecoleccion.add(jTextFieldMediaAnual, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 150, -1));
        jPanelDatos.add(jPanelMediaRecoleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 440, 50));
        getContentPane().add(jPanelDatos, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    public void anadir()
    {
            modoNuevo=true;
            auxResiduo = new Residuo();
            load(auxResiduo);
            enabled(true);
    }
    public void editarResiduo()
    {
        if (residuoSelected==null)
        {
            JOptionPane optionPane= new JOptionPane(messages.getString("JDialogResiduos.mensaje.resnoseleccionado"),JOptionPane.INFORMATION_MESSAGE);
            JDialog dialog =optionPane.createDialog(this,"INFO");
            dialog.show();
            return;
        }
        enabled(true);
    }
    private boolean validar()
    {
        return true;
    }
    private void salvar()
    {
            if (!validar()){return;}
            guardarCambios(auxResiduo);
            residuoSelected=auxResiduo;
            if(modoNuevo)
                listaResiduos.add(residuoSelected);
          /*  else
            {
                  Residuo ins=getInspector(inspectorSelected.getId());
                  ins.copy(inspectorSelected);
              }*/
             enabled(false);
             modoNuevo=false;
             load(residuoSelected);
             actualizarModelo();

    }

    private void seleccionarResiduo(ListSelectionEvent e)
   {
          if (modoEdicion)
          {
                 int n = JOptionPane.showOptionDialog(this,
                                                  messages.getString("JDialogResiduos.mensaje.desechar"),
                                                  "INFO",
                                                  JOptionPane.YES_NO_OPTION,
                                                  JOptionPane.QUESTION_MESSAGE,null,null,null);
                 if (n==JOptionPane.NO_OPTION)
                     return;
                 else
                     enabled(false);
                 modoNuevo=false;
          }
          ListSelectionModel lsm = (ListSelectionModel)e.getSource();
          if (lsm.isSelectionEmpty()) { }
          else
          {
               int selectedRow = lsm.getMinSelectionIndex();
               residuoSelected=(Residuo)sorter.getValueAt(selectedRow,ResiduosTableModel.idIndex);
               if (residuoSelected==null)
               {
                   JOptionPane optionPane= new JOptionPane(
                           messages.getString("JDialogResiduos.mensaje.resnoencontrado"),JOptionPane.INFORMATION_MESSAGE);
                   JDialog dialog =optionPane.createDialog(this,"INFO");
                   dialog.show();
               }
               load(residuoSelected);
          }
      }

       private void salir()
       {
              if (modoEdicion)
              {
                     int n = JOptionPane.showOptionDialog(this,
                                                      messages.getString("JDialogResiduos.mensaje.desechar"),
                                                      "INFO",
                                                      JOptionPane.YES_NO_OPTION,
                                                      JOptionPane.QUESTION_MESSAGE,null,null,null);
                     if (n==JOptionPane.NO_OPTION)
                         return;
              }
             dispose();
       }
       private void eliminar()
      {
          if (residuoSelected==null)
          {
                   JOptionPane optionPane= new JOptionPane(messages.getString("JDialogResiduos.mensaje.resnoseleccionado"),JOptionPane.INFORMATION_MESSAGE);
                   JDialog dialog =optionPane.createDialog(this,"INFO");
                   dialog.show();
                   return;
           }
           listaResiduos.remove(residuoSelected);
           residuoSelected=null;
           enabled(false);
           load(residuoSelected);
           actualizarModelo();
     }
     public void load(Residuo resi)
       {
             if (resi==null) resi= new Residuo();
             if(resi.getDiaria()!=null)
                jTextFieldMediaDiaria.setNumber(resi.getDiaria());
             else
                jTextFieldMediaDiaria.setText("");

             if(resi.getRatio()!=null)
               jTextFieldRatio.setNumber(resi.getRatio());
             else
               jTextFieldRatio.setText("");
             if (resi.getAnual()!=null)
                jTextFieldMediaAnual.setNumber(resi.getAnual());
             else
                jTextFieldMediaAnual.setText("");
             jTextFieldTipo.setText(resi.getTipo()==null?"":resi.getTipo());
             jTextPaneSituacion.setText(resi.getSituacion()==null?"":resi.getSituacion());
             auxResiduo=resi;

       }
       public void guardarCambios(Residuo resi)
       {
           try
           {
             if (resi==null) resi= new Residuo();
             if(jTextFieldMediaDiaria.getText().length()<=0)
                resi.setDiaria(null);
             else
                resi.setDiaria(jTextFieldMediaDiaria.getNumber()==null?null:new Long(jTextFieldMediaDiaria.getNumber().longValue()));
             if(jTextFieldMediaAnual.getText().length()<=0)
                resi.setAnual(null);
             else
                resi.setAnual(jTextFieldMediaAnual.getNumber()==null?null:new Long(jTextFieldMediaAnual.getNumber().longValue()));
             if(jTextFieldRatio.getText().length()<=0)
                resi.setRatio(null);
             else
                resi.setRatio(jTextFieldRatio.getNumber()==null?null:new Float(jTextFieldRatio.getNumber().floatValue()));
             resi.setTipo(jTextFieldTipo.getText());
             resi.setSituacion(jTextPaneSituacion.getText());
           }catch(Exception e)
           {
               logger.error("Error al guardar los datos: "+e.toString());
           }

       }
    public void changeScreenLang(ResourceBundle messages) {
        try
        {
                 this.messages=messages;
                 setTitle(messages.getString("JDialogResiduos.title"));//"Residuos");
                 jPanelMediaRecoleccion.setBorder(new javax.swing.border.TitledBorder(messages.getString("JDialogResiduos.jPanelMediaRecoleccion")));//"Media recolecci\u00f3n"));
                 jLabelMediaAnual.setText(messages.getString("JDialogResiduos.jLabelMediaAnual"));//"Anual:");
                 jLabelRatio.setText(messages.getString("JDialogResiduos.jLabelRatio"));//"Ratio:");
                 jLabelMediaDiaria.setText(messages.getString("JDialogResiduos.jLabelMediaDiaria"));//"Diaria:");
                 jLabelSituacion.setText(messages.getString("JDialogResiduos.jLabelSituacion"));//"Situaci\u00f3n:");
                 jLabelTipo.setText(messages.getString("JDialogResiduos.jLabelTipo"));//"Tipo:");
                 jButtonEdit.setText(messages.getString("JDialogResiduos.jButtonEdit"));//"Editar");
                 jButtonAdd.setText(messages.getString("JDialogResiduos.jButtonAdd"));//"A\u00f1adir");
                 jButtonSave.setText(messages.getString("JDialogResiduos.jButtonSave"));//"Salvar");
                 jButtonDelete.setText(messages.getString("JDialogResiduos.jButtonDelete"));//"Borrar");
                 jButtonSalir.setText(messages.getString("JDialogResiduos.jButtonSalir"));//"Salir");
            }catch(Exception e)
            {
                 logger.error("Error al cargar la etiquetas:",e);
            }
        }

    private void enabled(boolean bEnabled)
    {
          modoEdicion=bEnabled;
          jButtonAdd.setEnabled(!bEnabled&&editable);
          jButtonDelete.setEnabled(!bEnabled&&editable);
          jButtonEdit.setEnabled(!bEnabled&&editable);
          jButtonSave.setEnabled(bEnabled&&editable);
          jTextFieldMediaDiaria.setEditable(bEnabled&&editable);
          jTextFieldRatio.setEditable(bEnabled&&editable);
          jTextFieldMediaAnual.setEditable(bEnabled&&editable);
          jTextFieldTipo.setEditable(bEnabled&&editable);
          jTextPaneSituacion.setEnabled(bEnabled&&editable);
          jTextPaneSituacion.setBackground(!jTextPaneSituacion.isEnabled()?Color.LIGHT_GRAY:Color.WHITE);


    }
     private void actualizarModelo()
    {
            modelResiduos= new ResiduosTableModel();
            modelResiduos.setModelData(listaResiduos);
            sorter = new TableSorted(modelResiduos);
            sorter.setTableHeader(jTableResiduos.getTableHeader());
            jTableResiduos.setModel(sorter);
            TableColumn column = jTableResiduos.getColumnModel().getColumn(0);
            column.setPreferredWidth(5);
            column = jTableResiduos.getColumnModel().getColumn(3);
            column.setPreferredWidth(1);
            column.setWidth(1);
            column.setResizable(false);
            column.setMaxWidth(1);
            jTableResiduos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JLabel jLabelMediaAnual;
    private javax.swing.JLabel jLabelMediaDiaria;
    private javax.swing.JLabel jLabelRatio;
    private javax.swing.JLabel jLabelSituacion;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JPanel jPanelBotonera;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelListado;
    private javax.swing.JPanel jPanelMediaRecoleccion;
    private javax.swing.JScrollPane jScrollPaneResiduos;
    private javax.swing.JScrollPane jScrollPaneSituacion;
    private javax.swing.JTable jTableResiduos;
    private JNumberTextField jTextFieldMediaDiaria;
    private JNumberTextField jTextFieldRatio;
    private JNumberTextField jTextFieldMediaAnual;
    private com.geopista.app.utilidades.TextField jTextFieldTipo;
    private com.geopista.app.utilidades.TextPane jTextPaneSituacion;
    // End of variables declaration//GEN-END:variables
    
}
