/*
 * InsertUpdateScaleRangePanel.java
 *
 * Created on 28 de julio de 2004, 17:58
 */
package com.geopista.style.sld.ui.impl.panels;

import javax.swing.JOptionPane;

import com.geopista.app.AppContext;

import es.enxenio.util.controller.Action;
import es.enxenio.util.controller.ActionForward;
import es.enxenio.util.controller.FrontController;
import es.enxenio.util.controller.FrontControllerFactory;
import es.enxenio.util.controller.Request;
import es.enxenio.util.controller.Session;
import es.enxenio.util.ui.impl.AbstractPanel;

/**
 *
 * @author  Enxenio S.L.
 */
public class InsertUpdateScaleRangePanel extends AbstractPanel implements ActionForward {

    private static AppContext aplicacion = (AppContext) AppContext.getApplicationContext();
	public void configure(Request request) {
		
		Session session = FrontControllerFactory.getSession();
		scaleRangeMinTxt.setText((String)session.getAttribute("MinScale"));
		scaleRangeMaxTxt.setText((String)session.getAttribute("MaxScale"));
	}

	public boolean windowClosing() {
		Request theRequest = FrontControllerFactory.createRequest();
		FrontController fc =  FrontControllerFactory.getFrontController();
		Action theAction = fc.getAction("GetBack"); 
		ActionForward theActionForward = theAction.doExecute(theRequest);
		_container.forward(theActionForward, theRequest);
		return false;
	}

	public String getTitle() {
			return aplicacion.getI18nString("ScaleRange");		
	}
    
    /** Creates new form InsertUpdateScaleRangePanel */
    public InsertUpdateScaleRangePanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        scaleRangePanel = new javax.swing.JPanel();
        scaleRangeMinLbl = new javax.swing.JLabel();
        scaleRangeMaxLbl = new javax.swing.JLabel();
        scaleRangeMinTxt = new javax.swing.JTextField();
        scaleRangeMaxTxt = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        setPreferredSize(new java.awt.Dimension(400, 125));
        scaleRangePanel.setLayout(new java.awt.GridBagLayout());

        scaleRangeMinLbl.setText("Escala m\u00ednima: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        scaleRangePanel.add(scaleRangeMinLbl, gridBagConstraints);

        scaleRangeMaxLbl.setText("Escala m\u00e1xima: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        scaleRangePanel.add(scaleRangeMaxLbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        scaleRangePanel.add(scaleRangeMinTxt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        scaleRangePanel.add(scaleRangeMaxTxt, gridBagConstraints);

        add(scaleRangePanel, java.awt.BorderLayout.CENTER);

        okBtn.setText("Aceptar");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        buttonPanel.add(okBtn);

        cancelBtn.setText("Cancelar");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        buttonPanel.add(cancelBtn);

        add(buttonPanel, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
		if (checkValues()) {
			Request theRequest = FrontControllerFactory.createRequest();
			if (!scaleRangeMinTxt.getText().equals(""))
				theRequest.setAttribute("MinScale", new Double(scaleRangeMinTxt.getText()));
			if (!scaleRangeMaxTxt.getText().equals(""))
				theRequest.setAttribute("MaxScale", new Double(scaleRangeMaxTxt.getText()));
			FrontController fc =  FrontControllerFactory.getFrontController();
			Action theAction = fc.getAction("CreateScaleRange");
			ActionForward theActionForward = theAction.doExecute(theRequest);
			_container.forward(theActionForward, theRequest);
		}
    }//GEN-LAST:event_okBtnActionPerformed

	private boolean checkValues() {
		
		boolean valuesAreCorrect = true;
		StringBuffer errorMessage = new StringBuffer();
		double minScale = 0;
		double maxScale = Double.MAX_VALUE;
		Session session = FrontControllerFactory.getSession();
		if (!scaleRangeMinTxt.getText().equals("")) {
			try {
				minScale = Double.parseDouble(scaleRangeMinTxt.getText());	
				if (minScale < 0) {
					errorMessage.append("El valor de la mínima escala debe ser positivo\n");
					valuesAreCorrect = false;		
				}
			}
			catch (NumberFormatException e) {
				errorMessage.append("El valor de la mínima escala debe ser numérico\n");
				valuesAreCorrect = false;
			}
		}
		if (!scaleRangeMaxTxt.getText().equals("")) {
			try {
				maxScale = Double.parseDouble(scaleRangeMaxTxt.getText());
				if (maxScale < 0) {
					errorMessage.append("El valor de la máxima escala debe ser positivo\n");
					valuesAreCorrect = false;		
				}							
			}
			catch (NumberFormatException e) {
				errorMessage.append("El valor de la máxima escala debe ser numérico\n");
				valuesAreCorrect = false;
			}
		}
		if (minScale > maxScale) {
			errorMessage.append("La escala mínima no puede ser mayor que la escala máxima\n");
			valuesAreCorrect = false;			
		}
		if (!valuesAreCorrect) {
			JOptionPane.showMessageDialog(null, "Los siguientes valores son incorrectos:\n" + errorMessage.toString());
		}
		return valuesAreCorrect;
	}

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
		Request theRequest = FrontControllerFactory.createRequest();
		FrontController fc =  FrontControllerFactory.getFrontController();
		Action theAction = fc.getAction("GetBack"); 
		ActionForward theActionForward = theAction.doExecute(theRequest);
		_container.forward(theActionForward, theRequest);
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton okBtn;
    private javax.swing.JLabel scaleRangeMaxLbl;
    private javax.swing.JTextField scaleRangeMaxTxt;
    private javax.swing.JLabel scaleRangeMinLbl;
    private javax.swing.JTextField scaleRangeMinTxt;
    private javax.swing.JPanel scaleRangePanel;
    // End of variables declaration//GEN-END:variables
    
}
