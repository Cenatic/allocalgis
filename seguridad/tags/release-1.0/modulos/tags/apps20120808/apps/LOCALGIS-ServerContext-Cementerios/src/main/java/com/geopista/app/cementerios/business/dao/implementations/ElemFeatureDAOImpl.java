package com.geopista.app.cementerios.business.dao.implementations;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;

import com.geopista.app.cementerios.business.dao.DAO;
import com.geopista.app.cementerios.business.dao.interfaces.ElemFeatureDAO;
import com.geopista.app.cementerios.business.vo.ElemFeature;
import com.geopista.app.cementerios.business.vo.ElemFeatureExample;

public class ElemFeatureDAOImpl extends DAO implements ElemFeatureDAO {

    /**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public ElemFeatureDAOImpl() {
		super();
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @throws SQLException 
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public int deleteByExample(ElemFeatureExample example) throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"cementerio_elem_feature.ibatorgenerated_deleteByExample",
				example);
		return rows;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public int deleteByPrimaryKey(Integer id) throws SQLException {
		ElemFeature key = new ElemFeature();
		key.setId(id);
		int rows = getSqlMapClientTemplate().delete(
				"cementerio_elem_feature.ibatorgenerated_deleteByPrimaryKey",
				key);
		return rows;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public Integer insert(ElemFeature record) throws SQLException {
		Object newKey = getSqlMapClientTemplate().insert(
				"cementerio_elem_feature.ibatorgenerated_insert", record);
		return (Integer) newKey;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public Integer insertSelective(ElemFeature record) throws SQLException {
		Object newKey = getSqlMapClientTemplate().insert(
				"cementerio_elem_feature.ibatorgenerated_insertSelective",
				record);
		return (Integer) newKey;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public List selectByExample(ElemFeatureExample example) throws SQLException {
		List list = getSqlMapClientTemplate().queryForList(
				"cementerio_elem_feature.ibatorgenerated_selectByExample",
				example);
		return list;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public ElemFeature selectByPrimaryKey(Integer id) throws SQLException {
		ElemFeature key = new ElemFeature();
		key.setId(id);
		ElemFeature record = (ElemFeature) getSqlMapClientTemplate()
				.queryForObject(
						"cementerio_elem_feature.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public int updateByExampleSelective(ElemFeature record,
			ElemFeatureExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate()
				.update("cementerio_elem_feature.ibatorgenerated_updateByExampleSelective",
						parms);
		return rows;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public int updateByExample(ElemFeature record, ElemFeatureExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"cementerio_elem_feature.ibatorgenerated_updateByExample",
				parms);
		return rows;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public int updateByPrimaryKeySelective(ElemFeature record) throws SQLException {
		int rows = getSqlMapClientTemplate()
				.update("cementerio_elem_feature.ibatorgenerated_updateByPrimaryKeySelective",
						record);
		return rows;
	}


	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	public int updateByPrimaryKey(ElemFeature record) throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"cementerio_elem_feature.ibatorgenerated_updateByPrimaryKey",
				record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table cementerio.elem_feature
	 * @ibatorgenerated  Wed Jun 22 13:25:56 CEST 2011
	 */
	private static class UpdateByExampleParms extends ElemFeatureExample{
		private Object record;

		public UpdateByExampleParms(Object record, ElemFeatureExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}

	public int selectByLastSeqKey() throws SQLException {
		Integer lastKey = (Integer) getSqlMapClientTemplate()
				.queryForObject(
						"cementerio_elem_feature.selectByLastSeqKey",
						null);
		return lastKey.intValue();
	}

	
	public List selectAll() throws SQLException {
	
		List list = getSqlMapClientTemplate().
		queryForList("cementerio_elem_feature.selectAll", null);
		return list;
		
	}
	
	public ElemFeature selectByElemAndCementerio (Integer idElem, Integer idCementerio) throws SQLException{
		ElemFeature key = new ElemFeature();
		
		HashMap map = new HashMap();
		map.put("idElem", idElem);
		map.put("idCementerio", idCementerio);
		
		key = (ElemFeature) getSqlMapClientTemplate().queryForObject(
				"cementerio_elem_feature.selectByElemAndCementerio", map);
		return key;
		
	}
	
	public ElemFeature selectByElemCementerioLayerAndFeature (Integer idElem, Integer idCementerio, String idLayer, String idFeature) throws SQLException{
		ElemFeature key = new ElemFeature();
		
		HashMap map = new HashMap();
		map.put("idElem", idElem);
		map.put("idCementerio", idCementerio);
		map.put("idLayer", idLayer);
		map.put("idFeature", idFeature);
		
		key = (ElemFeature) getSqlMapClientTemplate().queryForObject(
				"cementerio_elem_feature.selectByElemCementerioLayerAndFeature", map);
		return key;
		
	}
	
	
    
}