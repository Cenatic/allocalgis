package com.geopista.app.cementerios.business.dao.implementations;

import java.sql.SQLException;
import java.util.List;

import com.geopista.app.cementerios.business.dao.DAO;
import com.geopista.app.cementerios.business.dao.interfaces.ConcesionDAO;
import com.geopista.app.cementerios.business.vo.Concesion;
import com.geopista.app.cementerios.business.vo.ConcesionExample;


public class ConcesionDAOImpl extends DAO implements ConcesionDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public ConcesionDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @throws SQLException 
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public int deleteByPrimaryKey(Integer id) throws SQLException {
		Concesion key = new Concesion();
		key.setId(id);
		int rows = getSqlMapClientTemplate().delete(
				"cementerio_concesion.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public Integer insert(Concesion record)  throws SQLException {
		Object newKey = getSqlMapClientTemplate().insert(
				"cementerio_concesion.ibatorgenerated_insert", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public Integer insertSelective(Concesion record)  throws SQLException {
		Object newKey = getSqlMapClientTemplate().insert(
				"cementerio_concesion.ibatorgenerated_insertSelective", record);
		return (Integer) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public List selectByExample(ConcesionExample example)  throws SQLException {
		List list = getSqlMapClientTemplate()
				.queryForList(
						"cementerio_concesion.ibatorgenerated_selectByExample",
						example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public Concesion selectByPrimaryKey(Integer id)  throws SQLException {
		Concesion key = new Concesion();
		key.setId(id);
		Concesion record = (Concesion) getSqlMapClientTemplate()
				.queryForObject(
						"cementerio_concesion.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public int updateByPrimaryKeySelective(Concesion record)  throws SQLException {
		int rows = getSqlMapClientTemplate()
				.update("cementerio_concesion.ibatorgenerated_updateByPrimaryKeySelective",
						record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.concesion
	 * @ibatorgenerated  Tue Jul 05 09:50:09 CEST 2011
	 */
	public int updateByPrimaryKey(Concesion record)  throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"cementerio_concesion.ibatorgenerated_updateByPrimaryKey",
				record);
		return rows;
	}

	/**
	 * ultimo id de secuencia
	 * @throws SQLException 
	 */
	public int selectByLastSeqKey() throws SQLException {
		Integer lastKey = (Integer) getSqlMapClientTemplate()
				.queryForObject(
						"cementerio_concesion.selectByLastSeqKey",
						null);
		return lastKey.intValue();
	}

	/**
	 * Seleccion por id de unidad de enterramiento
	 * @throws SQLException 
	 */
	public Concesion selectByUnidad(Integer id_unidad) throws SQLException {
		Concesion record = (Concesion) getSqlMapClientTemplate()
				.queryForObject(
						"cementerio_concesion.selectByUnidad",
						id_unidad);
		return record;
	}
	
	/**
	 * Devuelve todos los elementos de la tabla concesion 
	 * @throws SQLException 
	 */
	public List selectAll() throws SQLException {
		List list = getSqlMapClientTemplate()
		.queryForList(
				"cementerio_concesion.selectAll",
				null);
		return list;
	}

}