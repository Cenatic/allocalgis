package com.geopista.app.cementerios.business.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class HistoricoDifuntosExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public HistoricoDifuntosExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	protected HistoricoDifuntosExample(HistoricoDifuntosExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table cementerio.historico_difuntos
	 * @ibatorgenerated  Wed Jun 29 17:04:16 CEST 2011
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andIdDifuntoIsNull() {
			addCriterion("id_difunto is null");
			return this;
		}

		public Criteria andIdDifuntoIsNotNull() {
			addCriterion("id_difunto is not null");
			return this;
		}

		public Criteria andIdDifuntoEqualTo(Integer value) {
			addCriterion("id_difunto =", value, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoNotEqualTo(Integer value) {
			addCriterion("id_difunto <>", value, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoGreaterThan(Integer value) {
			addCriterion("id_difunto >", value, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_difunto >=", value, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoLessThan(Integer value) {
			addCriterion("id_difunto <", value, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoLessThanOrEqualTo(Integer value) {
			addCriterion("id_difunto <=", value, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoIn(List values) {
			addCriterion("id_difunto in", values, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoNotIn(List values) {
			addCriterion("id_difunto not in", values, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoBetween(Integer value1, Integer value2) {
			addCriterion("id_difunto between", value1, value2, "idDifunto");
			return this;
		}

		public Criteria andIdDifuntoNotBetween(Integer value1, Integer value2) {
			addCriterion("id_difunto not between", value1, value2, "idDifunto");
			return this;
		}

		public Criteria andTipoIsNull() {
			addCriterion("tipo is null");
			return this;
		}

		public Criteria andTipoIsNotNull() {
			addCriterion("tipo is not null");
			return this;
		}

		public Criteria andTipoEqualTo(Integer value) {
			addCriterion("tipo =", value, "tipo");
			return this;
		}

		public Criteria andTipoNotEqualTo(Integer value) {
			addCriterion("tipo <>", value, "tipo");
			return this;
		}

		public Criteria andTipoGreaterThan(Integer value) {
			addCriterion("tipo >", value, "tipo");
			return this;
		}

		public Criteria andTipoGreaterThanOrEqualTo(Integer value) {
			addCriterion("tipo >=", value, "tipo");
			return this;
		}

		public Criteria andTipoLessThan(Integer value) {
			addCriterion("tipo <", value, "tipo");
			return this;
		}

		public Criteria andTipoLessThanOrEqualTo(Integer value) {
			addCriterion("tipo <=", value, "tipo");
			return this;
		}

		public Criteria andTipoIn(List values) {
			addCriterion("tipo in", values, "tipo");
			return this;
		}

		public Criteria andTipoNotIn(List values) {
			addCriterion("tipo not in", values, "tipo");
			return this;
		}

		public Criteria andTipoBetween(Integer value1, Integer value2) {
			addCriterion("tipo between", value1, value2, "tipo");
			return this;
		}

		public Criteria andTipoNotBetween(Integer value1, Integer value2) {
			addCriterion("tipo not between", value1, value2, "tipo");
			return this;
		}

		public Criteria andIdElemIsNull() {
			addCriterion("id_elem is null");
			return this;
		}

		public Criteria andIdElemIsNotNull() {
			addCriterion("id_elem is not null");
			return this;
		}

		public Criteria andIdElemEqualTo(Integer value) {
			addCriterion("id_elem =", value, "idElem");
			return this;
		}

		public Criteria andIdElemNotEqualTo(Integer value) {
			addCriterion("id_elem <>", value, "idElem");
			return this;
		}

		public Criteria andIdElemGreaterThan(Integer value) {
			addCriterion("id_elem >", value, "idElem");
			return this;
		}

		public Criteria andIdElemGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_elem >=", value, "idElem");
			return this;
		}

		public Criteria andIdElemLessThan(Integer value) {
			addCriterion("id_elem <", value, "idElem");
			return this;
		}

		public Criteria andIdElemLessThanOrEqualTo(Integer value) {
			addCriterion("id_elem <=", value, "idElem");
			return this;
		}

		public Criteria andIdElemIn(List values) {
			addCriterion("id_elem in", values, "idElem");
			return this;
		}

		public Criteria andIdElemNotIn(List values) {
			addCriterion("id_elem not in", values, "idElem");
			return this;
		}

		public Criteria andIdElemBetween(Integer value1, Integer value2) {
			addCriterion("id_elem between", value1, value2, "idElem");
			return this;
		}

		public Criteria andIdElemNotBetween(Integer value1, Integer value2) {
			addCriterion("id_elem not between", value1, value2, "idElem");
			return this;
		}

		public Criteria andFechaOperacionIsNull() {
			addCriterion("fecha_operacion is null");
			return this;
		}

		public Criteria andFechaOperacionIsNotNull() {
			addCriterion("fecha_operacion is not null");
			return this;
		}

		public Criteria andFechaOperacionEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_operacion =", value,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionNotEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_operacion <>", value,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionGreaterThan(Date value) {
			addCriterionForJDBCDate("fecha_operacion >", value,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_operacion >=", value,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionLessThan(Date value) {
			addCriterionForJDBCDate("fecha_operacion <", value,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_operacion <=", value,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionIn(List values) {
			addCriterionForJDBCDate("fecha_operacion in", values,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionNotIn(List values) {
			addCriterionForJDBCDate("fecha_operacion not in", values,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_operacion between", value1, value2,
					"fechaOperacion");
			return this;
		}

		public Criteria andFechaOperacionNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_operacion not between", value1,
					value2, "fechaOperacion");
			return this;
		}

		public Criteria andComentarioIsNull() {
			addCriterion("comentario is null");
			return this;
		}

		public Criteria andComentarioIsNotNull() {
			addCriterion("comentario is not null");
			return this;
		}

		public Criteria andComentarioEqualTo(String value) {
			addCriterion("comentario =", value, "comentario");
			return this;
		}

		public Criteria andComentarioNotEqualTo(String value) {
			addCriterion("comentario <>", value, "comentario");
			return this;
		}

		public Criteria andComentarioGreaterThan(String value) {
			addCriterion("comentario >", value, "comentario");
			return this;
		}

		public Criteria andComentarioGreaterThanOrEqualTo(String value) {
			addCriterion("comentario >=", value, "comentario");
			return this;
		}

		public Criteria andComentarioLessThan(String value) {
			addCriterion("comentario <", value, "comentario");
			return this;
		}

		public Criteria andComentarioLessThanOrEqualTo(String value) {
			addCriterion("comentario <=", value, "comentario");
			return this;
		}

		public Criteria andComentarioLike(String value) {
			addCriterion("comentario like", value, "comentario");
			return this;
		}

		public Criteria andComentarioNotLike(String value) {
			addCriterion("comentario not like", value, "comentario");
			return this;
		}

		public Criteria andComentarioIn(List values) {
			addCriterion("comentario in", values, "comentario");
			return this;
		}

		public Criteria andComentarioNotIn(List values) {
			addCriterion("comentario not in", values, "comentario");
			return this;
		}

		public Criteria andComentarioBetween(String value1, String value2) {
			addCriterion("comentario between", value1, value2, "comentario");
			return this;
		}

		public Criteria andComentarioNotBetween(String value1, String value2) {
			addCriterion("comentario not between", value1, value2, "comentario");
			return this;
		}
	}
}