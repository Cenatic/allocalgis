CREATE TABLE DOMAINCATEGORY(ID Numeric(10) not null,
              ID_DESCRIPTION Numeric(7) not null);
ALTER TABLE DOMAINCATEGORY ADD PRIMARY KEY (ID);
ALTER TABLE DOMAINCATEGORY ADD FOREIGN KEY (ID_DESCRIPTION) REFERENCES
                           DICTIONARY(ID_VOCABLO);


ALTER TABLE DOMAINS ADD COLUMN ID_CATEGORY Numeric (10);
ALTER TABLE DOMAINS ADD FOREIGN KEY (ID_CATEGORY) REFERENCES
  DOMAINCATEGORY (ID);

 
alter table iusercnt drop column timestamp;
alter table iusercnt drop column timeclose;
alter table iusercnt add column timestamp timestamp;
alter table iusercnt add column timeclose timestamp;

alter table iuseruserhdr drop column upddate;
alter table iuseruserhdr drop column crtndate;
alter table iuseruserhdr add column upddate timestamp;
alter table iuseruserhdr add column crtndate timestamp;


insert into query_catalog (id, query) values('getestructuramunicipio',
'select domains.id as id_domain,domainnodes.id as id_node, domainnodes.pattern as pattern,domainnodes.id_description as id_descripcion, dictionary.locale as locale, dictionary.traduccion as traduccion from domains,domainnodes,dictionary where upper(domains.name)=upper(?) and domainnodes.type=? and domainnodes.id_domain=domains.id and domainnodes.id_description= dictionary.id_vocablo
               and domainnodes.id_municipio =? order by domainnodes.id');
INSERT INTO QUERY_CATALOG(ID,QUERY) VALUES ('getestructura','select domains.id as id_domain ,domainnodes.id as id_node, domainnodes.pattern as pattern, dictionary.locale as locale, 
dictionary.id_vocablo as id_descripcion, dictionary.traduccion 
as traduccion 
from domains,domainnodes,dictionary where upper(domains.name)=upper(?) and domainnodes.type=? and domainnodes.id_domain=domains.id and domainnodes.id_description= dictionary.id_vocablo
and domainnodes.id_municipio is null order by domainnodes.id');   

insert into query_catalog (id, query) values ('getcategorias','select domaincategory.id as id ,domaincategory.id_description as iddes,dictionary.locale, dictionary.traduccion
                         from domaincategory,dictionary where  domaincategory.id_description= dictionary.id_vocablo
                         order by domaincategory.id');

insert into query_catalog values ('conexiones','select iusercnt.userid, appgeopista.def, iusercnt.timestamp , iusercnt.timeclose
 from iusercnt,appgeopista where iusercnt.appid=appgeopista.appid and
 iusercnt.userid=? order by iusercnt.timestamp desc');

update query_catalog  set query='select domainnodes.id_domain as id_domain, domainnodes.id as id_node, domainnodes.pattern as pattern,domainnodes.ID_DESCRIPTION as id_descripcion, domainnodes.type as type, domainnodes.PARENTDOMAIN as parentdomain,dictionary.locale as locale, dictionary.traduccion as traduccion, domainnodes.id_municipio  from  domainnodes LEFT OUTER JOIN dictionary ON (domainnodes.id_description=dictionary.id_vocablo) where domainnodes.id_municipio=? or domainnodes.id_municipio is null order by id_domain, id_node'
where id='alldominionodes';            

update query_catalog set query='select domains.id as id_domain, domains.name as name, domains.id_category from domains order by id_category, id_domain'
where id='alldominios';


DROP TABLE CI_TELEPHONE_VOICE
; 

CREATE TABLE CI_TELEPHONE_VOICE ( 
TELEPHONE_VOICE_ID NUMERIC(10) NOT NULL,
RESPONSIBLEPARTY_ID NUMERIC(10) NOT NULL,
VOICE VARCHAR(20)
) 
;



ALTER TABLE CI_TELEPHONE_VOICE 
ADD CONSTRAINT PK_CI_TELEPHONE_VOICE 
PRIMARY KEY (TELEPHONE_VOICE_ID) 
;




DROP TABLE CI_TELEPHONE_FACSIMILE
; 

CREATE TABLE CI_TELEPHONE_FACSIMILE ( 
TELEPHONE_FACSIMILE_ID NUMERIC(10) NOT NULL,
RESPONSIBLEPARTY_ID NUMERIC(10) NOT NULL,
FACSIMILE VARCHAR(20)
) 
;



ALTER TABLE CI_TELEPHONE_FACSIMILE 
ADD CONSTRAINT PK_CI_TELEPHONE_FACSIMILE 
PRIMARY KEY (TELEPHONE_FACSIMILE_ID) 
;


DROP TABLE DELIVERYPOINT
; 

CREATE TABLE DELIVERYPOINT ( 
DELIVERYPOINT_ID NUMERIC(10) NOT NULL,
RESPONSIBLEPARTY_ID NUMERIC(10) NOT NULL,
DELIVERYPOINT VARCHAR(255) NOT NULL
) 
;



ALTER TABLE DELIVERYPOINT 
ADD CONSTRAINT PK_DELIVERYPOINT 
PRIMARY KEY (DELIVERYPOINT_ID) 
;


DROP TABLE ELECTRONICMAILADDRESS
; 

CREATE TABLE ELECTRONICMAILADDRESS ( 
ELECTRONICMAILADDRESS_ID NUMERIC(10) NOT NULL,
RESPONSIBLEPARTY_ID NUMERIC(10) NOT NULL,
ELECTRONICMAILADDRESS VARCHAR(255) NOT NULL
) 
;



ALTER TABLE ELECTRONICMAILADDRESS 
ADD CONSTRAINT PK_ELECTRONICMAILADDRESS 
PRIMARY KEY (ELECTRONICMAILADDRESS_ID) 
;







DROP TABLE CI_RESPONSIBLEPARTY;
CREATE TABLE ci_responsibleparty
(
  responsibleparty_id numeric(10) NOT NULL,
  individualname varchar(255),
  organisationname varchar(50),
  positionname varchar(50),
  id_municipio numeric(5),
  ci_contact_ci_address_city varchar(50),
  ci_contact_ci_address_administrativearea varchar(50),
  ci_contact_ci_address_postalcode varchar(10),
  ci_contact_ci_address_country varchar(50),
  ci_contact_onlineresource_id numeric(10),
  ci_contact_hoursofservice varchar(50),
  ci_contact_contactinstructions varchar(255),
  CONSTRAINT pk_ci_responsibleparty PRIMARY KEY (responsibleparty_id)
) WITH OIDS;

DROP TABLE CI_ONLINERESOURCE
; 

CREATE TABLE CI_ONLINERESOURCE ( 
ONLINERESOURCE_ID NUMERIC(10) NOT NULL,
LINKAGE VARCHAR(255) NOT NULL,
PROTOCOL VARCHAR(50),
APLICATIONPROFILE VARCHAR(50),
NAME VARCHAr(50),
DESCRIPTION VARCHAR(255),
ONLINEFUNCTIONCODE_ID NUMERIC(10)
) 
;



ALTER TABLE CI_ONLINERESOURCE 
ADD CONSTRAINT PK_CI_ONLINERESOURCE 
PRIMARY KEY (ONLINERESOURCE_ID) 
;



ALTER TABLE CI_RESPONSIBLEPARTY ADD 
  CONSTRAINT FK_KEY_ONLINE_PARTY FOREIGN KEY (ci_contact_onlineresource_id) 
    REFERENCES CI_ONLINERESOURCE (onlineresource_id);

ALTER TABLE ELECTRONICMAILADDRESS ADD 
  CONSTRAINT FK_KEY_MAIL_RESPONSIBLE FOREIGN KEY (RESPONSIBLEPARTY_ID) 
    REFERENCES CI_RESPONSIBLEPARTY  (RESPONSIBLEPARTY_id);
    
    
ALTER TABLE DELIVERYPOINT ADD 
  CONSTRAINT FK_KEY_DELIVERYPOINT_RESPONSIBLE FOREIGN KEY (RESPONSIBLEPARTY_ID) 
    REFERENCES CI_RESPONSIBLEPARTY (RESPONSIBLEPARTY_id);
    
ALTER TABLE CI_TELEPHONE_FACSIMILE ADD 
  CONSTRAINT FK_KEY_FAX_RESPONSIBLE FOREIGN KEY (RESPONSIBLEPARTY_ID) 
    REFERENCES CI_RESPONSIBLEPARTY (RESPONSIBLEPARTY_id);
    
    
ALTER TABLE CI_TELEPHONE_VOICE ADD 
  CONSTRAINT FK_KEY_TELEFONO_RESPONSIBLE FOREIGN KEY (RESPONSIBLEPARTY_ID)
    REFERENCES CI_RESPONSIBLEPARTY (RESPONSIBLEPARTY_id);


INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
6, 'CI_RESPONSIBLEPARTY', 'RESPONSIBLEPARTY_ID', 10001, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
7, 'CI_ONLINERESOURCE', 'ONLINERESOURCE_ID', 10001, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
8, 'ELECTRONICMAILADDRESS', 'ELECTRONICMAILADDRESS_ID', 10001, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
9, 'DELIVERYPOINT', 'DELIVERYPOINT_ID', 101, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
10, 'CI_TELEPHONE_VOICE', 'TELEPHONE_VOICE_ID', 10001, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
11, 'CI_TELEPHONE_FACSIMILE', 'TELEPHONE_FACSIMILE_ID', 10001, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
12, 'MD_METADATA', 'FILEIDENTIFIER', 10001, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
13, 'MD_DATAIDENTIFICATION', 'IDENTIFICATION_ID', 10001, 1, 1, 999999999, 'T'); 


INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
14, 'CI_CITATION', 'CITATION_ID', 10001, 1, 1, 999999999, 'T'); 

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
15, 'CI_DATE', 'DATE_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
16, 'MD_BROWSEGRAPHIC', 'BROWSEGRAPHIC_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
17, 'MD_RESOLUTION', 'RESOLUTION_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
18, 'EX_EXTENT', 'EXTENT_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
19, 'EX_VERTICALEXTENT', 'VERTICALEXTENT_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
20, 'EX_GEOGRAPHICBOUNDINGBOX', 'GEOGRAPHICBOUNDINGBOX_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
21, 'MD_LEGALCONSTRAINT', 'LEGALCONSTRAINT_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
22, 'MD_FORMAT', 'FORMAT_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
23, 'LI_LINAGE', 'LINAGE_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
24, 'LI_SOURCE', 'SOURCE_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
25, 'LI_PROCESSSTEP', 'PROCESSSTEP_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
26, 'DQ_ELEMENT', 'ELEMENT_ID', 10001, 1, 1, 999999999, 'T');

INSERT INTO SEQUENCES ( ID_SEQUENCE, TABLENAME, FIELD, VALUE, INCREMENTVALUE, MINIMUMVALUE,
MAXIMUMVALUE, CIRCULAR ) VALUES ( 
27, 'DQ_DATAQUALITY', 'DATAQUALITY_ID', 10001, 1, 1, 999999999, 'T');



DROP TABLE MD_METADATA cascade
; 
CREATE TABLE MD_METADATA ( 
FILEIDENTIFIER VARCHAR(255) NOT NULL,
LANGUAGE_ID NUMERIC(10),
SCOPECODE_ID NUMERIC(10),
CHARACTERSET VARCHAR(32),
DATESTAMP DATE NOT NULL,
METADATASTANDARDNAME VARCHAR(255),
METADATASTANDARDVERSION VARCHAR(255),
PARENTIDENTIFIER VARCHAR(255),
ID_MUNICIPIO NUMERIC(5),
ID_LAYER int4
) 
;
ALTER TABLE MD_METADATA 
ADD CONSTRAINT PK_MD_Metadata 
PRIMARY KEY (FILEIDENTIFIER) 
;
ALTER TABLE MD_METADATA ADD 
  CONSTRAINT  FK_LANGUAGE_ID FOREIGN KEY (LANGUAGE_ID)
    REFERENCES DOMAINNODES (ID);

ALTER TABLE MD_METADATA ADD 
  CONSTRAINT  FK_SCOPECODE_ID FOREIGN KEY (SCOPECODE_ID)
    REFERENCES DOMAINNODES (ID);


DROP TABLE R_METADATA_RESPONSIBLEPARTY
; 

CREATE TABLE R_METADATA_RESPONSIBLEPARTY ( 
FILEIDENTIFIER VARCHAR(255) NOT NULL,
RESPONSIBLEPARTY_ID NUMERIC(10) NOT NULL,
ROLECODE_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE R_METADATA_RESPONSIBLEPARTY 
ADD CONSTRAINT PK_R_METADATA_RESPONSIBLEPARTY 
PRIMARY KEY (FILEIDENTIFIER, RESPONSIBLEPARTY_ID) 
;
ALTER TABLE R_METADATA_RESPONSIBLEPARTY ADD 
  CONSTRAINT FK_FILEIDENTIFIER FOREIGN KEY (FILEIDENTIFIER)
    REFERENCES MD_METADATA (FILEIDENTIFIER);
ALTER TABLE R_METADATA_RESPONSIBLEPARTY ADD 
  CONSTRAINT FK_RESPONSIBLEPARTY_ID FOREIGN KEY (RESPONSIBLEPARTY_ID)
    REFERENCES CI_RESPONSIBLEPARTY (RESPONSIBLEPARTY_ID);
ALTER TABLE R_METADATA_RESPONSIBLEPARTY ADD 
  CONSTRAINT  FK_ROLECODEID FOREIGN KEY (ROLECODE_ID)
    REFERENCES DOMAINNODES (ID);



DROP TABLE CI_CITATION
; 

CREATE TABLE CI_CITATION ( 
CITATION_ID NUMERIC(10) NOT NULL,
TITLE VARCHAR(255) NOT NULL
) 
;

ALTER TABLE CI_CITATION 
ADD CONSTRAINT PK_CI_CITATION 
PRIMARY KEY (CITATION_ID) 
;


DROP TABLE CI_DATE
; 

CREATE TABLE CI_DATE ( 
DATE_ID NUMERIC(10) NOT NULL,
CITATION_ID NUMERIC(10) NOT NULL,
DATETYPECODE_ID NUMERIC(10) NOT NULL,
DATE DATE NOT NULL
) 
;

ALTER TABLE CI_DATE 
ADD CONSTRAINT PK_CI_DATE 
PRIMARY KEY (DATE_ID) 
;

ALTER TABLE CI_DATE ADD 
  CONSTRAINT  FK_DATETYPECODE_ID FOREIGN KEY (DATETYPECODE_ID)
    REFERENCES DOMAINNODES (ID);

ALTER TABLE CI_DATE ADD 
  CONSTRAINT  FK_CITATION_ID FOREIGN KEY (CITATION_ID)
    REFERENCES CI_CITATION (CITATION_ID);






DROP TABLE MD_DATAIDENTIFICATION
; 
CREATE TABLE MD_DATAIDENTIFICATION ( 
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
FILEIDENTIFIER VARCHAR(255),
CITATION_ID NUMERIC(10) NOT NULL,
ABSTRACT VARCHAR(255) NOT NULL,
PURPOSE VARCHAR(255),
CHARACTERSET VARCHAR(50)
) 
;
ALTER TABLE MD_DATAIDENTIFICATION 
ADD CONSTRAINT PK_MD_DATAIDENTIFICATION 
PRIMARY KEY (IDENTIFICATION_ID) 
;
ALTER TABLE MD_DATAIDENTIFICATION ADD 
  CONSTRAINT FK_FILEIDENTIFIER FOREIGN KEY (FILEIDENTIFIER)
    REFERENCES MD_METADATA (FILEIDENTIFIER);
ALTER TABLE MD_DATAIDENTIFICATION ADD 
  CONSTRAINT  FK_CITATION_ID FOREIGN KEY (CITATION_ID)
    REFERENCES CI_CITATION (CITATION_ID);
create index IDX_FileIdentifier on MD_DATAIDENTIFICATION(fileidentifier);


DROP TABLE R_IDENTIFICATION_LANGUAGE
; 
CREATE TABLE R_IDENTIFICATION_LANGUAGE ( 
IDENTIFICATION_ID  NUMERIC(10)NOT NULL,
LANGUAGE_ID  NUMERIC(10) NOT NULL
) 
;
ALTER TABLE R_IDENTIFICATION_LANGUAGE 
ADD CONSTRAINT PK_R_IDENTIFICATION_LANGUAGE 
PRIMARY KEY (IDENTIFICATION_ID, LANGUAGE_ID) 
;
ALTER TABLE R_IDENTIFICATION_LANGUAGE ADD 
  CONSTRAINT  FK_LANGUAGE_ID FOREIGN KEY (LANGUAGE_ID)
    REFERENCES DOMAINNODES (ID);
ALTER TABLE R_IDENTIFICATION_LANGUAGE ADD 
  CONSTRAINT  FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);


DROP TABLE R_IDENTIFICATION_RESPONSIBLEPARTY
; 
CREATE TABLE R_IDENTIFICATION_RESPONSIBLEPARTY ( 
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
RESPONSIBLEPARTY_ID NUMERIC(10) NOT NULL,
ROLECODE_ID NUMERIC(10)
) 
;
ALTER TABLE R_IDENTIFICATION_RESPONSIBLEPARTY 
ADD CONSTRAINT PK_R_IDENTIFICATION_RESPONSIBLEPARTY 
PRIMARY KEY (IDENTIFICATION_ID, RESPONSIBLEPARTY_ID) 
;
ALTER TABLE R_IDENTIFICATION_RESPONSIBLEPARTY ADD 
  CONSTRAINT FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);
ALTER TABLE R_IDENTIFICATION_RESPONSIBLEPARTY ADD 
  CONSTRAINT FK_RESPONSIBLEPARTY_ID FOREIGN KEY (RESPONSIBLEPARTY_ID)
    REFERENCES CI_RESPONSIBLEPARTY (RESPONSIBLEPARTY_ID);
ALTER TABLE R_IDENTIFICATION_RESPONSIBLEPARTY ADD 
  CONSTRAINT  FK_ROLECODEID FOREIGN KEY (ROLECODE_ID)
    REFERENCES DOMAINNODES (ID);



DROP TABLE R_IDENTIFICATION_SPATIALRETYPECODE
; 
CREATE TABLE R_IDENTIFICATION_SPATIALRETYPECODE ( 
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
SPATIALREPRESENTATIONTYPECODE_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE R_IDENTIFICATION_SPATIALRETYPECODE 
ADD CONSTRAINT PK_R_IDENTIFICATION_SPATIALRETYPECODE 
PRIMARY KEY (IDENTIFICATION_ID, SPATIALREPRESENTATIONTYPECODE_ID) 
;
ALTER TABLE R_IDENTIFICATION_SPATIALRETYPECODE ADD 
  CONSTRAINT FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);
ALTER TABLE R_IDENTIFICATION_SPATIALRETYPECODE ADD 
  CONSTRAINT  FK_SPATIAL_ID FOREIGN KEY (SPATIALREPRESENTATIONTYPECODE_ID)
    REFERENCES DOMAINNODES (ID);
    
    
    
DROP TABLE R_IDENTIFICATION_TOPICCATEGORYCODE
; 

CREATE TABLE R_IDENTIFICATION_TOPICCATEGORYCODE ( 
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
TOPICCATEGORYCODE_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE R_IDENTIFICATION_TOPICCATEGORYCODE 
ADD CONSTRAINT PK_R_IDENTIFICATION_TOPICCATEGORYCODE 
PRIMARY KEY (IDENTIFICATION_ID, TOPICCATEGORYCODE_ID) 
;
ALTER TABLE R_IDENTIFICATION_TOPICCATEGORYCODE ADD 
  CONSTRAINT FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);
ALTER TABLE R_IDENTIFICATION_TOPICCATEGORYCODE ADD 
  CONSTRAINT  FK_TOPICCATEGORY_ID FOREIGN KEY (TOPICCATEGORYCODE_ID)
    REFERENCES DOMAINNODES (ID);

    
    
DROP TABLE MD_BROWSEGRAPHIC
; 
CREATE TABLE MD_BROWSEGRAPHIC ( 
BROWSEGRAPHIC_ID NUMERIC(10) NOT NULL,
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
FILENAME VARCHAR(255) NOT NULL
) 
;
ALTER TABLE MD_BROWSEGRAPHIC 
ADD CONSTRAINT PK_MD_BROWSEGRAPHIC 
PRIMARY KEY (BROWSEGRAPHIC_ID) 
;
ALTER TABLE MD_BROWSEGRAPHIC ADD 
  CONSTRAINT FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);
    
    
DROP TABLE MD_RESOLUTION
; 

CREATE TABLE MD_RESOLUTION ( 
RESOLUTION_ID NUMERIC(10) NOT NULL,
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
DENOMINATOR NUMERIC(8) NOT NULL,
DISTANCE VARCHAR(255)
) 
;
ALTER TABLE MD_RESOLUTION 
ADD CONSTRAINT PK_MD_RESOLUTION 
PRIMARY KEY (RESOLUTION_ID) 
;
ALTER TABLE MD_RESOLUTION ADD 
  CONSTRAINT FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);

    
   
DROP TABLE EX_EXTENT
; 

CREATE TABLE EX_EXTENT ( 
EXTENT_ID NUMERIC(10) NOT NULL,
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
DESCRIPTION VARCHAR(255)
) 
;
ALTER TABLE EX_EXTENT 
ADD CONSTRAINT PK_EX_EXTENT 
PRIMARY KEY (EXTENT_ID) 
;
ALTER TABLE EX_EXTENT ADD 
  CONSTRAINT FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);


DROP TABLE EX_GEOGRAPHICBOUNDINGBOX
; 
CREATE TABLE EX_GEOGRAPHICBOUNDINGBOX ( 
GEOGRAPHICBOUNDINGBOX_ID NUMERIC(10) NOT NULL,
EXTENT_ID NUMERIC(10) NOT NULL,
EXTENTTYPECODE NUMERIC(1),
WESTBOUNDLONGITUDE NUMERIC(8,3),
EASTBOUNDLONGITUDE NUMERIC(8,3),
SOUTHBOUNDLONGITUDE NUMERIC(8,3),
NORTHBOUNDLONGITUDE NUMERIC(8,3)
) 
;
ALTER TABLE EX_GEOGRAPHICBOUNDINGBOX 
ADD CONSTRAINT PK_EX_GEOGRAPHICBOUNDINGBOX 
PRIMARY KEY (GEOGRAPHICBOUNDINGBOX_ID) 
;
ALTER TABLE EX_GEOGRAPHICBOUNDINGBOX ADD 
  CONSTRAINT FK_EXTENT_ID FOREIGN KEY (EXTENT_ID)
    REFERENCES EX_EXTENT (EXTENT_ID);
    
    
DROP TABLE EX_VERTICALEXTENT
; 
CREATE TABLE EX_VERTICALEXTENT ( 
VERTICALEXTENT_ID NUMERIC(10) NOT NULL,
EXTENT_ID NUMERIC(10) NOT NULL,
MINIMUMVALUE NUMERIC(10) NOT NULL,
MAXIMUMVALUE NUMERIC(10) NOT NULL,
UNITOFMESURE VARCHAR(50) NOT NULL
) 
;
ALTER TABLE EX_VERTICALEXTENT 
ADD CONSTRAINT PK_EX_VERTICALEXTENT 
PRIMARY KEY (VERTICALEXTENT_ID) 
;
ALTER TABLE EX_VERTICALEXTENT ADD 
  CONSTRAINT FK_EXTENT_ID FOREIGN KEY (EXTENT_ID)
    REFERENCES EX_EXTENT (EXTENT_ID);


DROP TABLE MD_LEGALCONSTRAINT
; 

CREATE TABLE MD_LEGALCONSTRAINT ( 
LEGALCONSTRAINT_ID NUMERIC(10) NOT NULL,
IDENTIFICATION_ID NUMERIC(10) NOT NULL,
USELIMITATION VARCHAR(255),
OTHERCONSTRAINTS VARCHAR(255)
) 
;
ALTER TABLE MD_LEGALCONSTRAINT 
ADD CONSTRAINT PK_MD_LEGALCONSTRAINT 
PRIMARY KEY (LEGALCONSTRAINT_ID) 
;
ALTER TABLE MD_LEGALCONSTRAINT ADD 
  CONSTRAINT FK_IDENTIFICATION_ID FOREIGN KEY (IDENTIFICATION_ID)
    REFERENCES MD_DATAIDENTIFICATION (IDENTIFICATION_ID);


DROP TABLE R_ACCESSCONSTRAINTS
; 

CREATE TABLE R_ACCESSCONSTRAINTS ( 
LEGALCONSTRAINT_ID NUMERIC(10) NOT NULL,
RESTRICTIONCODE_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE R_ACCESSCONSTRAINTS 
ADD CONSTRAINT PK_R_ACCESSCONTRAINTS 
PRIMARY KEY (LEGALCONSTRAINT_ID, RESTRICTIONCODE_ID) 
;
ALTER TABLE R_ACCESSCONSTRAINTS ADD 
  CONSTRAINT  FK_RESTRICTIONCODE FOREIGN KEY (RESTRICTIONCODE_ID)
    REFERENCES DOMAINNODES (ID);
    
ALTER TABLE R_ACCESSCONSTRAINTS ADD 
  CONSTRAINT  FK_LEGAL FOREIGN KEY (LEGALCONSTRAINT_ID)
    REFERENCES MD_LEGALCONSTRAINT (LEGALCONSTRAINT_ID);
    
    
DROP TABLE R_USECONSTRAINTS
; 

CREATE TABLE R_USECONSTRAINTS ( 
LEGALCONSTRAINT_ID NUMERIC(10) NOT NULL,
RESTRICTIONCODE_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE R_USECONSTRAINTS 
ADD CONSTRAINT PK_R_USECONTRAINTS 
PRIMARY KEY (LEGALCONSTRAINT_ID, RESTRICTIONCODE_ID) 
;
ALTER TABLE R_USECONSTRAINTS ADD 
  CONSTRAINT  FK_RESTRICTIONCODE FOREIGN KEY (RESTRICTIONCODE_ID)
    REFERENCES DOMAINNODES (ID);
    
ALTER TABLE R_USECONSTRAINTS ADD 
  CONSTRAINT  FK_LEGAL FOREIGN KEY (LEGALCONSTRAINT_ID)
    REFERENCES MD_LEGALCONSTRAINT (LEGALCONSTRAINT_ID);
    

DROP TABLE MD_DIGITALTRANSFEROPTIONS
; 
CREATE TABLE MD_DIGITALTRANSFEROPTIONS ( 
FILEIDENTIFIER NUMERIC(10) NOT NULL,
ONLINERESOURCE_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE MD_DIGITALTRANSFEROPTIONS 
ADD CONSTRAINT PK_MD_DIGITALTRANSFEROPTIONS 
PRIMARY KEY (FILEIDENTIFIER, ONLINERESOURCE_ID) 
;
ALTER TABLE MD_DIGITALTRANSFEROPTIONS ADD 
  CONSTRAINT  FK_FILEIDENTIFIER FOREIGN KEY (FILEIDENTIFIER)
    REFERENCES MD_METADATA (FILEIDENTIFIER);
ALTER TABLE MD_DIGITALTRANSFEROPTIONS ADD 
  CONSTRAINT  FK_LEGAL FOREIGN KEY (ONLINERESOURCE_ID)
    REFERENCES CI_ONLINERESOURCE (ONLINERESOURCE_ID);


    
DROP TABLE MD_FORMAT; 
CREATE TABLE MD_FORMAT ( 
FORMAT_ID NUMERIC(10) NOT NULL,
FILEIDENTIFIER NUMERIC(10) NOT NULL,
NAME VARCHAR(50) NOT NULL,
VERSION VARCHAR(255) NOT NULL
) 
;

ALTER TABLE MD_FORMAT 
ADD CONSTRAINT PK_FORMAT_ID 
PRIMARY KEY (FORMAT_ID) 
;
ALTER TABLE MD_FORMAT ADD 
  CONSTRAINT  FK_FILEIDENTIFIER FOREIGN KEY (FILEIDENTIFIER)
    REFERENCES MD_METADATA (FILEIDENTIFIER);
    


DROP TABLE LI_LINAGE; 

CREATE TABLE LI_LINAGE ( 
LINAGE_ID NUMERIC(10) NOT NULL,
STATEMENT VARCHAR(50)
);
ALTER TABLE LI_LINAGE 
ADD CONSTRAINT PK_LI_LINAGE 
PRIMARY KEY (LINAGE_ID) 
;


DROP TABLE LI_SOURCE; 
CREATE TABLE LI_SOURCE ( 
SOURCE_ID NUMERIC(10) NOT NULL,
LINAGE_ID NUMERIC(10) NOT NULL,
DESCRIPTION VARCHAR(255) NOT NULL
) 
;
ALTER TABLE LI_SOURCE 
ADD CONSTRAINT PK_LI_SOURCE 
PRIMARY KEY (SOURCE_ID) 
;
ALTER TABLE LI_SOURCE ADD 
  CONSTRAINT  FK_LINAGE FOREIGN KEY (LINAGE_ID)
    REFERENCES LI_LINAGE (LINAGE_ID);
    
    
DROP TABLE LI_PROCESSSTEP; 

CREATE TABLE LI_PROCESSSTEP ( 
PROCESSSTEP_ID NUMERIC(10) NOT NULL,
DESCRIPTION VARCHAR(255) NOT NULL,
LINAGE_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE LI_PROCESSSTEP 
ADD CONSTRAINT PK_LI_PROCESSSTEP 
PRIMARY KEY (PROCESSSTEP_ID) 
;
ALTER TABLE LI_PROCESSSTEP ADD 
  CONSTRAINT  FK_LINAGE FOREIGN KEY (LINAGE_ID)
    REFERENCES LI_LINAGE (LINAGE_ID);

    




DROP TABLE DQ_DATAQUALITY
; 
CREATE TABLE DQ_DATAQUALITY ( 
DATAQUALITY_ID NUMERIC(10) NOT NULL,
FILEIDENTIFIER NUMERIC(10) NOT NULL,
LINAGE_ID NUMERIC(10)
) 
;

ALTER TABLE DQ_DATAQUALITY 
ADD CONSTRAINT PK_DQ_DATAQUALITY 
PRIMARY KEY (DATAQUALITY_ID) 
;
ALTER TABLE DQ_DATAQUALITY ADD 
  CONSTRAINT  FK_FILEIDENTIFIER FOREIGN KEY (FILEIDENTIFIER)
    REFERENCES MD_METADATA (FILEIDENTIFIER);
ALTER TABLE DQ_DATAQUALITY ADD 
  CONSTRAINT  FK_LINAGE FOREIGN KEY (LINAGE_ID)
    REFERENCES LI_LINAGE (LINAGE_ID);


DROP TABLE DQ_ELEMENT; 

CREATE TABLE DQ_ELEMENT ( 
ELEMENT_ID NUMERIC(10) NOT NULL,
DATAQUALITY_ID NUMERIC(10),
SUBCLASS_ID NUMERIC(10),
VALUEUNIT VARCHAR(50),
VALUE VARCHAR(50),
CITATION_ID NUMERIC(10),
EXPLANATION VARCHAR(255),
PASS NUMERIC(1));

ALTER TABLE DQ_ELEMENT 
ADD CONSTRAINT PK_DQ_ELEMENT 
PRIMARY KEY (ELEMENT_ID);
ALTER TABLE DQ_ELEMENT ADD 
  CONSTRAINT  FK_DATAQUALITY FOREIGN KEY (DATAQUALITY_ID)
    REFERENCES DQ_DATAQUALITY (DATAQUALITY_ID);
ALTER TABLE DQ_ELEMENT ADD 
  CONSTRAINT  FK_SUBCLASS FOREIGN KEY (SUBCLASS_ID)
    REFERENCES DOMAINNODES (ID);
ALTER TABLE DQ_ELEMENT ADD 
  CONSTRAINT  FK_CITATION FOREIGN KEY (CITATION_ID)
    REFERENCES CI_CITATION (CITATION_ID);

CREATE TABLE R_METADATA_REFERENCESYSTEM ( 
FILEIDENTIFIER NUMERIC(10) NOT NULL,
REFERENCESYSTEM_ID NUMERIC(10) NOT NULL
) 
;
ALTER TABLE R_METADATA_REFERENCESYSTEM 
ADD CONSTRAINT PK_R_REFERENCESYTEM 
PRIMARY KEY (FILEIDENTIFIER, REFERENCESYSTEM_ID) 
;
ALTER TABLE R_METADATA_REFERENCESYSTEM ADD 
  CONSTRAINT  FK_FILEIDENTIFIER FOREIGN KEY (FILEIDENTIFIER)
    REFERENCES MD_METADATA (FILEIDENTIFIER);
    
ALTER TABLE R_METADATA_REFERENCESYSTEM ADD
  CONSTRAINT  FK_LEGAL FOREIGN KEY (REFERENCESYSTEM_ID)
    REFERENCES DOMAINNODES (ID);
    
