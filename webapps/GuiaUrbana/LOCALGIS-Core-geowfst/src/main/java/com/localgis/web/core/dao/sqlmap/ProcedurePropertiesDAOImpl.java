/**
 * ProcedurePropertiesDAOImpl.java
 * © MINETUR, Government of Spain
 * This program is part of LocalGIS
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.localgis.web.core.dao.sqlmap;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.ibatis.dao.client.DaoManager;
import com.ibatis.dao.client.template.SqlMapDaoTemplate;
import com.localgis.web.core.dao.ProcedurePropertiesDAO;
import com.localgis.web.core.model.ProcedureProperty;
import com.localgis.web.core.model.ProcedurePropertyKey;

public class ProcedurePropertiesDAOImpl extends SqlMapDaoTemplate implements ProcedurePropertiesDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public ProcedurePropertiesDAOImpl(DaoManager daoManager) {
        super(daoManager);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public void deleteByPrimaryKey(ProcedurePropertyKey key) {
        delete("geowfst_procedure_properties.ibatorgenerated_deleteByPrimaryKey", key);
    }
    
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public void deleteByPrimaryKeyId(ProcedurePropertyKey key) {
        delete("geowfst_procedure_properties.ibatorgenerated_deleteByPrimaryKeyId", key);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public void insert(ProcedureProperty record) {
        insert("geowfst_procedure_properties.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public void insertSelective(ProcedureProperty record) {
        insert("geowfst_procedure_properties.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public ProcedureProperty selectByPrimaryKey(ProcedurePropertyKey key) {
        ProcedureProperty record = (ProcedureProperty) queryForObject("geowfst_procedure_properties.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }
    
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public List<ProcedureProperty> selectByProcedureId(String procedureId) {
    	ProcedurePropertyKey key = new ProcedurePropertyKey();
    	key.setId(procedureId);
    	List<ProcedureProperty> record = (List<ProcedureProperty>) queryForList("geowfst_procedure_properties.ibatorgenerated_selectByProcedureId", key);
        return record;
    }
    
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public HashMap<String, ProcedureProperty> selectByProcedureIdMap(String procedureId) {
    	ProcedurePropertyKey key = new ProcedurePropertyKey();
    	key.setId(procedureId);
    	HashMap<String, ProcedureProperty> record = (HashMap<String, ProcedureProperty>) queryForMap("geowfst_procedure_properties.ibatorgenerated_selectByProcedureId", key, "property");
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public void updateByPrimaryKeySelective(ProcedureProperty record) {
        update("geowfst_procedure_properties.ibatorgenerated_updateByPrimaryKeySelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table geowfst.procedure_properties
     *
     * @ibatorgenerated Thu Mar 14 10:24:30 CET 2013
     */
    public void updateByPrimaryKey(ProcedureProperty record) {
        update("geowfst_procedure_properties.ibatorgenerated_updateByPrimaryKey", record);
    }
}