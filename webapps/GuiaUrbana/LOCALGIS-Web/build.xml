<?xml version="1.0" encoding="UTF-8"?>
<project name="Localgis-Guiaurbana" default="distVersionToInstall" basedir=".">

	<property file="build.properties" />

	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="lib/ant/ant-contrib-1.0b2.jar"/>
	<taskdef resource="org/satec/ant/taskdefs/setup/setupApplicacion.properties" classpath="lib/ant/setupApplication.jar"/>
	<target name="distrib">
	
		<!--
		<property name="project.name" value="localgis-guiaurbana"/>
		<property name="project.version" value="1.4.0"/>
		<property name="entorno" value="MODELO_PRO"/>
	
		<echo>${project.name}</echo>
		-->
		
		<IsPropertyDefined property="${entorno}" addproperty="entorno.undefined"/>
		
		<echo>${entorno} ${entorno.undefined}</echo>
		<if>
		<equals arg1="${entorno.undefined}" arg2="true"/>
			<then>
				<echo>No se realizan sustituciones de parametros. Especifique el profile adecuado. Entorno ${entorno}</echo>
				<echo>mvn package -P profile </echo>	
				<antcall target="deleteFiles"/>
			</then>
			<else>
				
				<antcall target="distVersionToDistrib">
					<param name="entorno" value="${entorno}"/>	
				</antcall>
					
			</else>
		</if>
		
	</target>
	
    <target name="clean">
    	<delete dir="target/localgisDistributions" includeemptydirs="true" />
    </target>

    <target name="prepare">
        <mkdir dir="target/localgisDistributions" />
        <mkdir dir="target/localgisDistributions/${project.name}" />
    	<unzip dest="target/localgisDistributions/${project.name}" src="target/${project.name}-${project.version}.war"/>
	</target>
    
    <target name="distVersionToInstall" depends="clean, prepare">
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.directory=(.*)" replace="mapserver.directory=${localgis.installation.geopista_root_mapserver}/mapserver" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.url.server=http://(.*)" replace="mapserver.url.server=http://${localgis.installation.ip_mapserver}:${localgis.installation.port_mapserver}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.configFile.ortofotosDirectory=(.*)" replace="mapserver.configFile.ortofotosDirectory=${localgis.installation.geopista_root}/Ortofotos" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.username=(.*)" replace="db.username=${localgis.installation.db.username}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.password=(.*)" replace="db.password=${localgis.installation.db.password}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.host=(.*)" replace="db.host=${localgis.installation.db.host}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.port=(.*)" replace="db.port=${localgis.installation.db.port}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.name=(.*)" replace="db.name=${localgis.installation.db.name}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^guiaurbana.urlPublicMap=http://(.*)" replace="guiaurbana.urlPublicMap=http://${localgis.installation.tomcat.ip}:${localgis.installation.tomcat.port}/localgis-guiaurbana/public/showMap.do" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^guiaurbana.urlPrivateMap=http://(.*)" replace="guiaurbana.urlPublicMap=http://${localgis.installation.tomcat.ip}:${localgis.installation.tomcat.port}/localgis-guiaurbana/private/showMap.do" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^streetInfo.service=(.*)" replace="streetInfo.service=http://${localgis.installation.tomcat.ip}:${localgis.installation.tomcat.port}/LOCALGIS-wfs-mne/services?" />                              
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^openlayers.singleTile=(.*)" replace="openlayers.singleTile=${localgis.installation.openlayers.singleTile}" />                              
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^openlayers.buffer=(.*)" replace="openlayers.buffer=${localgis.installation.openlayers.buffer}" />                              
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="http://localhost:8082/localgis-wfsg-sample" replace="http://${localgis.installation.tomcat.ip}:${localgis.installation.tomcat.port}/localgis-wfsg-sample" />
        <zip destfile="target/${project.name}-installer.zip" basedir="target/localgisDistributions/"/>
        <antcall target="clean"/>
    </target>

    <target name="distVersionToTaglib" depends="clean, prepare" description="Target que genera un zip con todo lo necesario para usar los tags lib">
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.directory=(.*)" replace="mapserver.directory=${localgis.geopista_root}/mapserver" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.url.server=http://(.*)" replace="mapserver.url.server=http://${localgis.ip_mapserver}:${localgis.port_mapserver}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.configFile.ortofotosDirectory=(.*)" replace="mapserver.configFile.ortofotosDirectory=${localgis.ortofotos_directory}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.username=(.*)" replace="db.username=${localgis.db.username}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.password=(.*)" replace="db.password=${localgis.db.password}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.host=(.*)" replace="db.host=${localgis.db.host}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.port=(.*)" replace="db.port=${localgis.db.port}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.name=(.*)" replace="db.name=${localgis.db.name}" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^guiaurbana.urlPublicMap=http://(.*)" replace="guiaurbana.urlPublicMap=http://${localgis.tomcat.ip}:${localgis.tomcat.port}/localgis-guiaurbana/public/showMap.do" />
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgis.properties" flags="gm" match="^guiaurbana.urlPrivateMap=http://(.*)" replace="guiaurbana.urlPublicMap=http://${localgis.tomcat.ip}:${localgis.tomcat.port}/localgis-guiaurbana/private/showMap.do" />
        
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^streetInfo.service=(.*)" replace="streetInfo.service=http://localhost:${localgis.tomcat.port}/LOCALGIS-wfs-mne/services?" />                              
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^openlayers.singleTile=(.*)" replace="openlayers.singleTile=${localgis.openlayers.singleTile}" />                              
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^openlayers.buffer=(.*)" replace="openlayers.buffer=${localgis.openlayers.buffer}" />                              
    	
        <mkdir dir="target/localgisDistributions/tmp"/>
        <copy todir="target/localgisDistributions/tmp">
            <fileset dir="target/localgisDistributions/${project.name}/WEB-INF/classes">
                <include name="com/localgis/web/tag/**/*" />
                <include name="com/localgis/web/servlets/**/*" />
                <include name="com/localgis/web/filters/SetConfigurationFilter.class" />
                <include name="com/localgis/web/util/LocalgisManagerBuilderSingleton.class" />
                <include name="com/localgis/web/openlayers/LayerOpenlayers.class" />
                <include name="com/localgis/web/util/WebUtils.class" />
            </fileset>
        </copy>
        <mkdir dir="target/localgisDistributions/tmp/META-INF"/>
        <copy todir="target/localgisDistributions/tmp/META-INF">
            <fileset dir="target/localgisDistributions/${project.name}/WEB-INF" includes="localgis.tld" />
        </copy>
        <jar jarfile="target/localgisDistributions/${project.name}/WEB-INF/lib/localgis-tags.jar" basedir="target/localgisDistributions/tmp" />
        <delete dir="target/localgisDistributions/tmp" includeemptydirs="true" />
        
        <zip destfile="target/localgis-tags.zip" basedir="target/localgisDistributions/${project.name}">
            <include name="WEB-INF/classes/localgis.properties"/>
            <include name="WEB-INF/lib/localgis-tags.jar"/>
            <include name="WEB-INF/lib/localgis-core-${project.version}.jar"/>
            <include name="WEB-INF/lib/ibatis-common-2.jar"/>
            <include name="WEB-INF/lib/ibatis-dao-2.jar"/>
            <include name="WEB-INF/lib/ibatis-sqlmap-2.jar"/>
            <include name="WEB-INF/lib/jdom.jar"/>
            <include name="WEB-INF/lib/log4j-1.2.15.jar"/>
            <include name="WEB-INF/lib/postgresql-8.0-311.jdbc3.jar"/>
            <include name="WEB-INF/lib/mapscript.jar"/>
            <include name="WEB-INF/lib/commons-httpclient-3.1.jar"/>
            <include name="WEB-INF/lib/commons-logging-1.0.4.jar"/>
            <include name="WEB-INF/lib/commons-codec-1.3.jar"/>
            <include name="js/openlayers-2.5/**/*"/>
        </zip>
        <antcall target="clean"/>
    </target>
	
	
	<target name="deleteFiles">
		<!--
		<delete dir="target/${project.name}-${project.version}/js/reports"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/struts-config_report.xml"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/dwr_report.xml"/>
		<delete file="target/${project.name}-${project.version}/js/openlayers-2.5/lib/OpenLayers_report.js"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/classes/com/localgis/web/actions/DownloadReportAction.class"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/classes/com/localgis/web/actionsforms/DownloadReportActionForm.class"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/classes/com/localgis/web/reports/GetFeatureReport.class"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/classes/com/localgis/web/actions/ReportAction.class"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/classes/com/localgis/web/actionsforms/ReportActionForm.class"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/classes/com/localgis/web/dwr/ReportService.class"/>
		<delete file="target/${project.name}-${project.version}/WEB-INF/classes/com/localgis/web/servlets/GetFeatureInfoProxy_report.class"/>
		<delete file="target/${project.name}-${project.version}/img/report.jpg"/>		
		<delete file="target/${project.name}-${project.version}/img/special_report.jpg"/>	
		<delete file="target/${project.name}-${project.version}/showMap_report.jsp"/>	
		-->
	</target>
	<!--
		Distribucion para un entorno determinado
	-->
	<target name="distVersionToDistrib">
		<if>
		<available file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" type="file" />
			<then>
			<echo>El fichero a sustituir existe</echo>
			</then>
			<else>
				<echo>El fichero a sustituir no existe target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties</echo>
				<ExitApps></ExitApps>
			</else>
			
		</if>
		
		
		<!-- Borramos algun fichero que no nos interese distribuir-->
		<antcall target="deleteFiles"/>
		
		
		<!-- localgis.properties-->
		<propertycopy name="cadena" from="${entorno}.db.username" override="true"/>
		<replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.username=(.*)" replace="db.username=${cadena}" />
		
		<propertycopy name="cadena" from="${entorno}.db.password" override="true"/>
		<replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.password=(.*)" replace="db.password=${cadena}" />

		<propertycopy name="cadena" from="${entorno}.db.host" override="true"/>
		<replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.host=(.*)" replace="db.host=${cadena}" />
		
		<propertycopy name="cadena" from="${entorno}.db.port" override="true"/>
		<replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.port=(.*)" replace="db.port=${cadena}" />
		
		<propertycopy name="cadena" from="${entorno}.db.name" override="true"/>
		<replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^db.name=(.*)" replace="db.name=${cadena}" />
		
		<propertycopy name="cadena" from="${entorno}.mapserver.directory" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.directory=(.*)" replace="mapserver.directory=${cadena}" />
		
		<propertycopy name="cadena" from="${entorno}.mapserver.url.server" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.url.server=(.*)" replace="mapserver.url.server=${cadena}" />

		<propertycopy name="cadena" from="${entorno}.mapserver.configFile.ortofotosDirectory" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^mapserver.configFile.ortofotosDirectory=(.*)" replace="mapserver.configFile.ortofotosDirectory=${cadena}" />

		<propertycopy name="cadena" from="${entorno}.guiaurbana.urlPublicMap" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^guiaurbana.urlPublicMap=(.*)" replace="guiaurbana.urlPublicMap=${cadena}" />
		
		<propertycopy name="cadena" from="${entorno}.guiaurbana.urlPrivateMap" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^guiaurbana.urlPrivateMap=(.*)" replace="guiaurbana.urlPrivateMap=${cadena}" />
		
		<propertycopy name="cadena" from="${entorno}.wpsRutas" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^wpsRutas=(.*)" replace="wpsRutas=${cadena}"/>
		
		<propertycopy name="cadena" from="${entorno}.sso.connection.server" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^sso.connection.server=(.*)" replace="sso.connection.server=${cadena}" />		
		
		<propertycopy name="cadena" from="${entorno}.TrustStore" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^TrustStore=(.*)" replace="TrustStore=${cadena}" />		

		<!-- localgisweb.properties-->
		<propertycopy name="cadena" from="${entorno}.streetInfo.service" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^streetInfo.service=(.*)" replace="streetInfo.service=${cadena}" />		

		<propertycopy name="cadena" from="${entorno}.INDEX_DIR" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgisweb.properties" flags="gm" match="^INDEX_DIR=(.*)" replace="INDEX_DIR=${cadena}" />		
		
		<!-- portal.properties-->
		<propertycopy name="cadena" from="${entorno}.ids_municipios" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/portal.properties" flags="gm" match="^ids_municipios=(.*)" replace="ids_municipios=${cadena}" />		
	
		<propertycopy name="cadena" from="${entorno}.ids_otras_entidades" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/portal.properties" flags="gm" match="^ids_otras_entidades=(.*)" replace="ids_otras_entidades=${cadena}" />		

		<propertycopy name="cadena" from="${entorno}.id_asturias" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/portal.properties" flags="gm" match="^id_asturias=(.*)" replace="id_asturias=${cadena}" />		

		<propertycopy name="cadena" from="${entorno}.REPORTS_DIRECTORY" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^reports.directory.temp=(.*)" replace="reports.directory.temp=${cadena}" />		
	
		<propertycopy name="cadena" from="${entorno}.REPORTS_PLANTILLAS_GENERICAS" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^reports.plantillas.genericas=(.*)" replace="reports.plantillas.genericas=${cadena}" />	
		
		<propertycopy name="cadena" from="${entorno}.REPORTS_PLANTILLAS_ENTIDAD" override="true"/>
        <replaceregexp file="target/${project.name}-${project.version}/WEB-INF/classes/localgis.properties" flags="gm" match="^reports.plantillas.entidad=(.*)" replace="reports.plantillas.entidad=${cadena}" />	
		
		<propertycopy name="cadena" from="${entorno}.ALMACEN_DOCUMENTOS" override="true"/>
	    <replaceregexp file="target/${project.name}-${project.version}/portal.properties" flags="gm" match="^ruta_almacen_documentos=(.*)" replace="ruta_almacen_documentos=${cadena}" />	

		
		<tstamp>
			<format property="hora" pattern="yyyy-MM-dd hh:mm aa"/>
		</tstamp>
		<touch file="target/${project.name}-${project.version}/tstamp.txt.${hora}"/>
		
		<zip destfile="target/${project.name}-${project.version}.war" basedir="target/${project.name}-${project.version}/"/>
		<!--
		
        <replaceregexp file="target/localgisDistributions/${project.name}/WEB-INF/classes/localgisweb.properties" flags="gm" match="http://localhost:8082/localgis-wfsg-sample" replace="http://${localgis.installation.tomcat.ip}:${localgis.installation.tomcat.port}/localgis-wfsg-sample" />

		-->
		<!--Lo copiamos al directorio de patches-->
		
		<property environment="env"/>
		
		<if>
					<equals arg1="${entorno.undefined}" arg2="true"/>
						<then>
						</then>
						<else>
							<if>
								<equals arg1="${localgis.installation.misdocumentos.activado}" arg2="true"/>
									<then>
									<property name="misdocumentos" value="${localgis.installation.misdocumentos}"/>
									<echo>localgis.installation.misdocumentos.activado=true</echo>
									</then>
									<else>
										<echo>localgis.installation.misdocumentos.activado=false</echo>
										<property name="misdocumentos" value="C:\Documents and Settings\${env.USERNAME}\Mis documentos"/>
									</else>	
							</if>
							<tstamp>
									<format property="patch" pattern="yyyy-MM-dd"/>
								</tstamp>
								<echo>Directorio default patches:${patch}</echo>
								<property name="directorioFinal" value="${misdocumentos}\0.Localgis.Patches\${patch}"/>
								<mkdir dir="${directorioFinal}"/>
								<copy todir="${directorioFinal}/war" failonerror="false">
										<fileset dir="target" includes="*.war"/>
								</copy>	
						</else>
				</if>
		
		
	
    </target>

</project>